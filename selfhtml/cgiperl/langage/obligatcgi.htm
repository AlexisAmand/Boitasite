<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>SELFHTML: CGI/Perl / &Eacute;l&eacute;ments de langage Perl / Instructions CGI n&eacute;cessaires en Perl</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Comment un script Perl devient il un script CGI et que doit il envoyer au navigateur appelant.">
<meta name="keywords"       content="SELFHTML, Perl, CGI, HTTP-Header, print">
<meta name="author"         content="Stefan M&uuml;nz, selfhtml@teamone.de">
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<meta name="DC.Publisher"   content="Serge Fran&ccedil;ois, selfhtml@selfhtml.com.fr">
<meta name="DC.Date"        content="2003-01-27T08:00+00:00">
<meta name="DC.Identifier"  content="http://selfhtml.selfhtml.com.fr/cgiperl/langage/obligatcgi.htm">
<meta name="DC.Language"    content="fr">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.Create" content="2003-01-27T08:00+00:00">
<meta name="SELF.Version"   content="1">
<meta name="SELF.Pagetype"  content="Information">
<meta name="SELF.Path"      content="SELFHTML == ../../index.htm // CGI/Perl == ../index.htm // &Eacute;l&eacute;ments de langage Perl == index.htm">
<!-- Matomo -->
<script type="text/javascript">
  var _paq = window._paq = window._paq || [];
  /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="//matomo.boitasite.com/";
    _paq.push(['setTrackerUrl', u+'matomo.php']);
    _paq.push(['setSiteId', '1']);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
<!-- End Matomo Code -->
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#AA5522" vlink="#772200" alink="#000000">

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="top"><img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../../index.htm"><b>SELFHTML</b></a>/<a href="../../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="../index.htm"><b>CGI/Perl</b></a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>&Eacute;l&eacute;ments de langage Perl</b></a></td>
</tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#EEEEEE" class="doc" width="110"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></td>
<td bgcolor="#EEEEEE" class="doc" valign="bottom" width="100%"><h2>Instructions CGI n&eacute;cessaires en Perl</h2>
<tr>
<td bgcolor="#EEEEEE" class="doc" valign="top" align="center">
<img src="../../src/docx.gif" width="30" height="20" vspace="6" border="0" alt="Page d'information: vue d'ensemble">
</td>
<td bgcolor="#FFFFFF" valign="top" nowrap>
<p>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#httpheader"><b>Envoyer l'ent&ecirc;te HTTP et les contenus</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#contenus"><b>Envoyer les contenus (forme en alternative)</b></a><br>
</p>
</td>
</tr><tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;<a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr>
</table>



<h2 class="Sh2"><a class="an" name="httpheader">Envoyer l'ent&ecirc;te HTTP et les contenus</a></h2>

<p>Un script CGI est appel&eacute; dans le navigateur Web en envoyant par exemple un formulaire. Ensuite le navigateur communique d'abord avec le serveur Web par le protocole HTTP et r&eacute;clame le script. Lors de cette r&eacute;clamation, le navigateur peut aussi envoyer des donn&eacute;es tout de suite qui sont con&ccedil;ues pour le script CGI par exemple les donn&eacute;es du formulaire HTML rempli. Le serveur Web d&eacute;cide s'il s'agit pour le fichier r&eacute;clam&eacute; par le navigateur d'un script CGI et ex&eacute;cute le script avec l'interpr&eacute;teur Perl. Pendant ce temps, le navigateur &quot;attend&quot; des donn&eacute;es, Car si le navigateur r&eacute;clame un script CGI du serveur, ce n'est rien d'autre que s'il r&eacute;clamait un fichier HTML statique. Il attend des donn&eacute;es que le serveur envoie et que le navigateur doit afficher dans une &eacute;tape suivante. C'est pourquoi un script CGI doit envoyer quelque chose au navigateur qui attend. Les donn&eacute;es &agrave; envoyer doivent l'&ecirc;tre &agrave; leur tour par le protocole HTTP. Le protocole HTTP r&eacute;clame cependant pour chaque envoi de donn&eacute;es ce qu'on appelle un ent&ecirc;te HTTP.. C'est une esp&egrave;ce de paquet de donn&eacute;es pr&eacute;liminaires avec des informations sur les donn&eacute;es qui suivent. Afin qu'un navigateur puisse interpr&eacute;ter correctement les donn&eacute;es du script CGI, le script doit d'abord envoyer un ent&ecirc;te HTTP valide.</p>

<h3 class="xmp">Exemple d'un script CGI complet:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

my $texte = &quot;Hallo monde&quot;;

print &quot;Content-type: text/html\n\n&quot;;
print '&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;', &quot;\n&quot;;
print &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Hello monde&lt;/title&gt;&lt;/head&gt;&lt;body&gt;\n&quot;;
print &quot;&lt;h1&gt;$texte&lt;/h1&gt;\n&quot;;
print &quot;&lt;/body&gt;&lt;/html&gt;\n&quot;;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Pour le code HTML q'un script Perl d&eacute;sire envoyer en tant que script CGI au navigateur qui attend, la fonction Perl <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../fonctions/entreesortie.htm#print"><b>print</b></a> est appropri&eacute;e. Pour &quot;envoyer&quot;, le script Perl sort simplement les donn&eacute;es avec la fonction <code>print</code>. La premi&egrave;re de ces instructions <code>print</code> que doit contenir un script CGI, est toutefois celle pour l'ent&ecirc;te HTTP. La forme la plus simple d'un ent&ecirc;te HTTP comprend simplement dans la commande <code>Content-type:</code> et la mention d'un <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../divers/typesmime.htm"><b>type Mime</b></a> pour les donn&eacute;es qui vont suivre. &Eacute;tant donn&eacute; que le script CGI veut envoyer du code HTML au navigateur, &ccedil;a tombe sous le sens, il utilise le type Mime pour HTML, &agrave; savoir <code>text/html</code>. De plus, un ent&ecirc;te HTTP doit comprendre <b>deux</b> caract&egrave;res de contr&ocirc;le pour le passage &agrave; la ligne. En Perl on obtient un tel caract&egrave;re de contr&ocirc;le par la suite de caract&egrave;res <code>\n</code>. Par l'instruction:<br>
<code>print &quot;Content-type: text/html\n\n&quot;;</code><br>
un ent&ecirc;te HTTP complet est donc cr&eacute;&eacute; et signale au navigateur que des donn&eacute;es du type HTML vont suivre. Pour une communication HTTP compl&egrave;te, d'autres lignes d'ent&ecirc;te HTTP sont &agrave; vrai dire n&eacute;cessaires; les mentions manquantes seront alors compl&eacute;t&eacute;es par le  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../introduction/cgihtml.htm"><b>port CGI</b></a> voire par le <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../introduction/ordiserveurweb.htm"><b>serveur Web</b></a>.</p>

<p>Enfin un petit fichier HTML complet est envoy&eacute; au moyen d'instructions <code>print</code> distinctes. Pour les diff&eacute;rentes instructions <code>print</code> est par ailleurs toujours not&eacute; &agrave; la fin un caract&egrave;re de passage &agrave; la ligne <code>\n</code>. Ceci a davantage une raison esth&eacute;tique. Cela permet d'ins&eacute;rer &agrave; chaque fois une nouvelle ligne dans le texte source HTML. Si ces caract&egrave;res de contr&ocirc;le manquaient, Perl &eacute;crirait tout sur une ligne de texte. Pour la variante <code>print</code> avec le caract&egrave;re de contr&ocirc;le par contre, les passages &agrave; la ligne se font comme si le texte source HTML &eacute;tait entr&eacute; dans l'&eacute;diteur.</p>

<p>Dans le titre <code>h1</code> de l'exemple ci-dessus est sortie une variable, &agrave; savoir la  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="scalaires.htm"><b>scalaire</b></a> <code>$Text</code>. Vous pouvez dans des sortie  <code>print</code> ins&eacute;rer simplement de telles variables. &Agrave; l'endroit correspondant est alors sortie la valeur actuelle de la variable. Dans l'exemple ci-dessus est affect&eacute;e &agrave; la scalaire <code>$texte</code>, un peu plus haut dans le script, la valeur <code>Hello monde</code>. On recourt &agrave; cette valeur &agrave; l'endroit o&ugrave; <code>$texte</code> doit &ecirc;tre not&eacute; dans le code HTML &agrave; sortir.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="contenus">Envoyer les contenus (forme en alternative)</a></h2>

<p>Les nombreuses instructions <code>print</code> distinctes sont p&eacute;nibles pour des sorties plus importantes. C'est pourquoi il existe aussi une forme plus &eacute;l&eacute;gante pour la sortie de passages de code HTML plus importants.</p>

<h3 class="xmp">Exemple d'un script CGI complet:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

my $introduction = &quot;Cela marche aussi comme &ccedil;a!&quot;;

print &quot;Content-type: text/html\n\n&quot;;

print &lt;&lt;&quot;FIN&quot;;
&lt;html&gt;&lt;head&gt;&lt;title&gt;Sortie du test&lt;/title&gt;&lt;/head&gt;&lt;body&gt;
&lt;h1&gt;$introduction&lt;/h1&gt;
&lt;p&gt;L'avantage de cette formule est que l'on peut g�n�rer
 beaucoup de code HTML
en une seule fois sans noter une seule
commande print en Perl.
Bien pratique par exemple �galement pour la sortie
de JavaScript:&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
document.write(&quot;&lt;p&gt;Et voici l'adresse de cette source de donn�es HTML: &quot;);
document.write(document.URL+&quot;&lt;\/p&gt;&quot;);
//--&gt;
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
FIN
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Le script envoie dans un premier temps l'ent&ecirc;te HTTP avec une instruction <code>print</code> distincte. Ensuite une m&eacute;thode plus &eacute;l&eacute;gante est cependant utilis&eacute;e pour envoyer des quantit&eacute;s plus importantes de code HTML. Ici est d'abord not&eacute;e l'instruction <code>print&nbsp;&lt;&lt;&quot;FIN;&quot;</code>. <code>FIN</code> est un nom &agrave; attribuer librement pour un <b>d&eacute;limiteur de fin</b> . Tout en bas dans le script est not&eacute; encore une fois le mot <code>FIN</code>, et cela seul sur une ligne. Tout ce qui figure entre l'instruction d'ouverture et le d&eacute;limiteur de fin seul sur une ligne est envoy&eacute; tel quel au navigateur. Cette forme de notation est indiqu&eacute;e quand de longs passages de code HTML doivent &ecirc;tre envoy&eacute;s. Le code HTML peut contenir tout ce qui est imaginable, par exemple &eacute;galement des passages JavaScript comme il est montr&eacute; dans l'exemple, mais aussi des variables Perl! Celles-ci sont interpol&eacute;es, c'est &agrave; dire qu'elles sont remplac&eacute;es par leur valeur pour la sortie - seulement parce que toutefois  <code>print&nbsp;&lt;&lt;&quot;FIN;&quot;</code> a &eacute;t&eacute; not&eacute; entre  guillemets. La notation entre apostrophes est &eacute;galement permises, donc <code>print&nbsp;&lt;&lt;'FIN;'</code>. Dans ce cas, les variables Perl ne sont pas interpol&eacute;es (voir aussi les <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="chainescaracteres.htm#regles"><b>R&egrave;gles pour la notation de cha&icirc;nes de caract&egrave;res</b></a>).</p>

<h3 class="inf">Attention:</h3>

<p>Une autre possibilit&eacute; utilis&eacute;e souvent, pour envoyer l'ent&ecirc;te HTTP et le texte HTML est offerte par le <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../modules/cgi.htm"><b>module CGI</b></a>. Ce module met des m&eacute;thodes distinctes &agrave; disposition pour g&eacute;n&eacute;rer des sorties HTML. Pour l'envoi au navigateur est employ&eacute;e l&agrave; aussi la fonction <code>print</code>.</p>





<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a>
</td></tr>
<tr><td bgcolor="#EEEEEE" class="doc" align="right"><a href="scalaires.htm"><img src="../../src/suivant.gif" width="10" height="10" border="0" hspace="10" alt="page suivante"></a></td>
<td bgcolor="#FFFFFF"><img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="scalaires.htm"><b>Scalaires (Variables)</b></a>
</td></tr>
<tr>
<td bgcolor="#EEEEEE" class="doc" align="right"><a href="intro.htm"><img src="../../src/precedent.gif" width="10" height="10" border="0" hspace="10" alt="page pr&eacute;c&eacute;dente"></a></td>
<td bgcolor="#FFFFFF" width="100%"><img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="intro.htm"><b>G&eacute;n&eacute;ralit&eacute;s sur Perl</b></a>
</td>
</tr>
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;</td></tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="bottom"><img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../../index.htm"><b>SELFHTML</b></a>/<a href="../../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="../index.htm"><b>CGI/Perl</b></a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>&Eacute;l&eacute;ments de langage Perl</b></a></td>
</tr>
</table>

<p>&copy; 2001 Stefan M&uuml;nz / &copy; 2003 Traduction <img src="../../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:13405@free.fr">Serge Fran&ccedil;ois, 13405@free.fr</a><br><img src="../../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:selfhtml@selfhtml.com.fr">selfhtml@selfhtml.com.fr</a></p>



</body>
</html>
