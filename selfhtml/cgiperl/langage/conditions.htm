<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>SELFHTML: CGI/Perl / &Eacute;l&eacute;ments de langage Perl / Instructions conditionnelles</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Comment, en Perl, faire d&eacute;pendre l'ex&eacute;cution d'instructions de conditions.">
<meta name="keywords"       content="SELFHTML, Perl, if, elsif, else, unless, condition">
<meta name="author"         content="Stefan M&uuml;nz, selfhtml@teamone.de">
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<meta name="DC.Publisher"   content="Serge Fran&ccedil;ois, selfhtml@selfhtml.com.fr">
<meta name="DC.Date"        content="2003-01-27T08:00+00:00">
<meta name="DC.Identifier"  content="http://selfhtml.selfhtml.com.fr/cgiperl/langage/conditions.htm">
<meta name="DC.Language"    content="fr">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.Create" content="2003-01-27T08:00+00:00">
<meta name="SELF.Version"   content="1">
<meta name="SELF.Pagetype"  content="Information">
<meta name="SELF.Path"      content="SELFHTML == ../../index.htm // CGI/Perl == ../index.htm // &Eacute;l&eacute;ments de langage Perl == index.htm">
<!-- Matomo -->
<script type="text/javascript">
  var _paq = window._paq = window._paq || [];
  /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="//matomo.boitasite.com/";
    _paq.push(['setTrackerUrl', u+'matomo.php']);
    _paq.push(['setSiteId', '1']);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
<!-- End Matomo Code -->
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#AA5522" vlink="#772200" alink="#000000">

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="top"><img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../../index.htm"><b>SELFHTML</b></a>/<a href="../../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="../index.htm"><b>CGI/Perl</b></a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>&Eacute;l&eacute;ments de langage Perl</b></a></td>
</tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#EEEEEE" class="doc" width="110"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></td>
<td bgcolor="#EEEEEE" class="doc" valign="bottom" width="100%"><h2>Instructions conditionnelles</h2>
<tr>
<td bgcolor="#EEEEEE" class="doc" valign="top" align="center">
<img src="../../src/docx.gif" width="30" height="20" vspace="6" border="0" alt="Page d'information: vue d'ensemble">
</td>
<td bgcolor="#FFFFFF" valign="top" nowrap>
<p>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#if_else_elsif"><b>Instructions conditionnelles avec if, else et elsif</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#unless"><b>Instructions conditionnelles avec unless</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#placees_apres"><b>Conditions plac&eacute;es apr&egrave;s</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#soit_soit"><b>Simple requ&ecirc;te soit..., soit...</b></a><br>
</p>
</td>
</tr><tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;<a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr>
</table>



<h2 class="Sh2"><a class="an" name="if_else_elsif">Instructions conditionnelles avec if, else et elsif</a></h2>

<p>Vous pouvez faire d&eacute;pendre de conditions l'ex&eacute;cution d'instructions.</p>

<h3 class="xmp">Exemple d'un script CGI complet:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

print &quot;Content-type: text/html\n\n&quot;;
print '&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;', &quot;\n&quot;;
print &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Sortie du test&lt;/title&gt;\n&quot;;
print &quot;&lt;/head&gt;&lt;body&gt;\n&quot;;

if( $ENV{QUERY_STRING} eq &quot;&quot; ) {
 print &quot;&lt;b&gt;Aucune donn�e n'a �t� transmise au script!&lt;/b&gt;\n&quot;;
}
elsif( length($ENV{QUERY_STRING}) &lt; 4 ) {
 print &quot;&lt;b&gt;&amp;Les donn�es transmises contiennent moins de 4 caract�res!&lt;/b&gt;\n&quot;;
}
elsif( length($ENV{QUERY_STRING}) &gt; 8 ) {
 print &quot;&lt;b&gt;&amp;Les donn�es transmises contiennent plus de 8 caract�res!&lt;/b&gt;\n&quot;;
}
else {
 print &quot;&lt;p&gt;&lt;b&gt;Les donn�es suivantes ont �t� transmises au script:&lt;/b&gt;&lt;br&gt; $ENV{QUERY_STRING}&lt;/p&gt;&quot;;
 (my $String, my $Salt) = split(/\+/,$ENV{QUERY_STRING});
 my $CryptString = crypt($String,$Salt);
 print &quot;&lt;p&gt;&lt;b&gt;Les donn�es crypt�es sont:&lt;/b&gt;&lt;br&gt;$CryptString&lt;/p&gt;\n&quot;;
}

print &quot;&lt;/body&gt;&lt;/html&gt;\n&quot;;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Le script en exemple  attend  qu'une cha&icirc;ne de caract&egrave;res avec quatre signes au minimum et 8 signes au maximum lui soit transmise quand il est appel&eacute;. Il crypte ces donn&eacute;es avec la fonction <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../fonctions/chainescaracteres.htm#crypt"><b>crypt</b></a> et sort la valeur crypt&eacute;e pour contr&ocirc;le. Vous pouvez transmettre au script la cha&icirc;ne de caract&egrave;res comme param&egrave;tre quand vous l'appelez dans le navigateur. Si donc le script a comme adresse <var>http://localhost/cgi-bin/crypt.pl</var>, vous pouvez l'appeler avec <var>http://localhost/cgi-bin/crypt.pl?Noceur</var>, et le script crypte la cha1ine de caract&egrave;res <code>Noceur</code> d'apr&egrave;s le standard de cryptage. Si par contre vous appelez le script sans param&egrave;tre ou que vous transmettez une cha&icirc;ne de caract&egrave;res trop courte ou trop longue, alors le script renvoie &agrave; la place un message d'erreur.</p>

<p>Pour ex&eacute;cuter ces actions en fonction des conditions, le script demande tout d'abord si la <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../introduction/variablesenvironnement.htm"><b>variable d'environnement CGI </b></a> <code>QUERY_STRING</code> est vide. Avec  <code>if</code> vous pouvez introduire une telle condition si-alors. Derri&egrave;re suit, plac&eacute;e entre parenth&egrave;ses, la formulation de la condition. Pour formuler ces conditions vous avez besoin soit de deux valeurs que vous pouvez comparer, soit de demander directement si une expression plac&eacute;e entre parenth&egrave;ses est vraie ou fausse. Dans l'exemple deux valeurs sont compar&eacute;es dans la condition, &agrave; savoir <code>$ENV{QUERY_STRING}</code> (la variable d'environnement qui contient les param&egrave;tres transmis) avec ce qu'on appelle la <b>cha&icirc;ne de caract&egrave;res vide</b>, qui est marqu&eacute;e par des guillemets vides <code>&quot;&quot;</code>. Le signe <code>eq</code> plac&eacute; entre les valeurs est un <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="operateurs.htm#comparaison"><b>op&eacute;rateur de comparaison</b></a> pour cha&icirc;nes de caract&egrave;res. Il vous faut conna&icirc;tre les op&eacute;rateurs de comparaison pour pouvoir formuler des conditions dans lesquelles deux valeurs sont compar&eacute;es.</p>

<p>&Agrave; la fin de la condition <code>if</code> suit un  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="intro.htm#blocs_instructions"><b>bloc d'instructions</b></a>, marqu&eacute; comme d'habitude par les parenth&egrave;ses <b>accolades</b>  <code>{</code> et <code>}</code>. Entre les deux peuvent figurer autant d'instructions que vous voulez. Ces instructions ne seront ensuite ex&eacute;cut&eacute;es que si la condition <code>if</code> est remplie. Dans l'exemple il est demand&eacute; avec l'instruction  <code>if</code> si la variable d'environnement avec les donn&eacute;es transmises est vide. Si c'est le cas, donc si cette condition est remplie, alors est sorti: <code>Aucune donn&eacute;e n'a &eacute;t&eacute; transmise au script!</code>. Les blocs d'instructions qui suivent apr&egrave;s <code>elsif</code> et  <code>else</code>, sont saut&eacute;s dans ce cas.</p>

<p>Avec <code>elsif</code> d'autres conditions peuvent &ecirc;tre formul&eacute;es. Ces conditions ne sont cependant v&eacute;rifi&eacute;es que si toutes les conditions qui la pr&eacute;c&egrave;dent imm&eacute;diatement sont fausses. Le deuxi&egrave;me <code>elsif</code> dans l'exemple n'est donc &eacute;valu&eacute; par Perl que si des donn&eacute;es ont &eacute;t&eacute; transmises et si celles-ci ne contiennent pas moins de 4 caract&egrave;res. Les deux conditions <code>elsif</code> de l'exemple comparent &agrave; nouveau deux valeurs, &agrave; savoir la longueur des donn&eacute;es transmises recherch&eacute;e avec la fonction <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../fonctions/chainescaracteres.htm#length"><b>length</b></a>, avec, pour chacune, un nombre invariable.</p>

<p>Seulement si toutes les conditions  <code>if</code> et <code>elsif</code> sont fausses, l'embranchement <code>else</code> sera ex&eacute;cut&eacute;. Celui-ci n'a plus besoin de condition, mais &eacute;quivaut simplement &agrave; &quot;autrement&quot; -sinon.  &Eacute;tant donn&eacute; que, dans l'exemple ci-dessus, les conditions not&eacute;es auparavant capturent des erreurs, figure dans l'embranchement <code>else</code> le code pour le &quot;bon cas&quot;. Les donn&eacute;es sont sorties pour contr&ocirc;le, puis crypt&eacute;es et sorties &agrave; nouveau sous leur forme crypt&eacute;e.</p>


<h3 class="inf">Attention:</h3>

<p>Les parenth&egrave;ses accolades apr&egrave;s <code>if</code>, <code>elsif</code> ou <code>else</code> doivent toujours &ecirc;tre not&eacute;es, m&ecirc;me si une seule instruction y est not&eacute;e. Il en va ici autrement en Perl que dans quelques autres langages, en JavaScript par exemple.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="unless">Instructions conditionnelles avec unless</a></h2>

<p>Les conditions peuvent aussi &ecirc;tre formul&eacute;es dans l'autre sens.</p>

<h3 class="xmp">Exemple d'un script CGI complet:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

print &quot;Content-type: text/html\n\n&quot;;
print '&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;', &quot;\n&quot;;
print &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Sortie du test&lt;/title&gt;\n&quot;;
print &quot;&lt;/head&gt;&lt;body&gt;\n&quot;;

unless( $ENV{QUERY_STRING} eq &quot;confidentiel&quot; ) {
 print &quot;&lt;b&gt;Pas d'habilitation!&lt;/b&gt;\n&quot;;
}
else {
 open (FH, &quot;&lt;/usr/bin/apache/conf/httpd.conf&quot;);
 my @lignes_fichier = &lt;FH&gt;;
 close(FH);
 print &quot;&lt;h1&gt;Configuration actuelle du serveur Apache&lt;/h1&gt;\n&quot;;
 print &quot;&lt;pre&gt;@lignes_fichier&lt;/pre&gt;\n&quot;;
}
print &quot;&lt;/body&gt;&lt;/html&gt;\n&quot;;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Le script formule avec <code>unless</code> une condition &quot;si ce n'est pas&quot;. Dans la condition est compar&eacute; si la variable d'environnement <code>QUERY_STRING</code> a la valeur <code>confidentiel</code>. La condition est donc vraie si l'utilisateur a appel&eacute; le script dans le navigateur avec par exemple <var>http://localhost/cgi-bin/show_apache.pl?confidentiel</var>. Par <code>unless</code> la condition est cependant ni&eacute;e en tant que tout. Les instructions qui figurent dans le bloc d'instructions plac&eacute;es dans les parenth&egrave;ses accolades, et ex&eacute;cut&eacute; en fonction de  <code>unless</code>, ne sont ex&eacute;cut&eacute;es dans l'exemple que si l'utilisateur a appel&eacute; le script <b>sans</b> transmettre le param&egrave;tre <code>confidentiel</code>.</p>

<p>Dans ce cas, le script sort un message d'erreur dans le navigateur et saute l'embranchement  <code>else</code>. Si l'utilisateur a entr&eacute; le bon param&egrave;tre, le script aboutit par contre dans l'embranchement <code>else</code>. L&agrave;, il lit le fichier central de configuration du serveur Web Apache et sort son contenu dans le navigateur. Les fonctions Perl employ&eacute;es pour le faire sont <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../fonctions/entreesortie.htm#open"><b>open</b></a> et <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../fonctions/entreesortie.htm#close"><b>close</b></a>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="placees_apres">Conditions plac&eacute;es apr&egrave;s</a></h2>


<p>Pour ex&eacute;cuter une instruction distincte en fonction d'une condition, Perl dispose &eacute;galement d'une forme particuli&egrave;re abr&eacute;g&eacute;e de conditions.</p>

<h3 class="xmp">Exemple d'un script CGI complet:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

my @date_heure = localtime(time);
my $heures = $date_heure[2];

print &quot;Content-type: text/html\n\n&quot;;
print '&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;', &quot;\n&quot;;
print &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Sortie du test&lt;/title&gt;&lt;/head&gt;&lt;body&gt;\n&quot;;
print &quot;&lt;h1&gt;Bonjour!&lt;/h1&gt;&quot; if ( $heures &gt; 5 &amp;&amp; $heures &lt; 10 );
print &quot;&lt;h1&gt;Bonjour!&lt;/h1&gt;&quot; if ( $heures &gt; 9 &amp;&amp; $heures &lt; 19 );
print &quot;&lt;h1&gt;Bonsoir!&lt;/h1&gt;&quot; if ( $heures &gt; 18 );
print &quot;&lt;h1&gt;Salut oiseau de nuit!&lt;/h1&gt;&quot; unless ( $heures &gt; 5 );

print &quot;&lt;/body&gt;&lt;/html&gt;\n&quot;;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Le script recherche avec la fonction <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../fonctions/dateheure.htm#localtime"><b>localtime</b></a> le date et l'heure sur le serveur. De toutes les donn&eacute;es fournies par cette fonction, la partie heure est extraite et sauvegard&eacute;e dans la scalaire <code>$heures</code>. Le script envoie maintenant en code HTML au navigateur appelant, un titre avec un texte variant selon l'heure. Pour ce faire, l'instruction <code>print</code> est plac&eacute;e devant et la condition respective est plac&eacute;e apr&egrave;s. L'instruction  <code>print</code> n'est ex&eacute;cut&eacute;e pour chacune d'entre elles, que si la condition not&eacute;e derri&egrave;re est remplie. Comme vous le voyez dans l'exemple, les conditions plac&eacute;es apr&egrave;s sont possibles aussi bien avec <code>if</code> qu'avec <code>unless</code>.</p>

<p>La particularit&eacute; de ces conditions plac&eacute;es apr&egrave;s est que <b>seule une instruction</b> peut en d&eacute;pendre. Car l'instruction compl&egrave;te, condition comprise, repr&eacute;sente une seule instruction. C'est la raison pour laquelle il n'y a pas pour ces conditions de parenth&egrave;ses accolades.</p>

<p>L'exemple montre aussi quelques autres conditions. Dans quelques cas sont li&eacute;es deux conditions. Ainsi  <code>Bonjour</code> ne sera sorti que si la partie heures de l'heure du serveur est plus grande que 5 et plus petite que  10 , donc se situe entre  6 et 9. Deux conditions distinctes sont reli&eacute;es ici avec l'<img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="operateurs.htm#logiques"><b>op&eacute;rateur logique</b></a> <code>&amp;&amp;</code>. La condition compl&egrave;te n'est dans ce cas remplie que si les deux conditions distinctes sont remplies.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="soit_soit">Simple requ&ecirc;te soit..., soit...</a></h2>

<p>Pour des conditions alternatives simples (soit-soit), existe une syntaxe sp&eacute;ciale que vous pouvez utiliser comme alternative &agrave; l'instruction <code>if</code> et  <code>else</code>.</p>

<h3 class="xmp">Exemple d'un script CGI complet:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
#!/usr/bin/perl -w

use strict;
use CGI::Carp qw(fatalsToBrowser);

print &quot;Content-type: text/html\n\n&quot;;
print '&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;', &quot;\n&quot;;
print &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Sortie du test&lt;/title&gt;\n&quot;;
print &quot;&lt;/head&gt;&lt;body&gt;\n&quot;;

my $resultat = $ENV{'HTTP_USER_AGENT'} =~ /MSIE/ ? &quot;l'Explorer Internet&quot; : &quot;autre chose que l'Explorer Internet&quot;;
print &quot;&lt;b&gt;Vous utilisez $resultat!&lt;/b&gt;\n&quot;;

print &quot;&lt;/body&gt;&lt;/html&gt;\n&quot;;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Le script recherche, en &eacute;valuant la variable d'environnement <code>HTTP_USER_AGENT</code> et &agrave; l'aide d'une <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="expresreg.htm"><b>expression r&eacute;guli&egrave;re</b></a>, si le navigateur appelant est un Explorer Internet MS ou non. Dans le code HTML que le script envoie au navigateur, figure ensuite soit: &quot;Vous utilisez l'Explorer Internet&quot; soit &quot;Vous utilisez autre chose que l'Explorer Internet&quot;.</p>

<p>Une alternative simple (soit-soit) est introduite par une condition, dans l'exemple  <tt>$ENV{'HTTP_USER_AGENT'} =~ /MSIE/</tt>. Ici  <code>/MSIE/</code> est une expression r&eacute;guli&egrave;re et <code>=~</code> est un op&eacute;rateur de liaison sp&eacute;cial pour ces expressions r&eacute;guli&egrave;res. Derri&egrave;re est not&eacute; un point d'interrogation. Derri&egrave;re le point d'interrogation est not&eacute;e une instruction qui est ex&eacute;cut&eacute;e si la condition est remplie. Derri&egrave;re deux points sont not&eacute;s <code>:</code> puis une instruction pour le cas o&ugrave; la condition n'est pas remplie. Dans l'exemple, les deux instructions consistent ni plus ni moins dans la notations de valeurs qui doivent &ecirc;tre attribu&eacute;es &agrave; la scalaire <code>$resultat</code> tout &agrave; fait &agrave; gauche de la formulation de la condition. De la m&ecirc;me fa&ccedil;on pourrait &eacute;galement figurer &agrave; cet endroit:<br>
<code>$ENV{'HTTP_USER_AGENT'} =~ /MSIE/ ? print &quot;Vous utilisez l'Explorer Internet&quot; : print &quot;Vous n'utilisez pas l'Explorer Internet&quot;;</code>.</p>






<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a>
</td></tr>
<tr><td bgcolor="#EEEEEE" class="doc" align="right"><a href="boucles.htm"><img src="../../src/suivant.gif" width="10" height="10" border="0" hspace="10" alt="page suivante"></a></td>
<td bgcolor="#FFFFFF"><img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="boucles.htm"><b>Boucles</b></a>
</td></tr>
<tr>
<td bgcolor="#EEEEEE" class="doc" align="right"><a href="nombres.htm"><img src="../../src/precedent.gif" width="10" height="10" border="0" hspace="10" alt="page pr&eacute;c&eacute;dente"></a></td>
<td bgcolor="#FFFFFF" width="100%"><img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="nombres.htm"><b>Nombres</b></a>
</td>
</tr>
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;</td></tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="bottom"><img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../../index.htm"><b>SELFHTML</b></a>/<a href="../../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="../index.htm"><b>CGI/Perl</b></a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>&Eacute;l&eacute;ments de langage Perl</b></a></td>
</tr>
</table>

<p>&copy; 2001 Stefan M&uuml;nz / &copy; 2003 Traduction <img src="../../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:13405@free.fr">Serge Fran&ccedil;ois, 13405@free.fr</a><br><img src="../../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:selfhtml@selfhtml.com.fr">selfhtml@selfhtml.com.fr</a></p>



</body>
</html>
