<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>SELFHTML: JavaScript / Introduction en JavaScript</title>
<link rel="stylesheet" type="text/css" href="../src/selfhtml.css">
<meta name="description"    content="Comment JavaScript est int&eacute;gr&eacute; en HTML, et quel est ce qu'il faut savoir d'important sur JavaScript et sur DOM.">
<meta name="keywords"       content="SELFHTML, JavaScript, ECMAScript, JScript, HTML, DOM">
<meta name="author"         content="Stefan M&uuml;nz, selfhtml@teamone.de">
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<meta name="DC.Publisher"   content="Serge Fran&ccedil;ois, selfhtml@selfhtml.com.fr">
<meta name="DC.Date"        content="2003-01-27T08:00+00:00">
<meta name="DC.Identifier"  content="http://selfhtml.selfhtml.com.fr/javascript/intro.htm">
<meta name="DC.Language"    content="fr">
<meta name="DC.Rights"      content="../editorial/copyright.htm">
<meta name="DC.Date.Create" content="2003-01-27T08:00+00:00">
<meta name="SELF.Version"   content="1">
<meta name="SELF.Pagetype"  content="Information">
<meta name="SELF.Path"      content="SELFHTML == ../index.htm // JavaScript/DOM == index.htm">
<!-- Matomo -->
<script type="text/javascript">
  var _paq = window._paq = window._paq || [];
  /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="//matomo.boitasite.com/";
    _paq.push(['setTrackerUrl', u+'matomo.php']);
    _paq.push(['setSiteId', '1']);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
<!-- End Matomo Code -->
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#AA5522" vlink="#772200" alink="#000000">

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="top"><img src="../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../index.htm"><b>SELFHTML</b></a>/<a href="../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>JavaScript/DOM</b></a> </td>
</tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#EEEEEE" class="doc" width="110"><img src="../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></td>
<td bgcolor="#EEEEEE" class="doc" valign="bottom" width="100%"><h2>Introduction en JavaScript et au mod&egrave;le DOM</h2></td>
</tr>
<tr>
<td bgcolor="#EEEEEE" class="doc" valign="top" align="center">
<img src="../src/docx.gif" width="30" height="20" vspace="6" border="0" alt="Page d'information: vue d'ensemble">
</td>
<td bgcolor="#FFFFFF" valign="top" nowrap>
<p>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#javascript_html"><b>JavaScript et HTML</b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#standards_variantes_versions"><b>Standards, variantes du langage et versions du langage</b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#remarques_pratiques"><b>Remarques pour la pratique</b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#passages_javascript"><b>D&eacute;finir des passages de JavaScript en HTML</b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#repereshtml_javascript"><b>&Eacute;l&eacute;ments de JavaScript dans des rep&egrave;res HTML</b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#fichiers_javascript"><b>JavaScript dans des fichiers distincts</b></a><br>
</p>
</td>
</tr><tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;<a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr>
</table>





<h2 class="Sh2"><a class="an" name="javascript_html">JavaScript et HTML</a></h2>

<p>JavaScript n'est pas directement une partie qui constitue HTML, mais un langage de programmation distinct. Ce langage a pourtant &eacute;t&eacute; cr&eacute;&eacute; sp&eacute;cialement pour mettre &agrave; la disposition des auteurs un outil gr&acirc;ce auquel les pages WWW se laissent optimiser.</p>

<p>Les programmes en JavaScript sont not&eacute;s directement dans le fichier HTML ou dans des fichiers s&eacute;par&eacute;s. ils sont interpr&eacute;t&eacute;s en temps r&eacute;el par le navigateur Web. Les navigateurs Web modernes poss&egrave;dent &agrave; cet effet le logiciel d'interpr&eacute;tation correspondant.</p>

<p>Quelques exemples pratiques pour l'application de JavaScript sont &agrave; votre disposition dans ce document pour &ecirc;tre essay&eacute;s et pour s'habituer &agrave; JavaScript. C'est le cas par exemple des <img src="../src/chap.gif" width="15" height="13" border="0" alt="Chapitre: vue d'ensemble">&nbsp;<a href="../petitsassistants/index.htm"><b>Petits assistants</b></a> comme de la  <img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../navigation/quickbar/index.htm"><b>Quickbar</b></a> et de la <img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../navigation/recherche/index.htm"><b>recherche SELFHTML</b></a>. Cette derni&egrave;re est en fait une application assez performante qui d&eacute;passe d&eacute;j&agrave; de loin le cadre dans lequel JavaScript est employ&eacute; d'ordinaire.</p>

<p>Dans un langage de programmation comme JavaScript il y a beaucoup d'&eacute;l&eacute;ments pr&ecirc;tant &agrave; confusion pour les d&eacute;butants; ce sont les caract&egrave;res sp&eacute;ciaux, les variables, les commandes si-alors, les boucles les fonctions, les m&eacute;thodes, les param&egrave;tres, les objets, les propri&eacute;t&eacute;s et plus encore. Pour pouvoir manier facilement ces &eacute;l&eacute;ments vous devez apprendre &agrave; vous repr&eacute;senter ce qui se passe dans l'ordinateur quand le code du programme est ex&eacute;cut&eacute;. C'est un apprentissage p&eacute;nible que des d&eacute;butants ne ma&icirc;triseront que par des exercices r&eacute;p&eacute;t&eacute;s. Pour cela, JavaScript est tr&egrave;s bien appropri&eacute; parce qu'il est un langage de programmation relativement simple, dans lequel manquent beaucoup de t&acirc;ches d'un "grand" langage de programmation - comme par exemple la gestion de la m&eacute;moire ou le maniement de fichiers. En outre, JavaScript est employ&eacute; dans un environnement d&eacute;termin&eacute;, &agrave; savoir la page WWW affich&eacute;e ou &agrave; afficher.</p>

<p>JavaScript tourne avec ce qu'on pourrait appeler un &quot;carcan&quot;. C'est une esp&egrave;ce de cage de s&eacute;curit&eacute; dans laquelle le langage de programmation est enferm&eacute;. Cela lui &ocirc;te les possibilit&eacute;s typiques d'autres langages de programmation, surtout la possibilit&eacute; de lire comme il veut les donn&eacute;es d'autres fichiers ou celle d'&eacute;crire dans les fichiers. Ceci doit emp&ecirc;cher que des programmeurs JavaScript fassent n'importe quoi sur l'ordinateur d'un utilisateur qui appelle une page Web avec du JavaScript. Apr&egrave;s quelques probl&egrave;mes de jeunesse du pass&eacute;, cela fonctionne aussi assez bien. Celui donc qui d&eacute;sactive JavaScript sur son navigateur par crainte qu'il puisse formater son disque dur, devrait plut&ocirc;t &eacute;viter compl&egrave;tement Internet car d&eacute;j&agrave; &agrave; l'appel de ses courriels, les dangers guettent, qui sont consid&eacute;rablement plus grands que ceux encourus avec JavaScript. Cependant, il y a malheureusement d'autres bonnes raisons qui poussent les utilisateurs &agrave; d&eacute;sactiver JavaScript sur leur navigateur. Ce sont avant tout les  agaceries de certains &quot;cadors&quot; de la programmation qui pensent  que plus la page Web tient l'utilisateur en laisse, mieux elle est. L&agrave; par exemple, la touche droite de la souris est alors neutralis&eacute;e gr&acirc;ce &agrave; JavaScript, l'utilisateur ne peut plus quitter la page et encore bien d'autres choses. De telles trouvailles de programmeurs avides de contr&ocirc;le sont le malaise proprement-dit et la raison pour laquelle JavaScript n'est pas appr&eacute;ci&eacute; par tous les utilisateurs. Celui qui met JavaScript en place ne doit pas perdre de vue et utiliser ses possibilit&eacute;s de fa&ccedil;on &agrave; ce que l'utilisateur en tire un avantage et non pas de fa&ccedil;on &agrave; ce que quelque chose lui soit pris.</p>

<p>Avant que vous ne plongiez dans les abysses de JavaScript, il faut aussi que vous ayez conscience que JavaScript n'a &eacute;t&eacute; con&ccedil;u que pour compl&eacute;ter le HTML normal mais pas pour le remplacer. Il est certes tout &agrave; fait possible de programmer des pages Web exclusivement en JavaScript, de fa&ccedil;on &agrave; ce qu'il ne soit pour ainsi dire plus possible de dire que JavaScript a &eacute;t&eacute; incorpor&eacute; en HTML mais plut&ocirc;t que le code HTML de la page a &eacute;t&eacute; cr&eacute;&eacute; de fa&ccedil;on dynamique &agrave; l'aide de JavaScript. Pourtant ces pages ne fonctionnent que l&agrave; o&ugrave; JavaScript est activ&eacute; dans le navigateur et o&ugrave; ce dernier comprend tout ce que vous avez programm&eacute; (sinon la tentative d'afficher la page est vite avort&eacute;e par un sobre message d'erreur). Pour les pages Web dans lesquelles l'information occupe le premier plan et &eacute;galement qui doivent &ecirc;tre comprises par les moteurs de recherche et par des groupes d'utilisateurs minoritaires comme les non-voyants, il vous faut faire attention &agrave; n'utiliser JavaScript que de fa&ccedil;on &agrave; ce qu'elles puissent &ecirc;tre affich&eacute;es correctement m&ecirc;me si JavaScript est d&eacute;sactiv&eacute;, et &agrave; ce que la navigation entre les pages fonctionne &eacute;galement sans l'aide de JavaScript.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="standards_variantes_versions">Standards, variantes du langage et versions du langage</a></h2>

<p><b>JavaScript</b> Le JavaScript est un langage introduit par Netscape en 1995, qui en d&eacute;tient les droits. C'&eacute;tait donc une affaire sp&eacute;cifique et propre &agrave; la firme et c'est Netscape qui dictait en quoi consistait le JavaScript &quot;officiel&quot;. Entre-temps la situation est devenue plus claire pour des raisons diverses - mais il y a toujours comme avant JavaScript qui jouit d'une grande popularit&eacute; chez les concepteurs de pages Web.</p>

<p>Netscape essayait d&eacute;j&agrave; assez t&ocirc;t de ne pas laisser JavaScript en tant que d&eacute;veloppement personnel mais de lui donner le caract&egrave;re d'un standard. Pour cela on fixa l'organisation <img src="../src/en.gif" width="14" height="10" border="0" alt="english page">&nbsp;<a href="http://www.ecma.ch/"><b>EMCA</b></a> (European Computer Manufacturers Association). Sous le nom d'<b>ECMAScript</b> Netscape fit d&eacute;clarer JavaScript comme standard industriel. Ce standard a &eacute;t&eacute; fix&eacute; dans la sp&eacute;cification &quot;ECMA-262&quot;.</p>

<p>Microsoft contrait &agrave; sa fa&ccedil;on. L'Explorer Internet MS interpr&egrave;te certes JavaScript mais aussi &agrave; c&ocirc;t&eacute; de cela la variante de langage propre &agrave; Microsoft <b>JScript</b>.  Microsoft impl&eacute;menta ce langage finalement pour se lib&eacute;rer des contraintes de licence de Netscape et pour pouvoir &eacute;largir lui-m&ecirc;me ce qui tournait chez Netscape sous le nom de JavaScript. JScript recouvre toute la palette de JavaScript avec cependant encore en plus une quantit&eacute; de commandes sp&eacute;ciales pour l'acc&egrave;s au syst&egrave;me de fichiers et au syst&egrave;me d'exploitation de Windows (Microsoft d&eacute;signait le tout comme &quot;Windows Scripting Host&quot; -Centre serveur de script Windows-). JScript est donc en fin de compte beaucoup plus puissant que JavaScript, pourtant il est &eacute;galement con&ccedil;u pour d'autres missions. Il a une politique de versions sp&eacute;cifique qui n'a rien &agrave; voir avec celle de JavaScript. Les versions de JavaScript sont aujourd'hui comme hier plus connues que celles de JScript et si vous utilisez JavaScript, mentionnez aussi comme langage en r&egrave;gle g&eacute;n&eacute;rale &quot;JavaScript&quot; et non pas &quot;JScript&quot;. L'Explorer Internet y arrive.</p>

<p>Netscape 2.0 interpr&egrave;te le standard de programmation 1.0 JavaScript introduit &agrave; cette &eacute;poque. L'Explorer Internet MS comprend ce langage amplement depuis la version 3.0 (1996).<br>
Netscape interpr&egrave;te le standard de programmation 1.1 (&eacute;galement 1996)JavaScript depuis sa version 3.0. L'Explorer Internet MS comprend ce langage amplement depuis la version 4.0 (1997).<br>
Netscape interpr&egrave;te le standard de programmation 1.2 (1997) JavaScript depuis sa version 4.0. Certaines commandes de cette version sont &eacute;galement interpr&eacute;t&eacute;es par l'Explorer Internet MS 4.0.<br>
La version JavaScript 1.3 est impl&eacute;ment&eacute;e (1998-2001) dans la plupart des versions   4.06 bis 4.7 de Netscape r&eacute;pandues &agrave; ce jour . L'Explorer Internet MS comprend cette version du langage amplement depuis sa version 5.0.<br>
Dans la toute r&eacute;cente version 6.0 de Netscape, compl&egrave;tement reprogramm&eacute;e, une version 1.5 de JavaScript a &eacute;t&eacute; int&eacute;gr&eacute;e (2000-2001); outre quelque petites nouveaut&eacute;s propres &agrave; JavaScript, elle transcrit avant tout le mod&egrave;le DOM (Document Object Model - DOM)  - de plus amples d&eacute;tails &agrave; ce sujet plus bas.<br>
Pour l'Explorer Internet il y a quelques diff&eacute;rences qui, pour partie ne sont pas tout &agrave; fait insignifiantes en ce qui concerne les &eacute;ditions pour les diff&eacute;rentes plates-formes. Ainsi il est tout &agrave; fait possible que la version Windows d'un Explorer Internet 5.5 comprenne des commandes JavaScript que la version
Macintosh du m&ecirc;me produit ne comprend pas. &Agrave; cela s'ajoutent d'autres navigateurs ayant &eacute;galement impl&eacute;ment&eacute; JavaScript comme par exemple Opera, pour lesquels chaque version du produit interpr&egrave;te un peu plus de JavaScript que la version pr&eacute;c&eacute;dente. Dans la pratique on ne peut plus vraiment retracer &agrave; vrai dire quel navigateur peut faire exactement quoi. Il est conseill&eacute; pour cette raison de tester particuli&egrave;rement soigneusement les &eacute;l&eacute;ments du langage utilis&eacute;s des versions JavaScript post&eacute;rieures &agrave; la version 1.2.</p>

<p>La concurrence entre Netscape et Microsoft pour offrir le meilleur soutien JavaScript fut en tout cas &agrave; l'origine d'une grande frustration chez les programmeurs Web et les utilisateurs. Beaucoup de choses devaient et doivent encore toujours &ecirc;tre programm&eacute;es de fa&ccedil;on assez compliqu&eacute;e parce que les performances et particularit&eacute;s des diff&eacute;rents interpr&eacute;teurs JavaScript des diff&eacute;rents navigateurs et versions de navigateurs exigent quantit&eacute; de si et de mais qui alourdissent le code source de JavaScript. Avant tout pour des applications JavaScript plus complexes, par exemple pour <img src="../src/chap.gif" width="15" height="13" border="0" alt="Chapitre: vue d'ensemble">&nbsp;<a href="../dhtml/index.htm"><b>HTML dynamique</b></a>, cette &quot;double programmation&quot; est devenue une corv&eacute;e p&eacute;nible.</p>

<p>Pour rem&eacute;dier durablement &agrave; cette situation inconfortable, le consortium W3 a &eacute;t&eacute; contact&eacute; pour qu'une norme g&eacute;n&eacute;rale du langage voie le jour. Le consortium W3 ne travailla cependant pas sur un standard JavaScript concret mais sur un mod&egrave;le g&eacute;n&eacute;ral pour les objets d'un document. Ce mod&egrave;le doit compl&egrave;tement transposer un langage script qui s'entend comme langage de compl&eacute;ment &agrave; des langages de marquage comme HTML. Le mod&egrave;le a re&ccedil;u du W3 la d&eacute;signation <b>Document Object Model (DOM)</b>. Le 1er octobre 1998 le DOM fut l'objet d'une recommandation officielle du W3C (<i>recommendation</i>) dans la version 1.0, qui est disponible depuis le  29 septembre 2000 dans une deuxi&egrave;me sortie. Depuis le 13 novembre 2000 la version 2.0 do DOM fait l'objet d'une recommandation officielle du W3. Le document correspondant est pourtant r&eacute;parti dans plusieurs documents distincts. La version 3.0 est en cours d'&eacute;laboration.</p>

<p>L'Explorer Internet MS 5.0 soutient une partie de DOM 1.0, la version 5.5 un peu plus, exactement comme Netscape 6.x. La version JavaScript que le mod&egrave;le DOM transcrit est la version 1.5.</p>

<p>Un aspect important du mod&egrave;le DOM est qu'il n'est pas seulement con&ccedil;u pour les langages de script de compl&eacute;ment &agrave; HTML mais aussi pour des langages de script qui doivent &eacute;largir tout langage de marquage conforme &agrave; <img src="../src/chap.gif" width="15" height="13" border="0" alt="Chapitre: vue d'ensemble">&nbsp;<a href="../xml/index.htm"><b>XML</b></a>. C'est pourquoi le mod&egrave;le DOM ne s'oriente plus pour l'essentiel &agrave; certains &eacute;l&eacute;ments HTML. Au lieu de cela il part de fa&ccedil;on abstraite d'un &quot;document&quot; (qui peut &ecirc;tre &eacute;crit en XHTML, mais aussi dans d'autres langages bas&eacute;s sur XML). Il d&eacute;finit comment il est possible d'acc&eacute;der aux diff&eacute;rents &eacute;l&eacute;ments de ce document et quelles manipulations sont possibles. &Eacute;tant donn&eacute; que l'on voulait prendre aussi en consid&eacute;ration pour le d&eacute;veloppement du mod&egrave;le DOM les particularit&eacute;s et la large diffusion de HTML et de JavaScript, on a ajout&eacute; au &quot;noyau du mod&egrave;le DOM&quot; un &quot;mod&egrave;le DOM d'application HTML&quot;. Enfin on a essay&eacute; de sanctionner des parties &quot;bien rod&eacute;es&quot; de JavaScript et de MS-JScript en y int&eacute;grant des parties constitutives du &quot;noyau du mod&egrave;le DOM&quot;.</p>

<p>DOM 1.0 limite cependant encore quelques aspects importants comme par exemple la gestion d'&eacute;v&eacute;nements (traitement d'&eacute;v&eacute;nements-utilisateur comme les cliquements de souris, les entr&eacute;es au clavier etc...) ou l'int&eacute;gration de feuilles de style dans ce que les programmeurs peuvent changer de fa&ccedil;on dynamique. Dans les versions 2.0 et 3.0 le mod&egrave;le DOM traite &eacute;galement ces aspects.</p>

<p>Sur la <img src="../src/en.gif" width="14" height="10" border="0" alt="english page">&nbsp;<a href="http://www.w3.org/DOM/"><b>page d'accueil du W3 au mod&egrave;le DOM</b></a> vous pouvez suivre les d&eacute;veloppements r&eacute;cents du mod&egrave;le DOM au consortium W3.<br>

<p>Depuis que le mod&egrave;le DOM existe, les fournisseurs de navigateurs rivalisent de promesses pour transcrire les prescriptions du mod&egrave;le DOM en JavaScript. Mis &agrave; part le fait qu'il y a encore toujours un manque d'uniformit&eacute; pour la transcription, un peu comme pour HTML et pour les CSS, les programmeurs en JavaScript ont maintenant un probl&egrave;me suppl&eacute;mentaire: L&agrave; o&ugrave; une double solution &eacute;tait souvent n&eacute;cessaire pour les deux types de navigateurs les plus r&eacute;pandus, ils doivent maintenant quelquefois programmer jusqu'&agrave; trois solutions s'ils prennent en consid&eacute;ration les versions 4.x de Netscape et de l'Explorer Internet tout en voulant programmer &eacute;galement conform&eacute;ment au mod&egrave;le DOM.</p>

<p>Dans la pratique de JavaScript sur des pages Web bas&eacute;es sur HTML, il en va toutefois ainsi que la plupart du temps il est travaill&eacute; encore avec les objets JavaScript traditionnels introduits par Netscape. Il faut esp&eacute;rer qu'&agrave; l'avenir, la programmation JavaScript conforme au mod&egrave;le DOM supplantera la programmation en JavaScript classique.<br>
Pour reconna&icirc;tre les versions de langages JavaScript et DOM, les symboles suivants sont utilis&eacute;s dans la pr&eacute;sente documentation:</p>

<table cellpadding="0" cellspacing="0" border="0" bgcolor="#C0C0C0"><tr><td>
<table cellpadding="3" cellspacing="1" border="0">
<tr>
<th bgcolor="#EEEEEE" class="doc" align="left">Symbole</th>
<th bgcolor="#EEEEEE" class="doc" align="left">Signification</th>
</tr>
<tr>
<td class="code" bgcolor="#FFFFE0" valign="top" nowrap><img src="../src/js10.gif" width="30" height="30" border="0" alt="JavaScript 1.0"></td>
<td class="tabxpl" bgcolor="#E4EEFF" valign="top">partie constitutive de la premi&egrave;re version JavaScript.</td>
</tr>
<tr>
<td class="code" bgcolor="#FFFFE0" valign="top" nowrap><img src="../src/js11.gif" width="30" height="30" border="0" alt="JavaScript 1.1"></td>
<td class="tabxpl" bgcolor="#E4EEFF" valign="top">partie constitutive de la version 1.1  JavaScript.</td>
</tr>
<tr>
<td class="code" bgcolor="#FFFFE0" valign="top" nowrap><img src="../src/js12.gif" width="30" height="30" border="0" alt="JavaScript 1.2"></td>
<td class="tabxpl" bgcolor="#E4EEFF" valign="top">partie constitutive de la version 1.2 JavaScript.</td>
</tr>
<tr>
<td class="code" bgcolor="#FFFFE0" valign="top" nowrap><img src="../src/js13.gif" width="30" height="30" border="0" alt="JavaScript 1.3"></td>
<td class="tabxpl" bgcolor="#E4EEFF" valign="top">partie constitutive de la version 1.3 JavaScript.</td>
</tr>
<tr>
<td class="code" bgcolor="#FFFFE0" valign="top" nowrap><img src="../src/js15.gif" width="30" height="30" border="0" alt="JavaScript 1.5"></td>
<td class="tabxpl" bgcolor="#E4EEFF" valign="top">partie constitutive de la version 1.5 JavaScript.</td>
</tr>
<tr>
<td class="code" bgcolor="#FFFFE0" valign="top" nowrap><img src="../src/msjs.gif" width="30" height="30" border="0" alt="MS JScript"></td>
<td class="tabxpl" bgcolor="#E4EEFF" valign="top">partie constitutive du langage introduite par Microsoft. Ces parties ne sont g&eacute;n&eacute;ralement interpr&eacute;t&eacute;es que par l'Explorer Internet MS &agrave; partir de la version 4.x; seuls quelques uns de ces &eacute;l&eacute;ments important ont &eacute;t&eacute; repris dans la <img src="../src/chap.gif" width="15" height="13" border="0" alt="Chapitre: vue d'ensemble">&nbsp;<a href="objets/index.htm"><b>r&eacute;f&eacute;rence objet</b></a> , &agrave; savoir ceux qui repr&eacute;sentent une base pour HTML dynamique apr&egrave;s l'apport de l'Explorer Internet &agrave; partir de la version 4.0.</td>
</tr>
<tr>
<td class="code" bgcolor="#FFFFE0" valign="top" nowrap><img src="../src/dom10.gif" width="30" height="30" border="0" alt="DOM 1.0"></td>
<td class="tabxpl" bgcolor="#E4EEFF" valign="top">objet, propri&eacute;t&eacute; ou m&eacute;thode d'apr&egrave;s les prescriptions du mod&egrave;le DOM, version 1.0. On les trouve dans cette documentation dans la <img src="../src/chap.gif" width="15" height="13" border="0" alt="Chapitre: vue d'ensemble">&nbsp;<a href="objets/index.htm"><b>r&eacute;f&eacute;rence objet</b></a> pour marquer des objets, des propri&eacute;t&eacute;s et des m&eacute;thodes.</td>
</tr>
<tr>
<td class="code" bgcolor="#FFFFE0" valign="top" nowrap><img src="../src/dom20.gif" width="30" height="30" border="0" alt="DOM 2.0"></td>
<td class="tabxpl" bgcolor="#E4EEFF" valign="top">objet, propri&eacute;t&eacute; ou m&eacute;thode d'apr&egrave;s les prescriptions du mod&egrave;le DOM, version 2.0. On les trouve dans cette documentation dans la <img src="../src/chap.gif" width="15" height="13" border="0" alt="Chapitre: vue d'ensemble">&nbsp;<a href="objets/index.htm"><b>r&eacute;f&eacute;rence objet</b></a> pour marquer des objets, des propri&eacute;t&eacute;s et des m&eacute;thodes.</td>
</tr>
</table>
</td></tr></table>








<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="remarques_pratiques">Remarques pour la pratique</a></h2>

<p>Avant de commencer &agrave; programmer votre propre code JavaScript tout neuf, il faut que vous sachiez exactement quel probl&egrave;me vous voulez r&eacute;soudre avec JavaScript. Pour cela il vous faut d&eacute;j&agrave; savoir tout ce que vous pouvez faire avec HTML proprement-dit et o&ugrave; sont les limites de JavaScript. Il vous faut ensuite en savoir assez sur JavaScript pour pouvoir d&eacute;cider si le probl&egrave;me peut &ecirc;tre r&eacute;solu avec JavaScript. Avec JavaScript par exemple, vous <b>ne</b> pouvez <b>pas</b> remplir les t&acirc;ches typiques d&eacute;volues &agrave; <img src="../src/chap.gif" width="15" height="13" border="0" alt="Chapitre: vue d'ensemble">&nbsp;<a href="../cgiperl/index.htm"><b>CGI</b></a>! Les scripts JavaScript sont ex&eacute;cut&eacute;s dans le navigateur de l'utilisateur et non pas sur le serveur o&ugrave; les pages Web se trouvent. Ce qui veut dire que JavaScript ne peut &ecirc;tre ex&eacute;cut&eacute; par le navigateur que lorsqu'il est en train de lire une page ou bien apr&egrave;s qu'il l'ait lue - d&eacute;clench&eacute; alors par exemple par des &eacute;v&eacute;nements utilisateurs comme des cliquements de souris etc...</p>

<p>Il vous est impossible pour cette raison de programmer des livres de visites ou des forums Web avec JavaScript. Car ces applications doivent sauvegarder, centralis&eacute;es sur le serveur, les donn&eacute;es de tous les utilisateurs qui participent. Il est cependant bien possible de se servir de JavaScript pour soutenir de telles applications. Ainsi par exemple, il est tout indiqu&eacute; de v&eacute;rifier les entr&eacute;es d'un utilisateur dans un formulaire avant son envoi &agrave; l'aide de JavaScript plut&ocirc;t que de confier ce surcro&icirc;t de travail &agrave; l'ordinateur serveur.</p>

<p>Quand vous d&eacute;sirez r&eacute;soudre quelque chose avec JavaScript, il est tout &agrave; fait rentable d'aller voir sur la toile s'il n'existe pas d&eacute;j&agrave; des exemple de JavaScript disponibles gratuits qui r&eacute;soudraient exactement votre probl&egrave;me. Car il est toujours pr&eacute;f&eacute;rable de prendre du code qui a d&eacute;j&agrave; fait ses preuves &agrave; l'emploi, que de cr&eacute;er du nouveau code dont les &quot;vices cach&eacute;s&quot; ne sont pas encore connus. Dans de nombreux cas, il suffit d'adapter des scripts JavaScript d&eacute;j&agrave; existants &agrave; ses propres exigences. Pour ces JavaScripts disponibles sur le WWW, vous devrez cependant comprendre ce langage suffisamment, afin de savoir exactement quelles variables ou quelles constantes il vous faudra changer ou quelle fonction vous voudrez compl&eacute;ter.</p>

<p>Dans l'index des liens de l'offre en ligne de SELFHTML actuel, vous trouverez des liens &agrave; des fournisseurs de JavaScripts disponibles:</p>

<p><img src="../src/serverdoc.gif" width="15" height="10" border="0" alt="Page d'information: connexion exig&eacute;e">&nbsp;<a target="_top" href="http://www.selfhtml.com.fr/liens/index.htm"><b>Index des liens: JavaScript/DOM</b></a></p>

<p>Quand vous voulez utiliser JavaScript sur vos propres pages Web, vous devez imp&eacute;rativement mettre en place plusieurs navigateurs pour effectuer les tests. Car malheureusement les interpr&eacute;teurs de JavaScript des navigateurs supportant ce langage, ont comme il a d&eacute;j&agrave; &eacute;t&eacute; dit, des performances tr&egrave;s diff&eacute;rentes.</p>

<p>Ne mettez pas sur le WWW de pages Web contenant un code JavaScript non v&eacute;rifi&eacute;. Pour un utilisateur, il est tr&egrave;s ennuyeux de recevoir &agrave; l'&eacute;cran des messages d'erreur de l'interpr&eacute;teur JavaScript et, dans des cas plus graves, d'&ecirc;tre victime d'un &quot;plantage&quot; du programme de navigation WWW ou m&ecirc;me d'un &quot;plantage-syst&egrave;me&quot;, ceci &eacute;tant particuli&egrave;rement d&eacute;sagr&eacute;able lors d'un travail en connexion. Ces utilisateurs ne reviendront certainement pas de sit&ocirc;t sur vos pages.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><img src="../src/js10.gif" width="30" height="30" border="0" alt="JavaScript 1.0"><img src="../src/netsc2.gif" width="30" height="30" border="0" alt="Netscape 2.0"><img src="../src/msie3.gif" width="30" height="30" border="0" alt="MS IE 3.0">&nbsp;<a class="an" name="passages_javascript">D&eacute;finir des passages de JavaScript en HTML</a></h2>

<p>Vous pouvez d&eacute;finir des passages de programme JavaScript en HTML.</p>

<h3 class="xmp">Exemple:</h3>

<p><img src="../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="langage/affichage/hellomonde.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a></p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;html&gt;
&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
 alert(&quot;Hello monde!&quot;);
//--&gt;
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication</h3>

<p>Avec <code>&lt;script type=&quot;text/javascript&quot;&gt;</code> vous introduisez un passage pour JavaScript dans un fichier HTML   (<i>script = texte source, type = </i><img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../divers/typesmime.htm"><b>type Mime</b></a>). La mention du type Mime est obligatoire depuis HTML 4.0. Avec <code>type=&quot;text/javascript&quot;</code> vous stipulez le type Mime typique pour les fichiers JavaScript.<br>
En plus, vous pouvez utiliser l'attribut <code>language</code> pour d&eacute;signer la version du langage JavaScript (par exemple <code>language=&quot;JavaScript&quot;</code> ou bien <code>language=&quot;JavaScript1.2&quot;</code>). Pourtant cet attribut fait partie des attributs r&eacute;prouv&eacute;s et n'est pas non plus interpr&eacute;t&eacute; correctement par tous les navigateurs.<br>
 &Agrave; la suite - le mieux est &agrave; la ligne suivante - vous devez introduire avec <code>&lt;!--</code> un  <img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../html/generalites/commentaires.htm#non_affiche"><b>commentaire HTML</b></a>. Ainsi les navigateurs WWW plus anciens qui ne connaissent pas JavaScript ignorent le code JavaScript qui suit et ne l'interpr&egrave;tent pas par erreur comme du texte faisant partie du fichier HTML.</p>

<p>Dans l'exemple ci-dessus, gr&acirc;ce &agrave; JavaScript, une fen&ecirc;tre d'annonce appara&icirc;t &agrave; l'&eacute;cran avec le texte &quot;Hello monde!&quot;.</p>

<p>Vous fermez le passage JavaScript avec un <img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="langage/regles.htm#kommentare"><b>commentaire JavaScript</b></a> <code>//</code> d'une ligne, suivi par la fermeture du commentaire HTML <code>--&gt;</code> et de  <code>&lt;/script&gt;</code>. Le commentaire  JavaScript est indispensable pour &eacute;viter les messages d'erreurs dans les navigateurs supportant les scripts. Tenez compte du fait qu'avant et apr&egrave;s le commentaire HTML, un passage &agrave; la ligne est absolument indispensable.</p>


<h3 class="inf">Attention:</h3>

<p>Il n'y a pas de r&egrave;gle pr&eacute;cise qui stipule &agrave; quel endroit d'un fichier HTML un passage pour JavaScript doit &ecirc;tre d&eacute;fini. Mais il est usuel pour les programmeurs en JavaScript de d&eacute;finir un tel passage dans l'ent&ecirc;te du fichier HTML, donc entre <code>&lt;head&gt;</code> et <code>&lt;/head&gt;</code>. Ainsi on s'assure au plus vite que le code soit d&eacute;j&agrave; lu par le navigateur WWW et disponible au moment o&ugrave; il doit &ecirc;tre ex&eacute;cut&eacute;.
.</p>

<p>Le code JavaScript peut &ecirc;tre ex&eacute;cut&eacute; automatiquement lors de la lecture du fichier HTML. C'est le cas quand des commandes JavaScript se trouvent dans un passage JavaScript, mais hors de toute <img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="langage/fonctions.htm"><b>fonction d&eacute;finie soi-m&ecirc;me</b></a> comme dans l'exemple ci-dessus. Dans de tels cas il est quelquefois aussi n&eacute;cessaire de noter le passage en Script dans le corps du fichier &agrave; savoir entre  <code>&lt;body&gt;</code>...<code>&lt;/body&gt;</code>. Par exemple lorsque vous voulez inscrire avec JavaScript de fa&ccedil;on dynamique &agrave; la fin du fichier la date et l'heure de la derni&egrave;re modification du fichier.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><img src="../src/js10.gif" width="30" height="30" border="0" alt="JavaScript 1.0"><img src="../src/netsc2.gif" width="30" height="30" border="0" alt="Netscape 2.0"><img src="../src/msie3.gif" width="30" height="30" border="0" alt="MS IE 3.0">&nbsp;<a class="an" name="repereshtml_javascript">&Eacute;l&eacute;ments de JavaScript dans des rep&egrave;res HTML</a></h2>

<p>JavaScript peut aussi figurer dans des rep&egrave;res HTML courants. Ce n'est pas dans ce cas un code programme compliqu&eacute; mais en r&egrave;gle g&eacute;n&eacute;rale seulement l'appel &agrave; des m&eacute;thodes, fonctions, objets, caract&eacute;ristiques d&eacute;termin&eacute;s. Il existe pour ceci ce que l'on appelle des  <img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="langage/gestevenements.htm"><b>gestionnaires d'&eacute;v&eacute;nements</b></a>. Ce sont des attributs  dans des rep&egrave;res HTML par lesquels des JavaScripts peuvent &ecirc;tre activ&eacute;s. Il est &eacute;tabli pour chacun des gestionnaires d'&eacute;v&eacute;nements possibles dans quels rep&egrave;res HTML il peut &ecirc;tre plac&eacute;.</p>

<h3 class="xmp">Exemple:</h3>

<p><img src="../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="langage/affichage/carre.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a></p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Test&lt;/title&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
function carre() {
   var resultat = document.formulaire.saisie.value * document.formulaire.saisie.value;
   alert(&quot;Le carr� de &quot; + document.formulaire.saisie.value + &quot; = &quot; + resultat);
}
//--&gt;
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;form name=&quot;formulaire&quot; action=&quot;&quot;&gt;
&lt;input type=&quot;text&quot; name=&quot;saisie&quot; size=&quot;3&quot;&gt;
&lt;input type=&quot;button&quot; value=&quot;Calculer le carr�&quot; onClick=&quot;carre()&quot;&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication</h3>

<p>L'exemple ci-dessus montre un fichier HTML complet Dans l'ent&ecirc;te est d&eacute;fini une  <img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="langage/fonctions.htm"><b>fonction d&eacute;finie soi-m&ecirc;me</b></a>, la fonction nomm&eacute;e <code>carre()</code>. La fonction calcule le carr&eacute; d'un nombre que l'utilisateur entre dans le champ de saisie nomm&eacute; <code>saisie</code> du formulaire not&eacute; plus bas. Ce code JavaScript n'est cependant ex&eacute;cut&eacute; que quand la fonction est appel&eacute;e explicitement. Dans l'exemple ci-dessus, l'appel se fait &agrave; l'aide d'un  <img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../html/formulaires/boutonsacliquer.htm"><b>bouton pouvant &ecirc;tre cliqu&eacute;</b></a>. Quand l'utilisateur clique sur le bouton, le carr&eacute; du nombre entr&eacute; est sorti. Pour cela est not&eacute; dans le rep&egrave;re HTML du bouton pouvant &ecirc;tre cliqu&eacute; l'attribut <code>onClick=</code>  - un gestionnaire d'&eacute;v&eacute;nement qui signifie &quot;lors d'un cliquement&quot;.</p>

<h3 class="inf">Attention:</h3>

<p>Dans la partie sur les <img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="langage/gestevenements.htm"><b>gestionnaires d'&eacute;v&eacute;nements</b></a> sont d&eacute;crits les gestionnaires d'&eacute;v&eacute;nements existants &agrave; part <code>onClick=</code> et dans quels rep&egrave;res HTML ils peuvent &ecirc;tre plac&eacute;s.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><img src="../src/js11.gif" width="30" height="30" border="0" alt="JavaScript 1.1"><img src="../src/netsc3.gif" width="30" height="30" border="0" alt="Netscape 3.0"><img src="../src/msie4.gif" width="30" height="30" border="0" alt="MS IE 4.0">&nbsp;<a class="an" name="fichiers_javascript">JavaScript dans des fichiers distincts</a></h2>

<p>Depuis la version 1.1 de JavaScript (et aussi &agrave; partir de HTML 4.0), il est possible de noter du code JavaScript dans des fichiers s&eacute;par&eacute;s. C'est tr&egrave;s utile si vous voulez utiliser les m&ecirc;mes fonctions JavaScript dans plusieurs fichiers HTML. Car ainsi, vous n'avez besoin de noter le code qu'une seule fois et pouvez le r&eacute;f&eacute;rencer dans plusieurs fichiers HTML.</p>

<h3 class="xmp">Exemple: fichier JavaScript <var>carre.js</var></h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
function carre() {
   var resultat = document.formulaire.saisie.value * document.formulaire.saisie.value;
   alert(&quot;Le carr� de &quot; + document.formulaire.saisie.value + &quot; = &quot; + resultat);
   }
</pre></td></tr></table>

<h3 class="xmp">Exemple: fichier HTML</h3>

<p><img src="../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="langage/affichage/carre2.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a></p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Test JavaScript&lt;/title&gt;
&lt;script src=&quot;carre.js&quot; type=&quot;text/javascript&quot;&gt;
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;form name=&quot;formulaire&quot; action=&quot;&quot;&gt;
&lt;input type=&quot;text&quot; name=&quot;saisie&quot; size=&quot;3&quot;&gt;
&lt;input type=&quot;button&quot; value=&quot;Calculer le carr�&quot; onClick=&quot;carre()&quot;&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication</h3>

<p>Il s'agit ici du m&ecirc;me exemple que dans la <img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#repereshtml_javascript"><b>paragraphe pr&eacute;c&eacute;dent</b></a>. La diff&eacute;rence r&eacute;side finalement en ce que le code JavaScript figure dans un fichier s&eacute;par&eacute;. Pour cela, notez dans le rep&egrave;re d'ouverture <code>&lt;script&gt;</code> la mention <code>src=</code> (<i>src = source = source</i>). Comme valeur, attribuez l'URI d'un fichier s&eacute;par&eacute; contenant le code source. Ici s'appliquent les r&egrave;gles pour r&eacute;f&eacute;rencer  en HTML <img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../html/generalites/referencer.htm"><b>r&eacute;f&eacute;rencer  en HTML</b></a>.</p>

<p>Le fichier avec le code source doit &ecirc;tre un pur fichier ASCII et avoir l'extension <code>.js</code>. Le fichier ne doit contenir rien d'autre que du code JavaScript.</p>


<h3 class="inf">Attention:</h3>

<p>Il se peut qu'un code JavaScript not&eacute; dans un fichier distinct fonctionne tr&egrave;s bien localement mais ne fonctionne plus apr&egrave;s avoir transf&eacute;r&eacute; les fichiers sur un serveur WWW. Demandez alors &agrave; votre fournisseur d'acc&egrave;s ou &agrave; l'administrateur Web du serveur d'ajouter le type Mime <code>text/javascript</code> pour les fichiers avec extension  <code>.js</code> dans la configuration du serveur Web. Autrement vous pouvez aussi essayer en notant dans le rep&egrave;re d'ouverture <code>&lt;script&gt;</code> pour l'attribut <code>type</code> le type Mime <code>application/x-javascript</code> au lieu de <code>text/javascript</code>. Cela fonctionne alors pour quelques serveurs.</p>







<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a>
</td></tr>
<tr><td bgcolor="#EEEEEE" class="doc" align="right"><a href="langage/regles.htm"><img src="../src/suivant.gif" width="10" height="10" border="0" hspace="10" alt="page suivante"></a></td>
<td bgcolor="#FFFFFF"><img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="langage/regles.htm"><b>R&egrave;gles g&eacute;n&eacute;rales pour JavaScript</b></a>
</td></tr>
<tr>
<td bgcolor="#EEEEEE" class="doc" align="right"><a href="../xml/representation/fonctionsxpath.htm"><img src="../src/precedent.gif" width="10" height="10" border="0" hspace="10" alt="page pr&eacute;c&eacute;dente"></a></td>
<td bgcolor="#FFFFFF" width="100%"><img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="../xml/representation/fonctionsxpath.htm"><b>Fonctions XPath</b></a>
</td>
</tr>
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;</td></tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="bottom"><img src="../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../index.htm"><b>SELFHTML</b></a>/<a href="../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>JavaScript/DOM</b></a> </td>
</tr>
</table>

<p>&copy; 2001 Stefan M&uuml;nz / &copy; 2003 Traduction <img src="../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:13405@free.fr">Serge Fran&ccedil;ois, 13405@free.fr</a><br><img src="../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:selfhtml@selfhtml.com.fr">selfhtml@selfhtml.com.fr</a></p>



</body>
</html>
