<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>SELFHTML: HTML dynamique / Les diff&eacute;rents mod&egrave;les DHTML / L'ancien mod&egrave;le DHTML de Netscape</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Comment mettre en &#339;uvre l'ancienne technique DHTML de Netscape, qui repose sur les calques">
<meta name="keywords"       content="SELFHTML, HTML dynamique, Dynamic HTML, DHTML, Netscape, calques, Layer, objet layers">
<meta name="author"         content="Stefan M&uuml;nz, selfhtml@teamone.de">
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<meta name="DC.Publisher"   content="Serge Fran&ccedil;ois, selfhtml@selfhtml.com.fr">
<meta name="DC.Date"        content="2003-01-27T08:00+00:00">
<meta name="DC.Identifier"  content="http://selfhtml.selfhtml.com.fr/dhtml/modeles/netscape.htm">
<meta name="DC.Language"    content="fr">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.Create" content="2003-01-27T08:00+00:00">
<meta name="SELF.Version"   content="1">
<meta name="SELF.Pagetype"  content="Information">
<meta name="SELF.Path"      content="SELFHTML == ../../index.htm // HTML dynamique == ../index.htm //  Les diff&eacute;rents mod&egrave;les DHTML == index.htm">
<!-- Matomo -->
<script type="text/javascript">
  var _paq = window._paq = window._paq || [];
  /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="//matomo.boitasite.com/";
    _paq.push(['setTrackerUrl', u+'matomo.php']);
    _paq.push(['setSiteId', '1']);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
<!-- End Matomo Code -->
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#AA5522" vlink="#772200" alink="#000000">
<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="top"><img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../../index.htm"><b>SELFHTML</b></a>/<a href="../../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="../index.htm"><b>HTML dynamique</b></a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>Les diff&eacute;rents mod&egrave;les DHTML</b></a></td>
</tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#EEEEEE" class="doc" width="110"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></td>
<td bgcolor="#EEEEEE" class="doc" valign="bottom" width="100%"><h2>L'ancien mod&egrave;le DHTML de Netscape</h2>
<tr>
<td bgcolor="#EEEEEE" class="doc" valign="top" align="center">
<img src="../../src/docx.gif" width="30" height="20" vspace="6" border="0" alt="Page d'information: vue d'ensemble">
</td>
<td bgcolor="#FFFFFF" valign="top" nowrap>
<p>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#generalites"><b>G&eacute;n&eacute;ralit&eacute;s sur le mod&egrave;le DHTML de Netscape 4.x</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#cacher"><b>Afficher/cacher de fa&ccedil;on dynamique les passages calques</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#chevaucher"><b>Superposer de fa&ccedil;on dynamique les passages calques</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#mouvoir"><b>Mouvoir de fa&ccedil;on dynamique les passages calques</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#agrandir"><b>Agrandir/r&eacute;duire de fa&ccedil;on dynamique les passages calques</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#echanger"><b>&Eacute;changer de fa&ccedil;on dynamique les contenus de calques</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#simuler"><b>Simuler un calque sans &eacute;l&eacute;ment layer</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#event_objekt"><b>L'objet Event</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#inline_scripts"><b>Scripts Inline pour les calques </b></a><br>
</p>
</td>
</tr><tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;<a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr>
</table>



<h2 class="Sh2"><a class="an" name="generalites">G&eacute;n&eacute;ralit&eacute;s sur le mod&egrave;le DHTML de Netscape 4.x</a></h2>

<p>La technique des calques pr&eacute;sent&eacute;e ici <b>ne</b> fonctionne <b>qu'avec Netscape version 4.x</b> . Dans la version 6.0 enti&egrave;rement reprogramm&eacute;e et dans les sources Mozilla, toute la technique des calques n'est plus impl&eacute;ment&eacute;e et ne fonctionne plus. La raison en est que le consortium W3 a refus&eacute; la technique des calques. &Agrave; la place est recommand&eacute; le <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="dom.htm"><b> mod&egrave;le DOM (DOM)</b></a>, qui est &eacute;galement impl&eacute;ment&eacute; dans Netscape &agrave; partir de la version 6.0. La technique des calques telle qu'elle est d&eacute;crite ici n'est donc significative que pour des raisons de compatibilit&eacute; vers l'amont avec les navigateurs Netscape de la s&eacute;rie 4.x.</p>

<p>&quot;HTML dynamique&quot; - pour Netscape 4.x, ce <b>n</b>'est <b>pas</b>, comme pour le mod&egrave;le DOM ou pour l'ancien mod&egrave;le de l'Explorer Internet MS, l'acc&egrave;s &agrave; volont&eacute; et a posteriori &agrave; tous les &eacute;l&eacute;ments d'un fichier HTML. Avec Netscape, vous ne pouvez donc pas, comme avec l'Explorer Internet MS, formater diff&eacute;remment a posteriori un paragraphe de texte d&eacute;fini avec <code>&lt;p&gt;</code>...<code>&lt;/p&gt;</code>, ou le transformer en titre nï¿½1.</p>

<p>HTML dynamique n'existe chez Netscape 4.x qu'en relation avec des &eacute;l&eacute;ments positionn&eacute;s. Pour Netscape, HTML dynamique repr&eacute;sente la possibilit&eacute; de traiter de fa&ccedil;on dynamique des calques positionn&eacute;s - donc de les faire appara&icirc;tre, dispara&icirc;tre, les d&eacute;placer etc...</p>

<p>La technologie des calques de Netscape est cependant tr&egrave;s puissante. La condition pr&eacute;alable en est la d&eacute;finition de calques en HTML. Certes, il est possible aussi d'&eacute;crire du HTML dynamique pour Netscape sans avoir recours au rep&egrave;re <code>layer</code> - cependant, tout le concept HTML dynamique que Netscape a mis dans la version 4.x de son navigateur repose sur le rep&egrave;re <code>layer</code>. Si on veut renoncer au rep&egrave;re <code>layer</code> , il n'y a qu'une issue: &quot;simuler&quot; les calques.</p>

<p>Pour cette raison, les exemples de cette page se concentrent pour l'essentiel sur la technologie des calques. Car c'est seulement ainsi qu'appara&icirc;t clairement la solution que poursuit Netscape avec son impl&eacute;mentation de HTML dynamique.</p>

<p>Pour comprendre les exemples de cette page, vous devez avant tout conna&icirc;tre les  <img src="../../src/chap.gif" width="15" height="13" border="0" alt="Chapitre: vue d'ensemble">&nbsp;<a href="../../html/calques/index.htm"><b>calques</b></a> en HTML, ainsi qu'avoir des connaissances pr&eacute;alables en  <img src="../../src/chap.gif" width="15" height="13" border="0" alt="Chapitre: vue d'ensemble">&nbsp;<a href="../../javascript/index.htm"><b>JavaScript</b></a>.

Pour la technique des calques, l'objet JavaScript  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../javascript/objets/layers.htm"><b>layers</b></a> est essentiel. L&agrave; sont d&eacute;crites syst&eacute;matiquement les diff&eacute;rentes propri&eacute;t&eacute;s et m&eacute;thodes qui sont utilis&eacute;es ici dans les exemples.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr></table>
<h2 class="Sh2"><img src="../../src/js12.gif" width="30" height="30" border="0" alt="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" border="0" alt="Netscape 4.0">&nbsp;<a class="an" name="cacher">Afficher/cacher de fa&ccedil;on dynamique les passages calques</a></h2>

<p>&Agrave; l'aide de JavaScript, vous pouvez afficher et cacher des calques de mani&egrave;re dynamique. Selon la fa&ccedil;on dont vous d&eacute;finissez vos calques, vous pouvez obtenir les effets les plus divers. L'exemple qui suit d&eacute;montre comment vous pouvez d&eacute;finir une &quot;s&eacute;ance de diapositives&quot; constitu&eacute;e de textes courts. L'utilisateur n'a plus besoin de faire d&eacute;filer l'&eacute;cran mais clique d'un texte &agrave; l'autre. Les textes sont affich&eacute;s dans une &quot;boite&quot;.</p>

<h3 class="xmp">Exemple:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/aphorismes.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a></p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var texte_actuel = 0;
var Texte = 3;

function texte_suivant() {
 ++texte_actuel;
 if(texte_actuel &gt;= Texte) texte_actuel = 0;
 for(var i=0;i&lt;Texte;i++)
  document.layers[i].visibility = &quot;hide&quot;;
 document.layers[texte_actuel].visibility = &quot;show&quot;;
}
//--&gt;
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;layer visibility=&quot;show&quot; top=&quot;150&quot; left=&quot;50&quot; width=&quot;400&quot; height=&quot;125&quot; bgcolor=&quot;#DDFFDD&quot;&gt;
 &lt;p style=&quot;color:#006600; font-family:Arial,Helvetica,San-Serif; font-size:14pt; font-weight:bold;&quot;&gt;&lt;span style=&quot;color:#000000; font-family:Arial,Helvetica,San-Serif; font-size:24pt; font-weight:bold;&quot;&gt;1.&lt;/span&gt;&lt;br&gt;
On ne peut poser de pont qu'entre des rives sï¿½parï¿½es l'une de l'autre.&lt;/p&gt;
&lt;/layer&gt;
&lt;layer visibility=&quot;hide&quot; top=&quot;150&quot; left=&quot;50&quot; width=&quot;400&quot; height=&quot;125&quot; bgcolor=&quot;#DDFFDD&quot;&gt;
&lt;p style=&quot;color:#006600; font-family:Arial,Helvetica,San-Serif; font-size:14pt; font-weight:bold; &quot;&gt;&lt;span style=&quot;color:#000000; font-family:Arial,Helvetica,San-Serif; font-size:24pt; font-weight:bold;&quot;&gt;2.&lt;/span&gt;&lt;br&gt;
Plus l'attente est grande, plus son accomplissement est improbable.&lt;/p&gt;
&lt;/layer&gt;
&lt;layer visibility=&quot;hide&quot; top=&quot;150&quot; left=&quot;50&quot; width=&quot;400&quot; height=&quot;125&quot; bgcolor=&quot;#DDFFDD&quot;&gt;
&lt;p style=&quot;color:#006600; font-family:Arial,Helvetica,San-Serif; font-size:14pt; font-weight:bold; &quot;&gt;&lt;span style=&quot;color:#000000; font-family:Arial,Helvetica,San-Serif; font-size:24pt; font-weight:bold;&quot;&gt;3.&lt;/span&gt;&lt;br&gt;
Celui qui se donne n'aime pas, parce qu'il ne s'aime pas;
seul celui qui s'offre aime, parcequ'il s'aime.&lt;/p&gt;
&lt;/layer&gt;
&lt;layer top=&quot;275&quot; left=&quot;50&quot; width=&quot;400&quot; bgcolor=&quot;#DDFFDD&quot;&gt;
&lt;center&gt;&lt;form name=&quot;formulaire&quot; action=&quot;&quot;&gt;&lt;input type=&quot;button&quot; value=&quot; suivant &gt;&gt; &quot; onClick=&quot;texte_suivant()&quot;&gt;&lt;/form&gt;&lt;/center&gt;
&lt;/layer&gt;
&lt;/body&gt;&lt;/html&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans le corps du fichier HTML de l'exemple sont d&eacute;finis en tout quatre calques. Les trois premiers contiennent des textes qui doivent changer de fa&ccedil;on dynamique. Le quatri&egrave;me calque contient un bouton. Quand l'utilisateur clique sur le bouton, une  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../javascript/langage/fonctions.htm"><b>fonction</b></a> JavaScript nomm&eacute;e <code>texte_suivant()</code> est appel&eacute;e. Cette fonction est d&eacute;finie dans un passage JavaScript situ&eacute; dans l'ent&ecirc;te du fichier HTML. La fonction fait en sorte qu'&agrave; chaque fois le texte suivant soit affich&eacute;.</p>

<p>Veillez &agrave; ce que les trois premiers calques aient des mentions de position identiques. Les mentions <code>top=&quot;150&quot;</code> (le coin sup&eacute;rieur gauche commence &agrave; 150 pixels du haut), <code>left=&quot;50&quot;</code> (le coin sup&eacute;rieur gauche commence &agrave; 50 pixels de la gauche), <code>width=&quot;400&quot;</code> (largeur du calque: 400 pixels), et <code>height=&quot;125&quot;</code> (hauteur du calque: 125 pixels), sont les m&ecirc;mes pour tous les calques. Les trois calques ne se distinguent en fin de compte que par la mention de <code>visibilty=</code>. Le premier calque est fix&eacute; sur &quot;visible&quot; avec <code>visibilty=&quot;show&quot;</code>, les deux autres sur &quot;invisible&quot; avec <code>visibilty=&quot;hide&quot;</code>. Ainsi on obtient que, dans un premier temps, seul le premier calque soit affich&eacute; &agrave; l'&eacute;cran.</p>

<p>Le quatri&egrave;me calque, le bouton de contr&ocirc;le donc, contient lui aussi des mentions de position. Il a la m&ecirc;me largeur que les deux premiers calques et commence aussi &agrave; la m&ecirc;me position &agrave; gauche. Pour la hauteur, il commence exactement 125 pixels plus bas que les trois premiers calques. &Eacute;tant donn&eacute; que ceux-ci ont une hauteur de 125 pixels, le &quot;calque du bouton de contr&ocirc;le&quot; colle sans joint visible aux calques du haut. Il ne contient aucune mention relative &agrave; la visibilit&eacute;. Ce qui signifie qu'il est visible et qu'au cours du d&eacute;roulement du JavaScript, rien ne changera. Car le contenu de ce calque dirige ce qui va arriver.</p>

<p>Dans le  passage JavaScript de l'ent&ecirc;te de fichier sont d'abord d&eacute;finies deux  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../javascript/langage/variables.htm"><b>variables</b></a> globales. &Eacute;tant donn&eacute; qu'elles se trouvent hors de toute fonction, leur valeur actuelle reste valable aussi longtemps que le fichier HTML est affich&eacute;. Dans la variable <code>texte_actuel</code> est sauvegard&eacute; le num&eacute;ro du texte calque. Dans <code>Texte</code> est sauvegard&eacute; le nombre de textes pouvant &ecirc;tre &eacute;chang&eacute;s en dynamique. Vous pourriez d&eacute;finir au lieu de trois calques avec du texte 10 ou 100 calques de ce genre. En fonction du nombre de calques d&eacute;finis, vous devez simplement modifier l'affectation de la valeur de d&eacute;part de <code>Texte</code>.</p>

<p>Dans la fonction <code>texte_suivant()</code> est d'abord incr&eacute;ment&eacute; le num&eacute;ro de <code>texte_actuel</code>, car c'est &agrave; chaque fois le texte suivant qui doit &ecirc;tre affich&eacute;. Pour finir, tous les calques avec des textes sont fix&eacute;s sur &quot;invisible&quot; dans une boucle for. &Agrave; la fin c'est le texte qui doit &ecirc;tre affich&eacute; (<code>texte_actuel</code>) qui est fix&eacute; sur &quot;visible&quot;. C'est ce qui produit l'effet d'une s&eacute;ance de diapositives.</p>

<h3 class="inf">Attention:</h3>

<p>Netscape &eacute;largit le calque selon son contenu. Quand le contenu d'un texte dans l'exemple ci-dessus est plus grand que le passage d&eacute;fini, il recouvre le calque du bouton de contr&ocirc;le, de telle fa&ccedil;on pourtant que le calque avec le bouton de contr&ocirc;le est pos&eacute; sur la partie inf&eacute;rieure du calque avec le texte. La raison en est que le calque avec le bouton de contr&ocirc;le est d&eacute;fini apr&egrave;s le calque avec le texte et que pour cette raison, il est plus haut sur le tas (couches). Si vous voulez fixer la taille d'un calque ind&eacute;pendamment de son contenu, vous devez utiliser l'attribut <code>clip=</code> (voir aussi:   <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../html/calques/definir.htm#domaine_affichage"><b>Rogner le domaine d'affichage des calques</b></a>).</p>







<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr></table>
<h2 class="Sh2"><img src="../../src/js12.gif" width="30" height="30" border="0" alt="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" border="0" alt="Netscape 4.0">&nbsp;<a class="an" name="chevaucher">Superposer de fa&ccedil;on dynamique les passages calques</a></h2>

<p>Vous pouvez positionner des calques de telle fa&ccedil;on qu'ils se superposent. Sans l'intervention de JavaScript, cela ne donne pas beaucoup de sens, car l'utilisateur est cens&eacute; pouvoir voir le contenu de chaque calque. Avec l'aide de JavaScript, vous pouvez faire en sorte que l'utilisateur puisse faire appara&icirc;tre les diff&eacute;rents calques en avant plan afin d'afficher leur contenu. Par ce moyen, vous pouvez parfaitement mettre diff&eacute;rents contenus, qui normalement n&eacute;cessiteraient plusieurs pages, sur une seule page WWW. Dans l'exemple suivant, les calques sont rang&eacute;s comme dans un fichier &agrave; cartes. L'utilisateur peut en &quot;retirer&quot; un.</p>


<h3 class="xmp">Exemple:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/cardpage.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a></p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;style type=&quot;text/css&quot;&gt;
&lt;!--
layer.Text { padding:5px; font-size:9pt; font-family:Arial,Helvetica,Sans-Serif; }
layer.entete { font-size:9pt; font-family:Arial,Helvetica,Sans-Serif; font-weight:bold; text-align:right; }
a:link, a:visited, a:active { color:white; }
a.normal:link { color:#AA5522; text-decoration:underline; }
a.normal:visited { color:#772200; text-decoration:underline; }
a.normal:active { color:#000000; text-decoration:underline; }
--&gt;
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var actif = &quot;accueil&quot;;
function mise_en_valeur(nouvel_actif)
{
 document.layers['opinion'].zIndex = 1;
 document.layers['aide'].zIndex = 2;
 document.layers['produits'].zIndex = 3;
 document.layers['accueil'].zIndex = 4;
 document.layers[actif].bgColor = &quot;#CCCCCC&quot;;
 document.layers[actif].layers[0].bgColor = &quot;#666666&quot;;
 document.layers[actif].layers[1].visibility = &quot;hide&quot;;
 document.layers[nouvel_actif].zIndex = 5;
 document.layers[nouvel_actif].bgColor = &quot;#FFCCFF&quot;;
 document.layers[nouvel_actif].layers[0].bgColor = &quot;#000000&quot;;
 document.layers[nouvel_actif].layers[1].visibility = &quot;show&quot;;
 actif = nouvel_actif;
}
//--&gt;
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;layer id=&quot;opinion&quot; top=&quot;130&quot; left=&quot;10&quot; width=&quot;360&quot; height=&quot;230&quot; bgcolor=&quot;#CCCCCC&quot;&gt;
  &lt;layer class=&quot;entete&quot; width=&quot;360&quot; height=&quot;25&quot; bgcolor=&quot;#666666&quot;&gt;
  &lt;a href=&quot;javascript:mise_en_valeur('opinion')&quot;&gt;opinion&lt;/a&gt;
  &lt;/layer&gt;
  &lt;layer class=&quot;Text&quot; top=&quot;25&quot; visibility=&quot;hide&quot;&gt;
  Donnez votre avis:
  &lt;form name=&quot;formulaire&quot; action=&quot;&quot;&gt;&lt;textarea rows=&quot;5&quot; cols=&quot;25&quot;&gt;bla bla&lt;/textarea&gt;&lt;/form&gt;
  &lt;/layer&gt;
&lt;/layer&gt;
&lt;layer id=&quot;aide&quot; top=&quot;155&quot; left=&quot;70&quot; width=&quot;360&quot; height=&quot;230&quot; bgcolor=&quot;#CCCCCC&quot;&gt;
  &lt;layer class=&quot;entete&quot; width=&quot;360&quot; height=&quot;25&quot; bgcolor=&quot;#666666&quot;&gt;
  &lt;a href=&quot;javascript:mise_en_valeur('aide')&quot;&gt;aide&lt;/a&gt;
  &lt;/layer&gt;
  &lt;layer class=&quot;Text&quot; top=&quot;25&quot; visibility=&quot;hide&quot;&gt;
  Notre aide est vraiment bla bla
  &lt;/layer&gt;
&lt;/layer&gt;
&lt;layer id=&quot;produits&quot; top=&quot;180&quot; left=&quot;130&quot; width=&quot;360&quot; height=&quot;230&quot; bgcolor=&quot;#CCCCCC&quot;&gt;
  &lt;layer class=&quot;entete&quot; width=&quot;360&quot; height=&quot;25&quot; bgcolor=&quot;#666666&quot;&gt;
  &lt;a href=&quot;javascript:mise_en_valeur('produits')&quot;&gt;produits&lt;/a&gt;
  &lt;/layer&gt;
  &lt;layer class=&quot;Text&quot; top=25 visibility=hide&gt;
  nos produits sont incroyablement bla bla
  &lt;/layer&gt;
&lt;/layer&gt;
&lt;layer id=&quot;accueil&quot; top=&quot;205&quot; left=&quot;190&quot; width=&quot;360&quot; height=&quot;230&quot; bgcolor=&quot;#FFCCFF&quot;&gt;
  &lt;layer class=&quot;entete&quot; width=&quot;360&quot; height=&quot;25&quot; bgcolor=&quot;#000000&quot;&gt;
  &lt;a href=&quot;javascript:mise_en_valeur('accueil')&quot;&gt;ACCUEIL&lt;/a&gt;
  &lt;/layer&gt;
  &lt;layer class=&quot;Text&quot; top=&quot;25&quot; visibility=&quot;show&quot;&gt;
  Notre page d'accueil est notre bla bla
  &lt;/layer&gt;
&lt;/layer&gt;
&lt;/body&gt;&lt;/html&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple sont d&eacute;finis quatre &quot;grands&quot; calques: un pour &quot;opinion&quot;, un pour les &quot;produits&quot;, pour l'&quot;aide&quot; et un pour l'accueil, ce qui veut dire que ce calque repr&eacute;sente une sorte de page d'accueil, un calque d'accueil. Ce calque est d'abord affich&eacute; en premier plan, pour la bonne raison qu'il a &eacute;t&eacute; d&eacute;fini en dernier. Si vous ne notez aucun attribut <code>z-index=</code> pour les calques, c'est toujours le calque d&eacute;fini en dernier qui est tout au dessus.</p>

<p>Dans l'exemple, vous pouvez aussi reconna&icirc;tre que dans chacun des quatre grands calques  ont &eacute;t&eacute; d&eacute;finis deux calques &quot;int&eacute;rieurs&quot;. Les calques d&eacute;finis dans d'autres calques sont positionn&eacute;s relativement &agrave; leur calque parent. Pour cela, vous devez vous repr&eacute;senter un calque comme un nouveau petit corps de fichier. Tout ce qui est not&eacute; &agrave; l'int&eacute;rieur est positionn&eacute; par rapport au calque ext&eacute;rieur.</p>

<p>Les mentions concernant <code>top=</code>, <code>left=</code>, <code>height=</code> et <code>width=</code> dans les calques de l'exemple ci-dessus ont toutes &eacute;t&eacute; pr&eacute;cis&eacute;es exactement pour faire en sorte que les calques repr&eacute;sentent optiquement un fichier &agrave; cartes proprement tri&eacute;es. Essayez de trouver dans l'exemple les interd&eacute;pendances des mentions de positionnement. Ainsi vous pouvez reconna&icirc;tre comment vous devez proc&eacute;der pour placer plusieurs calques bien r&eacute;partis dans la fen&ecirc;tre d'affichage - d'apr&egrave;s un crit&egrave;re que vous choisissez.</p>

<p>Chacun des &quot;grands&quot; calques contient dans l'exemple ci-dessus deux calques int&eacute;rieurs: un calque qui fait fonction de barre de titre et qui contient un lien, et un calque qui contient le contenu proprement-dit. Les liens dans les calques-barres de titre appellent une fonction JavaScript nomm&eacute;e <code>mise_en_valeur()</code>. Cette fonction met en oeuvre la mise en avant dynamique du &quot;grand&quot; calque, qui fait partie du lien cliqu&eacute; (donc du calque parent du calque contenant le lien).</p>

<p>Dans le passage JavaScript, dans lequel se trouve la fonction <code>mise_en_valeur()</code>, est d&eacute;finie, avant la fonction, une variable <code>actif</code>. Elle re&ccedil;oit au d&eacute;but le nom du calque qui doit &ecirc;tre plac&eacute; devant. C'est le nom qui a &eacute;t&eacute; attribu&eacute; dans l'attribut <code>id=</code> du calque correspondant.<br>
La fonction <code>mise_en_valeur()</code> attend un param&egrave;tre, &agrave; savoir le nom du calque qui doit &ecirc;tre mis en avant &agrave; la place de celui qui l'&eacute;tait jusqu'alors. Dans les liens qui appellent la fonction est l&agrave; aussi transmis le nom qui a &eacute;t&eacute; affect&eacute; dans le calque correspondant avec <code>id=</code>.</p>

<p>Dans la fonction <code>mise_en_valeur()</code> est &eacute;tabli dans un premier temps l'ordre normal des calques. Cela s'obtient en affectant un nombre &agrave; la propri&eacute;t&eacute; de l'objet layers <code>zIndex</code>. Plus le chiffre est &eacute;lev&eacute;, plus le calque sera vers le haut dans la pile. La reconstruction de l'ordre normal des calques fait en sorte que la &quot;pile de cartes du fichier&quot;, que l'exemple repr&eacute;sente, ait toujours l'air rang&eacute;e.</p>

<p>Ensuite, le calque jusqu'alors actif d&eacute;sign&eacute; par <code>document.layers[actif]</code> est trait&eacute; par plusieurs instructions. La mention <code>actif</code> entre crochets d&eacute;signe dans un premier temps le calque <code>&quot;accueil&quot;</code>. Cependant, &agrave; la fin de la fonction, la valeur de la variable <code>actif</code> est modifi&eacute;e: c'est l&agrave; que lui est affect&eacute; le nom du nouveau calque plac&eacute; au premier plan. Ainsi, ce calque sera-t-il, au prochain appel de la fonction, celui qui est concern&eacute; par <code>document.layers[actif]</code>.<br>
Les instructions qui concernent le calque jusqu'alors actif affectent &agrave; celui-ci les attributs qui, optiquement, le placent &quot;en dessous&quot; dans la pile de cartes du fichier.</p>

<p>Le calque dont le nom est transmis avec le param&egrave;tre <code>nouvel_actif</code> re&ccedil;oit en revanche les attributs optiques qui font de lui le calque mis en valeur. Il re&ccedil;oit le nombre le plus &eacute;lev&eacute; pour <code>zIndex</code>. Ainsi, il sera affich&eacute; comme calque du dessus.</p>

<h3 class="inf">Attention:</h3>

<p>Dans le calque <code>opinion</code> est d&eacute;fini un formulaire. Ce formulaire est adress&eacute; dans Netscape 4.x avec <code>document.layers.opinion.document.formulaire</code>, &eacute;tant donn&eacute; qu'il fait partie du calque <code>opinion</code>. Un calque repr&eacute;sente pour Netscape un document dans le document et a son propre objet <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../javascript/objets/document.htm"><b>document</b></a>.</p>






<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr></table>
<h2 class="Sh2"><img src="../../src/js12.gif" width="30" height="30" border="0" alt="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" border="0" alt="Netscape 4.0">&nbsp;<a class="an" name="mouvoir">Mouvoir de fa&ccedil;on dynamique les passages calques</a></h2>

<p>Vous pouvez &quot;faire sauter&quot; ou &quot;faire voyager&quot; dans la fen&ecirc;tre d'affichage, des calques avec quelconques contenus. Le saut d'un endroit &agrave; un autre n'est qu'une seule commande, &eacute;tant donn&eacute; qu'elle est disponible comme m&eacute;thode dans l'objet layers de JavaScript. Si en revanche vous d&eacute;sirez des effets de mouvement dirig&eacute;s par le temps, vous devez programmer &agrave; la main le calcul de la position depuis le point de d&eacute;part jusqu'&agrave; l'arriv&eacute;e de la trajectoire. L'exemple suivant montre le principe du fonctionnement.</p>

<h3 class="xmp">Exemple:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/fairesauter.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a></p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;style type=&quot;text/css&quot;&gt;
&lt;!--
p.Nav { font-size:9pt; font-weight:bold }
a.Navlink:link { color:#FF0000 }
a.Navlink:visited { color:#FF0000 }
a.Navlink:active { color:#000000 }
--&gt;
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
function mouv_horiz(num_calque,jusque_gauche,Pixel,Pause) {
 var Restpixel = jusque_gauche - document.layers[num_calque].left;
 if(jusque_gauche &lt; document.layers[num_calque].left) Pixel=0-Pixel;
 if(Math.abs(Restpixel) &gt; Math.abs(Pixel))
   document.layers[num_calque].moveBy(Pixel,0);
 else
   document.layers[num_calque].moveBy(Restpixel,0);
 if(document.layers[num_calque].left != jusque_gauche)
window.setTimeout('mouv_horiz('+num_calque+','+jusque_gauche+','+Math.abs(Pixel)+')','+Pause+');
}

function mouv_vert(num_calque,jusque_haut,Pixel,Pause) {
 var Restpixel = jusque_haut - document.layers[num_calque].top;
 if(jusque_haut &lt; document.layers[num_calque].top) Pixel=0-Pixel;
 if(Math.abs(Restpixel) &gt; Math.abs(Pixel))
   document.layers[num_calque].moveBy(0,Pixel);
 else
   document.layers[num_calque].moveBy(0,Restpixel);
 if(document.layers[num_calque].top != jusque_haut)
window.setTimeout('mouv_vert('+num_calque+','+jusque_haut+','+Math.abs(Pixel)+')','+Pause+');
}
//--&gt;
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;layer left=&quot;10&quot; top=&quot;10&quot; width=&quot;450&quot; height=&quot;250&quot; bgcolor=&quot;#FFFF66&quot;&gt;
&lt;h1&gt;Faire bouger vers...&lt;/h1&gt;
&lt;p&gt;dï¿½placer:
&lt;a class=&quot;Navlink&quot; href=&quot;javascript:document.layers[0].moveTo(10,10)&quot;&gt;en haut ï¿½ gauche&lt;/a&gt; |
&lt;a class=&quot;Navlink&quot; href=&quot;javascript:document.layers[0].moveTo(260,10)&quot;&gt;en haut ï¿½ droite&lt;/a&gt; |
&lt;a class=&quot;Navlink&quot; href=&quot;javascript:document.layers[0].moveTo(10,260)&quot;&gt;en bas ï¿½ gauche&lt;/a&gt; |
&lt;a class=&quot;Navlink&quot; href=&quot;javascript:document.layers[0].moveTo(260,260)&quot;&gt;en bas ï¿½ droite&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Mouvoir vers:
&lt;a class=&quot;Navlink&quot; href=&quot;javascript:mouv_horiz(0,10,4,2)&quot;&gt;ï¿½ gauche&lt;/a&gt; |
&lt;a class=&quot;Navlink&quot; href=&quot;javascript:mouv_horiz(0,260,4,2)&quot;&gt;ï¿½ droite&lt;/a&gt; |
&lt;a class=&quot;Navlink&quot; href=&quot;javascript:mouv_vert(0,10,4,2)&quot;&gt;en  haut&lt;/a&gt; |
&lt;a class=&quot;Navlink&quot; href=&quot;javascript:mouv_vert(0,260,4,2)&quot;&gt;en bas&lt;/a&gt;&lt;/p&gt;
&lt;/layer&gt;
&lt;/body&gt;&lt;/html&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans le corps du fichier HTML de l'exemple ci-dessus est d&eacute;fini un calque. Ce calque contient en tout huit liens. Chaque lien ex&eacute;cute un code JavaScript. C'est la commande que le lien propose &agrave; l'utilisateur qui est r&eacute;alis&eacute;e.</p>

<p>Tous les liens assurent un nouveau positionnement du calque (dans lequel ils se trouvent eux-m&ecirc;mes). Ceci n'est pas une obligation: la solution choisie dans l'exemple ci-dessus sert simplement de d&eacute;monstration. Le calque qui doit &ecirc;tre positionn&eacute; en dynamique pourrait contenir tout &agrave; fait autre chose, comme par exemple des graphiques, des tableaux etc...</p>

<p>Les quatre premiers liens ex&eacute;cutent seulement des sauts, c'est &agrave; dire que lorsque l'un d'entre eux est cliqu&eacute;, le contenu du calque est simplement aussit&ocirc;t affich&eacute; &agrave; un autre endroit de la fen&ecirc;tre. Pour ex&eacute;cuter cette t&acirc;che, l'objet layers de JavaScript met &agrave; disposition la m&eacute;thode <code>moveTo()</code>. Avec une instruction telle que <code>document.layers[0].moveTo(...)</code>, vous positionnez le premier calque du fichier (celui qui a l'index 0) &agrave; une nouvelle position. La m&eacute;thode <code>moveTo()</code> fixe la nouvelle position du coin sup&eacute;rieur gauche du calque. Pour ce faire, la m&eacute;thode attend deux param&egrave;tres, &agrave; savoir d'abord la valeur pour la gauche, et ensuite la valeur pour le haut. Avec une instruction comme <code>document.layers[0].moveTo(260,10)</code>, le coin sup&eacute;rieur gauche est donc fix&eacute; &agrave; 260 pixels &agrave; partir de la gauche et &agrave; 10 pixels &agrave; partir du haut. Les mentions se r&eacute;f&egrave;rent &agrave; l'&eacute;l&eacute;ment parent respectif du calque. &Eacute;tant donn&eacute; que dans l'exemple ci-dessus aucun calque n'est plac&eacute; dans un autre calque, la fen&ecirc;tre d'affichage est donc l'&eacute;l&eacute;ment parent.</p>

<p>Alors que le simple repositionnement est possible &agrave; l'aide d'une seule instruction JavaScript, qui se trouve dans l'exemple ci-dessus directement dans le lien correspondant, une fonction distincte qui d&eacute;termine la trajectoire doit &ecirc;tre appel&eacute;e pour mouvoir les calques en dynamique. Dans l'exemple ci-dessus, il y a deux fonctions de ce type. La fonction <code>mouv_horiz()</code> peut d&eacute;placer le calque horizontalement vers la gauche ou vers la droite, la fonction <code>mouv_vert()</code> effectue &eacute;galement un d&eacute;placement, mais verticalement (vers le haut ou vers le bas). Selon le cas, c'est l'une ou l'autre fonction qui est appel&eacute;e: si l'utilisateur clique l'un des liens &quot;vers la gauche&quot; ou &quot;vers la droite&quot;, c'est la fonction <code>mouv_horiz()</code> est appel&eacute;e, et pour les liens &quot;vers le haut&quot; ou &quot;vers le bas&quot;, c'est la fonction <code>mouv_vert()</code> qui est appel&eacute;e.</p>

<p>Les deux fonctions sont &eacute;crites g&eacute;n&eacute;ralement. C'est aussi la raison pour laquelle elles attendent en entr&eacute;e diff&eacute;rents param&egrave;tres, qui sont &agrave; transmettre &agrave; leur appel:<br>
<code>num_calque</code> est le num&eacute;ro d'index du calque qui doit &ecirc;tre d&eacute;plac&eacute;. &Eacute;tant donn&eacute; que dans l'exemple c'est toujours le m&ecirc;me et unique calque existant qui doit &ecirc;tre d&eacute;plac&eacute;, c'est toujours son num&eacute;ro d'index 0 qui est transmis &agrave; l'appel des fonctions.<br>
<code>jusque_gauche</code> (pour <code>mouv_horiz()</code>) ou respectivement <code>jusque_haut</code> (pour <code>mouv_vert()</code>) est la nouvelle valeur, &agrave; laquelle le mouvement doit &ecirc;tre arr&ecirc;t&eacute;. Selon que la valeur transmise est inf&eacute;rieure ou sup&eacute;rieure &agrave; la position actuelle du calque r&eacute;sulte automatiquement la direction du mouvement des calques.<br>
<code>Pixel</code> est le nombre de pixels de chaque saut qui doit &ecirc;tre effectu&eacute;. Plus la valeur que vous transmettez est &eacute;lev&eacute;e, plus le mouvement sera rapide et saccad&eacute;. Dans l'exemple ci-dessus, 4 est transmis dans tous les cas.<br>
<code>Pause</code> est un autre param&egrave;tre pour influencer la vitesse. Plus cette valeur est &eacute;lev&eacute;e, plus le mouvement est lent.</p>

<p>Un mouvement de calque ne consiste en rien d'autre qu'en un nouveau positionnement pas &agrave; pas du calque. Dans chacune des fonctions <code>mouv_horiz()</code> et <code>mouv_vert()</code> figurent, &agrave; peu pr&egrave;s au milieu, deux instructions du type <code>document.layers[num_calque].moveBy(...)</code>, dont toujours une seule est ex&eacute;cut&eacute;e. C'est l'instruction avec laquelle le calque est repositionn&eacute;. Il s'agit simplement de l'appel de la m&eacute;thode <code>moveBy()</code> de l'objet layers. Cette m&eacute;thode fonctionne exactement comme <code>moveTo()</code>, seulement avec des donn&eacute;es relatives au lieu de donn&eacute;es absolues.</p>

<p>Afin que le calque ne bouge pas qu'une seule fois, mais continue son mouvement, les deux fonctions <code>mouv_horiz()</code> et <code>mouv_vert()</code> se rappellent elles-m&ecirc;mes apr&egrave;s ex&eacute;cution. L'effet de boucle qui en r&eacute;sulte ne sera interrompu que lorsque la valeur finale d&eacute;sir&eacute;e est atteinte.<br>
L'appel de la fonction par elle-m&ecirc;me est incorpor&eacute; dans la m&eacute;thode JavaScript <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../javascript/objets/window.htm#set_timeout"><b>window.setTimeout()</b></a>. Ainsi le retardement transmis avec le param&egrave;tre <code>Pause</code> peut &ecirc;tre pris en consid&eacute;ration. L'appel de la fonction par elle-m&ecirc;me peut para&icirc;tre un peu compliqu&eacute;. Cela est d&ucirc; au fait que la fonction doit s'appeler elle-m&ecirc;me avec les param&egrave;tres qu'elle attend. Malheureusement, il n'est pas possible de noter pour cela un appel de fonction normal et de retransmettre les param&egrave;tres re&ccedil;us. &Agrave; la place est construite une cha&icirc;ne de caract&egrave;res qui fournit &agrave; la fonction des valeurs effectives quand elle est rappel&eacute;e.</p>

<p>Les autres instructions dans les fonctions servent au contr&ocirc;le de la trajectoire et, avant tout, &agrave; ce que malgr&eacute; les diff&eacute;rents param&egrave;tres d'appel, la position finale d&eacute;sir&eacute;e soit effectivement atteinte. Ainsi <code>Restpixel</code> est une variable utilitaire, qui recherche combien il reste de pixels entre la position actuelle du calque et la position finale d&eacute;sir&eacute;e. Une d&eacute;termination de la direction de d&eacute;placement est elle aussi importante. Si la position finale d&eacute;sir&eacute;e du mouvement est plus petite que la position du calque au d&eacute;but du d&eacute;placement, alors la valeur d'un pas qui est transmise avec le param&egrave;tre <code>Pixel</code> doit &ecirc;tre interpr&eacute;t&eacute;e comme nombre n&eacute;gatif. Car il n'y a qu'ainsi que le mouvement peut se faire &quot;en arri&egrave;re&quot; donc vers la gauche ou vers le haut. Avec l'expression <code>Pixel=0-Pixel</code>, la valeur d'un pas est &quot;transcrite&quot; au besoin en nombre n&eacute;gatif.</p>

<h3 class="inf">Attention:</h3>

<p>Des trajectoires plus compliqu&eacute;es n&eacute;cessitent une programmation d'autant plus compliqu&eacute;e. Pour les mouvements en diagonale, &ccedil;a n'est simple que si le nombre de pixels mesurant chaque pas est toujours proportionnel horizontalement et verticalement. Mais d&eacute;s que vous voulez r&eacute;soudre des t&acirc;ches &quot;tordues&quot;, par exemple celle d'aller le plus droit possible de la position haut 10 gauche 10 &agrave; la position haut 86 gauche 623, vous pouvez vous plonger dans les profondeurs de l'arithm&eacute;tique. Et si vous voulez m&ecirc;me des mouvements circulaires ou elliptiques, vous devez conna&icirc;tre les formules g&eacute;om&eacute;triques correspondantes et utiliser pour cela les m&eacute;thodes pr&eacute;vues de l'objet <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../javascript/objets/math.htm"><b>Math</b></a> en JavaScript.</p>









<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr></table>
<h2 class="Sh2"><img src="../../src/js12.gif" width="30" height="30" border="0" alt="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" border="0" alt="Netscape 4.0">&nbsp;<a class="an" name="agrandir">Agrandir/r&eacute;duire de fa&ccedil;on dynamique les passages calques</a></h2>

<p>Par la modification dynamique du passage affich&eacute; d'un calque, on peut obtenir d'innombrables effets int&eacute;ressants, par exemple l'ouverture et la fermeture dynamiques de parties d'une page WWW. L'exemple suivant met en oeuvre trois "blocs" dont ne sont visibles dans un premier temps que les barres de titre. Chaque barre de titre contient un lien. En cliquant sur ce lien, se d&eacute;roule sous la barre de titre un passage avec un contenu. Au prochain clic sur le lien, il s'enroule &agrave; nouveau.</p>

<h3 class="xmp">Exemple:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/htmlcssjs.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a></p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;style type=&quot;text/css&quot;&gt;
&lt;!--
layer.Text { padding:5px; font-size:14pt; font-family:Arial,Helvetica,Sans-Serif; color:#FFFFFF }
layer.entete { padding:5px; font-size:10pt; font-family:Arial,Helvetica,Sans-Serif; font-weight:bold; }
a:link, a:visited, a:active { color:#FFFFE0; }
a.normal:link { color:#AA5522; text-decoration:underline; }
a.normal:visited { color:#772200; text-decoration:underline; }
a.normal:active { color:#000000; text-decoration:underline; }
--&gt;
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var Status = new Array(&quot;ferme&quot;,&quot;ferme&quot;,&quot;ferme&quot;);
function ouvre_ferme(num_calque) {
 var i;
 if(Status[num_calque] == &quot;ferme&quot;) {
   for(i=2;i&lt;250;++i)
     document.layers[num_calque].clip.bottom = i;
   Status[num_calque] = &quot;ouvert&quot;;
  }
 else {
   for(i=250;i&gt;2;--i)
     document.layers[num_calque].clip.bottom = i;
   Status[num_calque] = &quot;ferme&quot;;
  }
}
//--&gt;
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;layer class=&quot;Text&quot; left=&quot;10&quot; top=&quot;70&quot; width=&quot;198&quot; height=&quot;250&quot; bgcolor=&quot;#000099&quot; clip=&quot;0,0,198,2&quot;&gt;
HTML est le langage pour structurer des projets hypertexte. une bï¿½nï¿½diction pour toutes les pages Web. Sans doute le format de fichier le plus populaire de l'histoire de l'informatique.
&lt;/layer&gt;
&lt;layer class=&quot;Text&quot; left=&quot;210&quot; top=&quot;70&quot; width=&quot;198&quot; height=&quot;250&quot; bgcolor=&quot;#994000&quot; clip=&quot;0,0,198,2&quot;&gt;
CSS est le langage pour le formatage de pages Web. s'enclenche sans heurt dans HTML et obtient que les structures deviennent couleurs et formes.
&lt;/layer&gt;
&lt;layer class=&quot;Text&quot; left=&quot;410&quot; top=&quot;70&quot; width=&quot;198&quot; height=&quot;250&quot; bgcolor=&quot;#008000&quot; clip=&quot;0,0,198,2&quot;&gt;
JavaScript est le lanage pour les pages Web dynamiques.s'enclenche sans heurt en HTML et aussi toujoursS plus dans les CSS. ce qui est d'ailleurs le plus difficile ï¿½ comprendre.
&lt;/layer&gt;
&lt;layer class=&quot;entete&quot; left=&quot;10&quot; top=&quot;45&quot; width=&quot;198&quot; height=&quot;25&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;a href=&quot;javascript:ouvre_ferme(0)&quot;&gt;HTML&lt;/a&gt;
&lt;/layer&gt;
&lt;layer class=&quot;entete&quot; left=&quot;210&quot; top=&quot;45&quot; width=&quot;198&quot; height=&quot;25&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;a href=&quot;javascript:ouvre_ferme(1)&quot;&gt;CSS&lt;/a&gt;
&lt;/layer&gt;
&lt;layer class=&quot;entete&quot; left=&quot;410&quot; top=&quot;45&quot; width=&quot;198&quot; height=&quot;25&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;a href=&quot;javascript:ouvre_ferme(2)&quot;&gt;JavaScript&lt;/a&gt;
&lt;/layer&gt;
&lt;/body&gt;&lt;/html&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple, six calques en tout sont d&eacute;finis. Les trois premiers sont ceux qui peuvent s'ouvrir et se refermer. Dans un premier temps, ces calques sont ferm&eacute;s. Ce qui est obtenu gr&acirc;ce &agrave; l'attribut <code>clip=</code>. Par cette mention, le passage affich&eacute; d'un calque se laisse limiter &agrave; souhait. Les calques qui s'ouvrent et se referment dans l'exemple ci-dessus ont, gr&acirc;ce aux mentions <code>width=&quot;198&quot; height=&quot;250&quot;</code>, une largeur de 198 et une hauteur de 250 pixels. Par la mention <code>clip=&quot;0,0,198,2&quot;</code> on obtient ceci: malgr&eacute; la largeur et la hauteur d&eacute;finies, le passage n'est visible que depuis 0 &agrave; gauche et 0 en haut, jusqu'&agrave; 198 &agrave; gauche et 2 en haut. Ce n'est qu'une bande toute mince qui n'est l&agrave; que pour des raisons optiques. Avec <code>0,0,198,0</code>, on n'apercevrait rien des calques.</p>

<p>Les trois calques du bas sont positionn&eacute;s avec les mentions concernant <code>top=</code>, <code>left=</code>, <code>width=</code> et <code>height=</code> de telle fa&ccedil;on qu'ils se trouvent exactement au dessus des calques pouvant &ecirc;tre ouverts et referm&eacute;s. Chaque calque d'ent&ecirc;te contient un lien qui lorsqu'on le clique ouvre ou referme le calque plac&eacute; dessous. Pour cela, une fonction JavaScript est appel&eacute;e &agrave; chaque clic sur l'un des liens: la fonction <code>ouvre_ferme()</code>, d&eacute;finie dans un passage JavaScript de l'ent&ecirc;te de fichier.</p>

<p>Dans le passage JavaScript, avant la fonction <code>ouvre_ferme()</code>, est d&eacute;j&agrave; d&eacute;fini un tableau comprenant trois valeurs: le tableau <code>Status</code>. Ses trois valeurs sont initialis&eacute;es avec la valeur de d&eacute;part <code>&quot;ferme&quot;</code>. &Eacute;tant donn&eacute; que ce tableau est d&eacute;fini en dehors de toute fonction, ses donn&eacute;es sont toujours disponibles.</p>

<p>Dans la fonction <code>ouvre_ferme()</code>, il est v&eacute;rifi&eacute; si un calque est actuellement ouvert ou ferm&eacute;. Pour cela, la fonction re&ccedil;oit &agrave; son appel le param&egrave;tre <code>num_calque</code>. C'est le num&eacute;ro d'index du calque qui doit &ecirc;tre ouvert ou ferm&eacute;. &Eacute;tant donn&eacute; que dans l'exemple, les trois premiers calques seront concern&eacute;s, seuls les num&eacute;ros d'index 0, 1 et 2 sont valables. &Agrave; l'appel de la fonction dans les trois calques du bas, ce sont exactement ces trois valeurs qui sont transmises. Avec la requ&ecirc;te <code>if(Status[num_calque] == &quot;ferme&quot;)</code> la fonction <code>ouvre_ferme()</code>, compare ce que contient le tableau <code>Status</code> comme valeur pour le num&eacute;ro d'index transmis. Si c'est la valeur <code>&quot;ferme&quot;</code> qui s'y trouve, le calque est ouvert. Quand il est ouvert, la valeur dans le tableau est fix&eacute;e &agrave; <code>&quot;ouvert&quot;</code>. Ainsi la fonction arrive-t-elle lors de la requ&ecirc;te suivante pour le m&ecirc;me calque &agrave; l'embranchement else, o&ugrave; elle ex&eacute;cute exactement le travail inverse.</p>

<p>L'ouverture et la fermeture proprement dites sont ex&eacute;cut&eacute;es dans une boucle for. L&agrave; est compt&eacute; de 2 &agrave; 250 pour l'ouverture et de 250 &agrave; 2 pour la fermeture. Selon la valeur actuelle de la boucle, la partie de dessous du passage clip du calque est modifi&eacute;e de fa&ccedil;on dynamique avec <code>document.layers[num_calque].clip.bottom=</code>. Les valeurs limites de 2 et 250 sont li&eacute;es aux calques d&eacute;finis: 2 est la valeur qu'on trouve dans les mentions <code>clip=&quot;0,0,198,2&quot;</code>, et 250 est la hauteur des calques d&eacute;finis (<code>height=&quot;250&quot;</code>). Lors de l'ouverture, le passage Clip dans le script est donc modifi&eacute; de fa&ccedil;on dynamique en 0,0,198,250. Ce qui veut dire : Le calque est compl&egrave;tement visible. Par contre, lors de la fermeture, l'&eacute;tat de d&eacute;part du clip de 0,0,198,2 est r&eacute;tabli.</p>







<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr></table>
<h2 class="Sh2"><img src="../../src/js12.gif" width="30" height="30" border="0" alt="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" border="0" alt="Netscape 4.0">&nbsp;<a class="an" name="echanger">&Eacute;changer de fa&ccedil;on dynamique les contenus de calques</a></h2>

<p>L'un des grands avantages de l'apport de Microsoft pour HTML dynamique, &agrave; savoir la facult&eacute; d'&eacute;changer &agrave; souhait le contenu d'&eacute;l&eacute;ments HTML, se laisse, &agrave; l'aide des calques de Netscape, tout au moins &quot;reproduire&quot;. La raison en est que Netscape traite le calque comme un nouveau petit document distinct dans le document parent. Ainsi, tous les objets JavaScript subordonn&eacute;s &agrave; l'objet document peuvent lui &ecirc;tre aussi appliqu&eacute;s. L'exemple suivant d&eacute;montre comment cela fonctionne dans le d&eacute;tail pour les calques et quelles possibilit&eacute;s s'ouvrent ainsi.</p>

<h3 class="xmp">Exemple:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/interaction.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a></p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
function ecrire_donnees() {
 var texte = document.Input.document.saisie.champ.value;
 var longueur = document.Input.document.saisie.champ.value.length;
 document.Output.document.clear();
 document.Output.document.write(&quot;&lt;p&gt;Vous avez entrï¿½ le texte suivant:&lt;br&gt;&quot;);
 document.Output.document.write(&quot;&lt;b&gt;&quot; + texte +&quot;&lt;\/b&gt;&lt;\/p&gt;&quot;);
 document.Output.document.write(&quot;&lt;p&gt;La longueur de ce texte est de &quot;);
 document.Output.document.write(&quot;&lt;b&gt;&quot; + longueur + &quot; caractï¿½res&lt;\/b&gt;&lt;\/p&gt;&quot;);
 document.Output.document.close();
}
//--&gt;
&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;
&lt;layer id=&quot;Input&quot; bgcolor=&quot;#E4EEFF&quot; style=&quot;padding:5mm&quot; left=&quot;10&quot; top=&quot;100&quot; width=&quot;280&quot; height=&quot;280&quot;&gt;
&lt;p&gt;Entrez du texte dans le champ puis cliquez sur &quot;Interaction&quot;&lt;/p&gt;
&lt;form name=&quot;saisie&quot; action=&quot;&quot;&gt;
&lt;textarea name=&quot;champ&quot; cols=&quot;25&quot; rows=&quot;6&quot; wrap=&quot;virtual&quot;&gt;&lt;/textarea&gt;&lt;br&gt;
&lt;input type=&quot;button&quot; value=&quot;Interaction&quot; width=&quot;220&quot; onClick=&quot;ecrire_donnees()&quot;&gt;
&lt;/form&gt;
&lt;/layer&gt;
&lt;layer id=&quot;Output&quot; style=&quot;padding:5mm&quot; left=&quot;310&quot;
top=&quot;100&quot; width=&quot;280&quot; height=&quot;280&quot;&gt;
&lt;/layer&gt;
&lt;/body&gt;&lt;/html&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple sont d&eacute;finis deux calques: l'un avec le nom (id) <code>Input</code> (entr&eacute;e) et l'autre avec le nom <code>Output</code> (sortie). Les deux calques sont positionn&eacute;s de telle fa&ccedil;on que le calque pour la sortie apparaisse &agrave; c&ocirc;t&eacute; du calque pour l'entr&eacute;e. Au d&eacute;but cependant, le calque pour la sortie ne re&ccedil;oit aucun contenu. En revanche, dans le calque pour l'entr&eacute;e est d&eacute;fini un formulaire. Le formulaire comprend un champ de plusieurs lignes et un bouton qui, lorsqu'il est cliqu&eacute; par l'utilisateur, appelle une fonction JavaScript <code>ecrire_donnees()</code>, laquelle est d&eacute;finie dans un passage JavaScript dans l'ent&ecirc;te du fichier.</p>

<p>La fonction recherche d'abord le texte entr&eacute; et sa longueur. Ensuite elle &eacute;crit ces donn&eacute;es pour le contr&ocirc;le dans le calque de sortie nomm&eacute; <code>Output</code>. L'important est qu'avant l'&eacute;criture dynamique du contenu, la m&eacute;thode <code>clear()</code> soit appel&eacute;e afin d'effacer le contenu actuel du calque, et qu'apr&egrave;s l'&eacute;criture, la m&eacute;thode <code>close()</code> fermant le processus soit appel&eacute;e, de fa&ccedil;on &agrave; ce qu'&agrave; la prochaine fois un nouvel acc&egrave;s en &eacute;criture soit possible. Entre temps, les donn&eacute;es proprement dites sont &eacute;crites, &agrave; savoir avec la m&eacute;thode <code>write()</code>.</p>

<p>Ces trois m&eacute;thodes sont toutes des m&eacute;thodes connues depuis longtemps de l'objet document de JavaScript. Ce qui est particulier dans le cas du calque, est que l'objet document est utilis&eacute; en double dans les instructions. Un exemple en est l'instruction: <code>document.Output.document.clear();</code>. Au d&eacute;but de la fonction pour rechercher le contenu du champ du formulaire, on retrouve &eacute;galement cette double utilisation de <code>document</code>. Ce genre de constructions s'explique ainsi: par la mention <code>document</code> not&eacute;e devant, les objets layer peuvent &ecirc;tre adress&eacute;s &eacute;tant donn&eacute; qu'ils sont subordonn&eacute;s &agrave; l'objet document. Dans l'exemple, <code>Output</code> est le nom d'un calque. Par son nom, le calque est adress&eacute;. Mais un calque est &eacute;galement lui-m&ecirc;me un &quot;document&quot;. C'est pourquoi vous pouvez noter derri&egrave;re le nom encore une fois la mention <code>document</code>, suivie des propri&eacute;t&eacute;s et m&eacute;thodes de l'objet document. Les instructions se rapportent alors aux &eacute;l&eacute;ments contenus dans le calque correspondant. Les &eacute;l&eacute;ments contenus dans les calques doivent &ecirc;tre adress&eacute;s de cette mani&egrave;re. Dans l'exemple ci-dessus, vous n'acc&eacute;dez par exemple au contenu du champ du formulaire qu'avec <code>document.Input.document.saisie.champ.value</code> (<code>document.saisie.champ.value</code> provoquerait par contre un message d'erreur).</p>

<h3 class="inf">Attention:</h3>

<p>Avec ceci, il n'y a pour ainsi dire pas de limites &agrave; l'imagination. Tout ce que vous pouvez calculer et rechercher en JavaScript gr&acirc;ce &agrave; une interaction avec l'utilisateur &agrave; l'aide d'un formulaire peut &ecirc;tre sorti de cette mani&egrave;re de fa&ccedil;on dynamique. Avec des m&eacute;thodes comme <code>window.setTimeout()</code> vous pouvez &eacute;galement &eacute;crire &agrave; retardement des contenus dans les calques.</p>










<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr></table>
<h2 class="Sh2"><img src="../../src/js12.gif" width="30" height="30" border="0" alt="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" border="0" alt="Netscape 4.0">&nbsp;<a class="an" name="simuler">Simuler un calque sans &eacute;l&eacute;ment <code>layer</code></a></h2>

<p>Sous la pression de Microsoft et au vu du fait que le consortium W3 ne se pr&eacute;pare pas &agrave; prendre le rep&egrave;re <code>layer</code> dans le standard HTML, et de ce fait, la base pour HTML dynamique d'apr&egrave;s l'apport Netscape, ce dernier a &eacute;largi la facult&eacute; de positionnement dynamique aux deux rep&egrave;res HTML &quot;abstraits&quot; <code>&lt;div&gt;</code>...<code>&lt;/div&gt;</code> et <code>&lt;span&gt;</code>...<code>&lt;/span&gt;</code>. Si dans de tels rep&egrave;res HTML vous notez des mentions de feuilles de style concernant le positionnement de l'&eacute;l&eacute;ment, vous pouvez acc&eacute;der &agrave; ces mentions &agrave; l'aide de JavaScript. Netscape interpr&egrave;te alors les mentions exactement comme pour des calques.</p>

<h3 class="xmp">Exemple:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/penseur.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a></p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
function montrer() {
 document.affiche_image.visibility = &quot;visible&quot;;
 document.montrer_lien.visibility = &quot;hidden&quot;;
 document.cacher_lien.visibility = &quot;visible&quot;;
}
function cacher() {
 document.affiche_image.visibility = &quot;hidden&quot;;
 document.cacher_lien.visibility = &quot;hidden&quot;;
 document.montrer_lien.visibility = &quot;visible&quot;;
}
//--&gt;
&lt;/script&gt;
&lt;style type=&quot;text/css&quot;&gt;
&lt;!--
#montrer_lien {
position:absolute; left:100; top:140; width:400; height:30; visibility:visible; }
#cacher_lien {
position:absolute; left:100; top:140; width:400; height:30; visibility:hidden; }
#affiche_image {
position:absolute; left:100; top:170; width:400; height:230; visibility:hidden; }
--&gt;
&lt;/style&gt;
&lt;/head&gt;&lt;body&gt;
&lt;div id=&quot;montrer_lien&quot;&gt;
&lt;a href=&quot;javascript:montrer()&quot;&gt;&lt;b&gt;Afficher l'image&lt;/b&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div id=&quot;cacher_lien&quot;&gt;
&lt;a href=&quot;javascript:cacher()&quot;&gt;&lt;b&gt;Cacher l'image&lt;/b&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div id=&quot;affiche_image&quot;&gt;
&lt;img src=&quot;penseur.jpg&quot; width=&quot;91&quot; height=&quot;177&quot; border=&quot;0&quot; alt=&quot;penseur&quot;&gt;
&lt;/div&gt;
&lt;/body&gt;&lt;/html&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>L'exemple fait en sorte qu'une image invisible au d&eacute;part s'affiche lorsqu'un lien est cliqu&eacute;. En m&ecirc;me temps appara&icirc;t un nouveau lien qui permet de faire dispara&icirc;tre l'image. De cette mani&egrave;re, on peut toujours faire r&eacute;appara&icirc;tre ou re-dispara&icirc;tre l'image.</p>

<p>Dans le corps du fichier sont d&eacute;finis &agrave; cet effet trois passages avec <code>&lt;div&gt;</code>...<code>&lt;/div&gt;</code>. Les trois rep&egrave;res d'ouverture <code>div</code> contiennent des mentions de feuilles de style relatives au <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../css/proprietes/positionnement.htm"><b>positionnement et affichage d'&eacute;l&eacute;ments</b></a> dans le passage <code>style</code> de l'ent&ecirc;te de fichier. Sans de telles mentions, un acc&egrave;s dynamique &agrave; l'&eacute;l&eacute;ment correspondant n'est pas possible. La d&eacute;finition de mentions de feuilles de style globales vient du fait que certaines versions de Netscape 4 connaissent des probl&egrave;mes avec ces mentions dans le rep&egrave;re d'ouverture <code>&lt;div&gt;</code>.</p>

<p>Les deux premiers passages <code>&lt;div&gt;</code> de l'exemple ont les m&ecirc;mes mentions concernant le positionnement. Ils ne se diff&eacute;rencient uniquement que par l'affectation de valeur pour la mention <code>visibility=</code>. Ainsi les deux passages seront affich&eacute;s au m&ecirc;me endroit, l'un des passages toutefois restant &eacute;teint dans un premier temps tandis que l'autre est affich&eacute;.<br>
Le troisi&egrave;me passage <code>&lt;div&gt;</code> est l'endroit r&eacute;serv&eacute; pour l'image &agrave; afficher. Lui aussi est dans un premier temps non-visible.</p>

<p>Chacun des deux premiers passages contient un lien. En cliquant sur chacun de ces liens est appel&eacute;e une fonction JavaScript, d&eacute;finie dans un passage JavaScript de l'ent&ecirc;te du fichier. Le passage affich&eacute; en premier contient un lien qui, lorsqu'on le clique, appelle la fonction <code>montrer()</code>.</p>

<p>La fonction <code>montrer()</code> ne fait rien d'autre que modifier les crit&egrave;res d'affichage des trois passages <code>&lt;div&gt;</code>. Le premier passage, dont le lien a permis d'appeler la fonction, est alors fix&eacute; sur invisible <code>document.montrer_lien.visibility=&quot;hidden&quot;</code>. Le deuxi&egrave;me passage avec l'autre lien est par contre fix&eacute; sur visible. M&ecirc;me le passage avec l'image devient visible.<br>
Maintenant sont affich&eacute;s le deuxi&egrave;me lien (&quot;cacher l'image&quot; et l'image elle-m&ecirc;me. En cliquant sur le lien est appel&eacute;e l'autre fonction JavaScript <code>cacher()</code>. Cette fonction travaille exactement comme la fonction <code>montrer()</code>, mais &agrave; l'envers.</p>

<p>L'acc&egrave;s aux passages <code>&lt;div&gt;</code> est rendu possible par l'attribution d'un nom avec <code>&lt;div&gt;</code> dans la d&eacute;finition du passage <code>&lt;div&gt;</code>. Par <code>document.nomdupassage</code>, un acc&egrave;s aux propri&eacute;t&eacute;s telles que <code>visibility</code>, <code>top</code>, <code>left</code>, <code>width</code>, <code>height</code> ou <code>clip</code> est alors possible. Ainsi, pratiquement toutes les missions peuvent &ecirc;tre r&eacute;solues sans mettre en oeuvre le rep&egrave;re <code>&lt;layer&gt;</code>.</p>

<h3 class="inf">Attention:</h3>

<p>Un &eacute;l&eacute;ment <code>layer</code> ne peut &ecirc;tre simul&eacute; que si le passage <code>div</code> est positionn&eacute; de fa&ccedil;on absolue.</p>

<p>Vous pouvez  - comme dans l'exemple utiliser &agrave; la place des propri&eacute;t&eacute;s <code>visibility</code> <code>hide</code> et <code>show</code>, les propri&eacute;t&eacute;s <code>hidden</code> et <code>visible</code>, &eacute;tant donn&eacute; que Netscape utilise &eacute;galement ces mentions correctement.</p>








<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr></table>
<h2 class="Sh2"><img src="../../src/js12.gif" width="30" height="30" border="0" alt="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" border="0" alt="Netscape 4.0">&nbsp;<a class="an" name="event_objekt">L'objet Event</a></h2>

<p>L'objet Event de JavaScript permet de r&eacute;agir &agrave; des &eacute;v&eacute;nements utilisateur. Il repr&eacute;sente une extension des Event-Handler classiques. L'exemple suivant d&eacute;montre les possibilit&eacute;s de l'objet Event.</p>

<h3 class="xmp">Exemple:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/deplace.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a></p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;style type=&quot;text/css&quot;&gt;
&lt;!--
layer { font-size:10pt; font-family:Arial }
layer.entete { color:#FFFFFF; padding:1mm; cursor:hand; }
layer.Text { color:#000000; padding-top:30px; padding-left:1mm; padding-right:1mm }
--&gt;
&lt;/style&gt;
&lt;/head&gt;&lt;body&gt;

&lt;layer id=&quot;vert&quot; class=&quot;Text&quot; bgcolor=&quot;#99FF99&quot; top=&quot;170&quot; left=&quot;10&quot; width=&quot;200&quot; height=&quot;180&quot;&gt;
&lt;layer id=&quot;entete_vert&quot; class=&quot;entete&quot; bgcolor=&quot;#000000&quot; top=&quot;0&quot; left=&quot;0&quot; width=&quot;200&quot; height=&quot;25&quot;&gt;
Barre de titre du calque vert
&lt;/layer&gt;
Cliquez donc avec la souris sur la barre de titre de ce calque,
maintenez la touche appuyï¿½e et dï¿½placez la souris ï¿½ un autre endroit.
&lt;/layer&gt;
&lt;layer id=&quot;jaune&quot; class=&quot;Text&quot; bgcolor=&quot;#FFFF66&quot; top=&quot;10&quot; left=&quot;310&quot; width=&quot;300&quot; height=&quot;120&quot;&gt;
&lt;layer id=&quot;entete_jaune&quot; class=&quot;entete&quot; bgcolor=&quot;#000000&quot; top=&quot;0&quot; left=&quot;0&quot; width=&quot;300&quot; height=&quot;25&quot;&gt;
Barre de titre du calque jaune
&lt;/layer&gt;
Cliquez donc avec la souris sur la barre de titre de ce calque,
maintenez la touche appuyï¿½e et dï¿½placez la souris ï¿½ un autre endroit.
&lt;/layer&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
vert = document.layers['vert'];
titre_vert = document.layers['vert'].document.layers['entete_vert'].document;

jaune = document.layers['jaune'];
titre_jaune = document.layers['jaune'].document.layers['entete_jaune'].document;

titre_vert.captureEvents(Event.MOUSEUP|Event.MOUSEDOWN|Event.MOUSEDRAG);
titre_vert.onmousedown=depart_vert;
titre_vert.onmouseup=fin_vert;
document.layers['vert'].document.layers['entete_vert'].onload=initial_vert;

titre_jaune.captureEvents(Event.MOUSEUP|Event.MOUSEDOWN|Event.MOUSEDRAG);
titre_jaune.onmousedown=depart_jaune;
titre_jaune.onmouseup=fin_jaune;
document.layers['jaune'].document.layers['entete_jaune'].onload=GelbReset;

function initial_vert()
 { titre_vert.captureEvents(Event.MOUSEUP|Event.MOUSEDOWN|Event.MOUSEDRAG); }
function GelbReset()
 { titre_jaune.captureEvents(Event.MOUSEUP|Event.MOUSEDOWN|Event.MOUSEDRAG); }

function depart_vert()
 { titre_vert.captureEvents(Event.MOUSEMOVE); titre_vert.onmousemove=tire_vert; }
function depart_jaune()
 { titre_jaune.captureEvents(Event.MOUSEMOVE); titre_jaune.onmousemove=ZiehGelb; }

function tire_vert(evenement)
 { vert.left = evenement.pageX; vert.top = evenement.pageY; }
function tire_jaune(evenement)
 { jaune.left = evenement.pageX; jaune.top = evenement.pageY; }

function fin_vert()
 { titre_vert.onmousemove=0; titre_vert.releaseEvents(Event.MOUSEMOVE); }
function fin_jaune()
 { titre_jaune.onmousemove=0; titre_jaune.releaseEvents(Event.MOUSEMOVE); }
//--&gt;
&lt;/script&gt;
&lt;/body&gt;&lt;/html&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple ont &eacute;t&eacute; d&eacute;finis en tout quatre calques dont deux &quot;externes&quot; (avec <code>id=&quot;vert&quot;</code> et <code>id=&quot;jaune&quot;</code>), et pour chacun d'entre eux un calque &quot;interne&quot; avec (<code>id=&quot;entete_vert&quot;</code> et <code>id=&quot;entete_jaune&quot;</code>) . Les calques internes sont structur&eacute;s de telle fa&ccedil;on qu'ils semblent &ecirc;tre les barres de titre des deux calques externes - d'o&ugrave; le nom id.</p>

<p>Comme vous pouvez le voir, aucun appel JavaScript ne figure ni dans la d&eacute;finition du calque ni dans un des calques. Pourtant, les deux barres de titre sont &quot;sensitives&quot;: si l'utilisateur y clique avec la souris et bouge la souris tout en maintenant la touche appuy&eacute;e, tout le calque &quot;externe&quot; qui en fait partie bouge avec. Cela s'explique par le concept de l'objet Event: celui-ci n'a pas besoin de gestionnaire d'&eacute;v&eacute;nement dans HTML pour lancer des actions JavaScript.</p>

<p>Le passage JavaScript de l'exemple ci-dessus contient par contre quelques choses &quot;inhabituelles&quot;. Il est d&eacute;fini sous les calques parce que d&eacute;s sa lecture son code est ex&eacute;cut&eacute; et qu'il se r&eacute;f&egrave;re aux calques d&eacute;finis. Les calques doivent donc &agrave; ce moment pr&eacute;cis avoir d&eacute;j&agrave; &eacute;t&eacute; lus - faute de quoi on obtient un message d'erreur.</p>

<p>Les quatre premi&egrave;res lignes du code JavaScript de l'exemple sauvegardent simplement d'assez longues cha&icirc;nes de propri&eacute;t&eacute;s objet dans des variables, &eacute;tant donn&eacute; que celles ci devront &ecirc;tre not&eacute;es souvent dans la suite du processus. Suivent ensuite quatre instructions pour chacun des calques vert et jaune. La m&eacute;thode <code>captureEvents()</code> fait en sorte que les actions de l'utilisateur sont surveill&eacute;es et signal&eacute;es si elles surviennent. La m&eacute;thode <code>captureEvents()</code> attend comme param&egrave;tre une valeur. Notez pour cela d'apr&egrave;s le sch&eacute;ma <code>Event.LEQUEL</code> les &eacute;v&eacute;nements qui doivent &ecirc;tre surveill&eacute;s. Les &eacute;v&eacute;nements souhait&eacute;s sont &agrave; s&eacute;parer par le &quot;ou&quot; logique exclusif (simple trait vertical). Vous pouvez apprendre quels autres &eacute;v&eacute;nements existent en sus de ceux de l'exemple ci-dessus dans la  <img src="../../src/chap.gif" width="15" height="13" border="0" alt="Chapitre: vue d'ensemble">&nbsp;<a href="../../javascript/objets/index.htm"><b>r&eacute;f&eacute;rence objet JavaScript</b></a> &agrave; l'objet <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../javascript/objets/event.htm"><b>event</b></a>.</p>

<p>Quand l'un des &eacute;v&eacute;nements surveill&eacute;s survient, des fonctions sont appel&eacute;es. Observez &agrave; ce titre la syntaxe un peu curieuse: avec une inscription telle que <code>titre_vert.onmousedown=depart_vert</code> la fonction <code>depart_vert()</code> &eacute;crite soi-m&ecirc;me est appel&eacute;e - elle est d&eacute;finie plus bas dans le script. Pour l'appel de la fonction, vous ne devez pas, dans ce cas l&agrave;, noter de parenth&egrave;ses apr&egrave;s le nom de la fonction!</p>

<p>Suivez donc maintenant le cas dans l'exemple, o&ugrave; l'utilisateur clique sur la barre de titre du calque vert: l'&eacute;v&eacute;nement <code>MOUSEDOWN</code> pour <code>titre_vert</code> est alors signal&eacute;. Pour ce cas (<code>onmousedown</code>) la fonction <code>depart_vert</code> est appel&eacute;e. Dans cette fonction est surveill&eacute; &agrave; son tour si l'utilisateur bouge la souris en tenant la touche appuy&eacute;e. Si oui, est appel&eacute;e selon le m&ecirc;me sch&eacute;ma la fonction <code>tire_vert</code>. Bien que la fonction ne re&ccedil;oive aucun param&egrave;tre, elle en attend un - m&ecirc;me si c'est contre toutes les r&egrave;gles habituelles. Le param&egrave;tre attendu n'est cependant pas une &quot;valeur&quot; comme il est usuel, mais simplement un nom pour l'&eacute;v&eacute;nement actuel. Dans l'exemple le nom <code>evenement</code> a &eacute;t&eacute; choisi. Sous le nom attribu&eacute;, les propri&eacute;t&eacute;s de l'objet Event peuvent &ecirc;tre adress&eacute;es. &Eacute;tant donn&eacute; que c'est le cas dans la fonction <code>tire_vert</code>, un tel nom est indispensable. La fonction <code>tire_vert</code> est active aussi longtemps que l'utilisateur tient la touche de la souris appuy&eacute;e. Pendant ce temps, les propri&eacute;t&eacute;s <code>PageX</code> (position actuelle de la souris &agrave; partir de la gauche) et <code>PageY</code> (position actuelle de la souris &agrave; partir du haut) de <code>evenement</code> sont actualis&eacute;es &quot;aussi souvent que possible&quot;. Ces valeurs sont affect&eacute;es de fa&ccedil;on dynamique au calque concern&eacute; comme nouvelles valeurs pour le coin sup&eacute;rieur gauche. Il en r&eacute;sulte l'effet de mouvement.</p>

<p>Si l'utilisateur rel&acirc;che la touche de souris, la fonction <code>tire_vert</code> est aussit&ocirc;t abandonn&eacute;e. &Eacute;tant donn&eacute; que la surveillance d'&eacute;v&eacute;nements est encore active, c'est maintenant l'&eacute;v&eacute;nement <code>MOUSEUP</code> qui est signal&eacute;. Pour ce cas, c'est la fonction <code>fin_vert</code> qui est appel&eacute;e. Cette fonction contient deux instructions pour &quot;ranger&quot;.</p>

<p>Si vous n'entrepreniez rien d'autre, le calque ne pourrait plus &ecirc;tre boug&eacute; apr&egrave;s ce premier mouvement. Pour qu'il puisse toujours continuer &agrave; &ecirc;tre d&eacute;plac&eacute;, un &eacute;v&eacute;nement LOAD intervient automatiquement. Celui-ci est captur&eacute; avec <code>onload</code> et appelle ici la fonction <code>initial_vert</code>. Cette fonction d&eacute;marre une nouvelle surveillance des &eacute;v&eacute;nements.</p>

<p>La fa&ccedil;on de proc&eacute;der pour le calque jaune est analogue &agrave; celle du calque vert.</p>









<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr></table>
<h2 class="Sh2"><img src="../../src/js12.gif" width="30" height="30" border="0" alt="JavaScript 1.2"><img src="../../src/netsc4.gif" width="30" height="30" border="0" alt="Netscape 4.0">&nbsp;<a class="an" name="inline_scripts">Scripts Inline pour les calques</a></h2>

<p>Netscape propose une syntaxe JavaScript simplifi&eacute;e pour modifier &agrave; l'int&eacute;rieur d'un calque ses propri&eacute;t&eacute;s de fa&ccedil;on dynamique.</p>

<h3 class="xmp">Exemple:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/six.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a></p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;
&lt;style type=&quot;text/css&quot;&gt;
&lt;!--
layer { padding:1mm; }
p.lien { font-size:10pt; font-weight:bold; font-family:Arial; color:yellow; }
p.Text { font-size:10pt; font-family:Arial; color:white; }
--&gt;
&lt;/style&gt;
&lt;/head&gt;&lt;body&gt;
&lt;layer class=&quot;entete&quot; bgcolor=#000000 top=&quot;175&quot; left=&quot;50&quot; width=&quot;500&quot; height=&quot;200&quot;
clip=&quot;0,0,500,25&quot; onMouseover=&quot;montrer()&quot; onMouseout=&quot;cacher()&quot;&gt;
&lt;p class=&quot;lien&quot;&gt;Ce que vous avez dï¿½jï¿½ toujours voulu savoir sur  ...&lt;/p&gt;
&lt;p class=&quot;Text&quot;&gt;&lt;span style=&quot;color:red; font-size:48pt&quot;&gt;SECHS&lt;/span&gt;&lt;br&gt;
Il s'agit tout simplement d'un nombre qui dï¿½signe en allemand une demi douzaine trï¿½s exactement.&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
function montrer() { clip.bottom = 200; }
function cacher() { clip.bottom = 25; }
//--&gt;
&lt;/script&gt;
&lt;/layer&gt;
&lt;/body&gt;&lt;/html&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple est d&eacute;fini un calque. Cependant, avec une mention relative &agrave; <code>clip=</code>, le domaine d'affichage du calque est rogn&eacute; dans un premier temps, de sorte que juste le premier paragraphe de texte soit visible. Si l'utilisateur passe avec la souris sur le passage visible du calque, la fonction JavaScript <code>montrer()</code> est appel&eacute;e. Celle-ci modifie le domaine Clip de telle fa&ccedil;on que le calque est affich&eacute; compl&egrave;tement. Si la souris quitte &agrave; nouveau le domaine du calque, la fonction <code>cacher()</code> est appel&eacute;e. Cette fonction r&eacute;tablit le domaine Clip &agrave; sa valeur initiale.</p>

<p>L'important avec cette formule est que le passage JavaScript soit d&eacute;fini dans le calque. Ensuite, vous n'avez pas besoin de vous soucier de l'adressage correct du calque avec des num&eacute;ros d'index ou des noms. Vous pouvez noter simplement des instructions comme <code>clip.bottom=[valeur]</code> (comme dans l'exemple) ou des instructions comme <code>top=</code>, <code>left=</code> ou <code>bgColor=</code>, pour modifier la fa&ccedil;on d'agir ou l'apparence du calque. Pour les propri&eacute;t&eacute;s que vous pouvez modifier, consultez la r&eacute;f&eacute;rence de l'objet <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../javascript/objets/layers.htm"><b>layers</b></a>.</p>









<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a>
</td></tr>
<tr><td bgcolor="#EEEEEE" class="doc" align="right"><a href="liaisondonnees.htm"><img src="../../src/suivant.gif" width="10" height="10" border="0" hspace="10" alt="page suivante"></a></td>
<td bgcolor="#FFFFFF"><img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="liaisondonnees.htm"><b>Liaison de donn&eacute;es (seulement Microsoft)</b></a>
</td></tr>
<tr>
<td bgcolor="#EEEEEE" class="doc" align="right"><a href="microsoft.htm"><img src="../../src/precedent.gif" width="10" height="10" border="0" hspace="10" alt="page pr&eacute;c&eacute;dente"></a></td>
<td bgcolor="#FFFFFF" width="100%"><img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="microsoft.htm"><b>L'ancien mod&egrave;le DHTML de  Microsoft</b></a>
</td>
</tr>
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;</td></tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="bottom"><img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../../index.htm"><b>SELFHTML</b></a>/<a href="../../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="../index.htm"><b>HTML dynamique</b></a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>Les diff&eacute;rents mod&egrave;les DHTML</b></a></td>
</tr>
</table>

<p>&copy; 2001 Stefan M&uuml;nz / &copy; 2003 Traduction <img src="../../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:13405@free.fr">Serge Fran&ccedil;ois, 13405@free.fr</a><br><img src="../../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:selfhtml@selfhtml.com.fr">selfhtml@selfhtml.com.fr</a></p>



</body>
</html>
