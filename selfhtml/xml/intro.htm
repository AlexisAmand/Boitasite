<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>SELFHTML: XML/DTDs / Introduction &agrave; XML</title>
<link rel="stylesheet" type="text/css" href="../src/selfhtml.css">
<meta name="description"    content="Quelle est la signification de XML, et sur quels principes repose-t-il.">
<meta name="keywords"       content="SELFHTML, XML">
<meta name="author"         content="Stefan M&uuml;nz, selfhtml@teamone.de">
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<meta name="DC.Publisher"   content="Serge Fran&ccedil;ois, selfhtml@selfhtml.com.fr">
<meta name="DC.Date"        content="2003-01-27T08:00+00:00">
<meta name="DC.Identifier"  content="http://selfhtml.selfhtml.com.fr/xml/intro.htm">
<meta name="DC.Language"    content="fr">
<meta name="DC.Rights"      content="../editorial/copyright.htm">
<meta name="DC.Date.Create" content="2003-01-27T08:00+00:00">
<meta name="SELF.Version"   content="1">
<meta name="SELF.Pagetype"  content="Information">
<meta name="SELF.Path"      content="SELFHTML == ../index.htm // XML/DTDs == index.htm">
<!-- Matomo -->
<script type="text/javascript">
  var _paq = window._paq = window._paq || [];
  /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="//matomo.boitasite.com/";
    _paq.push(['setTrackerUrl', u+'matomo.php']);
    _paq.push(['setSiteId', '1']);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
<!-- End Matomo Code -->
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#AA5522" vlink="#772200" alink="#000000">

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="top"><img src="../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../index.htm"><b>SELFHTML</b></a>/<a href="../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>XML/DTDs</b></a> </td>
</tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#EEEEEE" class="doc" width="110"><img src="../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></td>
<td bgcolor="#EEEEEE" class="doc" valign="bottom" width="100%"><h2>Introduction &agrave; XML</h2></td>
</tr>
<tr>
<td bgcolor="#EEEEEE" class="doc" valign="top" align="center">
<img src="../src/docx.gif" width="30" height="20" vspace="6" border="0" alt="Page d'information: vue d'ensemble">
</td>
<td bgcolor="#FFFFFF" valign="top" nowrap>
<p>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#liberte_donnees"><b>XML - la libert&eacute; de donn&eacute;es standardis&eacute;e </b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#validation"><b>XML, DTD et validation</b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#formatage"><b>XSL ou CSS - formatage d'&eacute;l&eacute;ments XML</b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#w3c"><b>Le consortium W3 et XML</b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#marche_logiciels"><b>XML et le march&eacute; des logiciels</b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#parser"><b>Missions des analyseurs syntaxiques XML</b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#navigateurs"><b>XML et les navigateurs</b></a><br>
<img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#langages_standard"><b>Langages XML Standard importants: SVG, MathML, SMIL, RDF, WML</b></a><br>
</p>
</td>
</tr><tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;<a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr>
</table>





<h2 class="Sh2"><a class="an" name="liberte_donnees">XML - la libert&eacute; de donn&eacute;es standardis&eacute;e</a></h2>

<p>La presse sp&eacute;cialis&eacute;e a f&ecirc;t&eacute; l'arriv&eacute;e de XML (Extensible Markup Language - en fran&ccedil;ais: langage de marquage &eacute;tendu) comme si elle marquait l'av&egrave;nement d'une &egrave;re de l'informatique compl&egrave;tement nouvelle. Pas tout &agrave; fait &agrave; tort car XML a sans aucun doute les moyens de donner une nouvelle impulsion d&eacute;cisive &agrave; l'informatique. Toutefois, il faut ajouter pour &ecirc;tre honn&ecirc;te que XML n'est pas nouveau, mais un sous-produit de SGML qui est standardis&eacute; depuis 1986. &Agrave; la diff&eacute;rence de SGML, XML n'est pas aussi &quot;acad&eacute;mique&quot;, mais dans la pratique, ses performances sont comparables &agrave; celles de SGML.</p>

<p>&Agrave; l'heure actuelle, les performances pour la poursuite de la diffusion de XML ne sont pas du tout mauvaises. Des groupes comme Microsoft et le monde Unix son concurrent sont tout &agrave; fait d'accord sur le fait que XML fait partie du futur en ce qui concerne la sauvegarde uniforme des donn&eacute;es . Pourtant il devient rapidement &eacute;vident pourquoi il est difficile de gagner une couche plus large d'utilisateurs &agrave; XML. Car XML est quelque chose &agrave; vrai dire pour des gens qui d&eacute;finissent des formats de fichiers, et ils forment dans la r&eacute;alit&eacute; une minorit&eacute;. Les utilisateurs &quot;normaux&quot; m&ecirc;me professionnels ne font plut&ocirc;t qu'effleurer XML. Ils sont en premier lieu ceux qui doivent utiliser ces langages de marquage, que ce soit au niveau code source ou &agrave; l'aide d'interfaces logicielles qui permettent un travail visuel et qui n'utilisent le format XML que pour la sauvegarde des donn&eacute;es.</p>

<p>Le plus marquant des langages d&eacute;finis &agrave; l'aide de XML est sans conteste aujourd'hui la nouvelle version de HTML nomm&eacute;e XHTML. Mais m&ecirc;me d'autres langages connus comme par exemple WML (langage de description pour le protocole WAP qui permet d'afficher des contenus d'Internet sur l'&eacute;cran d'affichage de t&eacute;l&eacute;phone portables) sont concern&eacute;s. Quel est le succ&egrave;s promis &agrave; tous ces langages, c'est le march&eacute; qui d&eacute;cidera. Par ailleurs, XML offre aussi toutefois la possibilit&eacute; de d&eacute;finir des langages compl&egrave;tement nouveaux et adapt&eacute;s sur mesure &agrave; ses propres structures de donn&eacute;es sans malgr&eacute; tout &ecirc;tre &quot;propri&eacute;taires&quot; ( NDT:sp&eacute;cifiques &agrave; un fabriquant de logiciels), mais en suivant un ensemble de r&egrave;gles standardis&eacute;es.</p>

<p>XML peut pour beaucoup d'utilisateurs difficilement &ecirc;tre &quot;appr&eacute;hend&eacute;&quot; parce qu'en fin de compte il ne fait pas grand chose. Sa performance consiste &agrave; permettre avec les concepts et r&egrave;gles dont il dispose la d&eacute;finition de ses propres langages de marquage fonctionnant de mani&egrave;re analogue &agrave; HTML. Tous ces langages se composent toujours d'&eacute;l&eacute;ments marqu&eacute;s par des rep&egrave;res, de leurs r&egrave;gles d'imbrication et d'attributs avec des affectations de valeurs permises. Par ailleurs, il y a &eacute;galement des r&egrave;gles pour importer ces langages - appel&eacute;s aussi espace de nommage en XML - dans d'autres langages et ainsi d'utiliser un langage &agrave; l'int&eacute;rieur d'un autre langage.</p>

<h3 class="xmp">Deux exemples simples de mise en &#339;uvre pour des langage de marquage</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#E4EEFF"><pre>
&lt;rectangle haut=&quot;100&quot; gauche=&quot;185&quot; largeur=&quot;427&quot; hauteur=&quot;110&quot;&gt;
  &lt;type arriereplan=&quot;fondu&quot; direction=&quot;horizontal&quot; couleurdebut=&quot;#0000FF&quot; couleurfin=&quot;#FFFFFF&quot;&gt;
   &lt;type contenu=&quot;text&quot; format=&quot;stil_6&quot;&gt;
     Un petit texte
   &lt;/contenu&gt;
  &lt;/arriereplan&gt;
&lt;/rectangle&gt;
</pre></td></tr></table>
<br>&nbsp;
<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#E4EEFF"><pre>
&lt;projet langage=&quot;perl&quot; name=&quot;Test de performance circuit int�gr� TL410&quot; typ=&quot;shell&quot; etat=&quot;27-01-2002&quot;&gt;
  &lt;nom module=&quot;main&quot; etat=&quot;27-01-2002&quot; dossier=&quot;/usr/scripts/tl410/tl410.pl&quot;&gt;
   &lt;nom fonction=&quot;alimentation donnees&quot; etat=&quot;14-09-2001&quot;&gt;
    &lt;description&gt;
     alimente en donn�es le circuit m�moire avec des valeurs de d�part judicieuses des tests T3.
    &lt;/description&gt;
   &lt;/fonction&gt;
  &lt;/module&gt;
&lt;/projet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication</h3>

<p>Deux exemples ont &eacute;t&eacute; choisis intentionnellement pour mettre en lumi&egrave;re la souplesse avec laquelle le concept de langage de marquage peut &ecirc;tre mis en &#339;uvre. Dans le premier exemple, il s'agit de la d&eacute;finition d'un &eacute;l&eacute;ment graphique vectoriel, dans le deuxi&egrave;me exemple de la d&eacute;finition du script de travail d'un technicien en &eacute;lectronique. On peut tout aussi bien d&eacute;crire de cette fa&ccedil;on du dessin industriel, des compositions musicales, des pi&egrave;ces de th&eacute;&acirc;tre et des processus biochimiques. &Agrave; vrai dire, tout ce qui est caract&eacute;ris&eacute; par des structures quelconques pouvant &ecirc;tre nomm&eacute;es et d&eacute;crites. Avec quel logiciel on peut visualiser, diffuser ou bien traiter ces donn&eacute;es n'est pas fix&eacute;. Il n'est d'abord question ici que de structurer les donn&eacute;es judicieusement et de les d&eacute;crire compl&egrave;tement.</p>

<p>Les deux exemples contiennent des &eacute;l&eacute;ments, attributs et affectations de valeurs et types d'imbrication tout &agrave; fait diff&eacute;rents. Ils ont pourtant en commun d'&ecirc;tre clairement constitu&eacute;s l'un et l'autre d'&eacute;l&eacute;ments, attributs, d'affectations de valeur et de r&egrave;gles d'imbrication autoris&eacute;es. Dans les deux exemples vous ne trouverez aucune trace de la description de ces r&egrave;gles. Dans la mesure o&ugrave; ce sont simplement des exemples imaginaires. Il y a pourtant un proc&eacute;d&eacute; standardis&eacute; pour le d&eacute;finition de ces r&egrave;gles et de mentionner dans les langages de marquage &agrave; quelles r&egrave;gles on se r&eacute;f&egrave;re et o&ugrave; ces r&egrave;gles sont d&eacute;finies. Ce proc&eacute;d&eacute; standardis&eacute;, c'est XML.</p>

<p>Comme exercice de pr&eacute;paration &agrave; XML, il est tout &agrave; fait recommand&eacute; d'essayer de d&eacute;crire une structure de donn&eacute;es avec laquelle vous travaillez beaucoup &agrave; l'aide de ces &eacute;l&eacute;ments, attributs, affectations de valeurs et imbrication de rep&egrave;res imaginaires. D&eacute;crivez par exemple l'organigramme de votre entreprise de cette fa&ccedil;on ou bien le d&eacute;roulement typique d'une de vos journ&eacute;es ou encore la vue &eacute;clat&eacute;e de votre appartement. Vous arriverez ainsi vite &agrave; la conclusion qu'il y a souvent plusieurs fa&ccedil;ons de d&eacute;finir une seule et m&ecirc;me structure. Dans le deuxi&egrave;me des exemples ci-dessus, on aurait pu par exemple aussi d&eacute;finir l'&eacute;l&eacute;ment d&eacute;fini par <code>&lt;description&gt;</code>...<code>&lt;/description&gt;</code>, comme un attribut nomm&eacute; <code>description</code> &agrave; l'int&eacute;rieur du rep&egrave;re <code>&lt;fonction&gt;</code>, ce qui donnerait dans l'exemple:<br>
<code>&lt;nom fonction=&quot;alimentation donnees&quot; etat=&quot;14-09-2001&quot; description=&quot;alimente en donn&eacute;es le circuit m&eacute;moire avec des valeurs de d&eacute;part judicieuses des tests T3&quot;&gt;&lt;/fonction&gt;</code><br>
Dans quel but vous cr&eacute;ez un &eacute;l&eacute;ment et ce que vous incluez dans un attribut fait partie du travail de conception de langages. Quand vous aurez mis en lumi&egrave;re cette probl&eacute;matique &agrave; l'aide de vos propres exemples concrets, vous aurez d&eacute;j&agrave; compris beaucoup de ce qu'est XML sans en conna&icirc;tre des diff&eacute;rents d&eacute;tails.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="validation">XML, DTD et validation</a></h2>

<p>Les r&egrave;gles pour les &eacute;l&eacute;ments, attributs et possibilit&eacute;s d'imbrication autoris&eacute;s d'un langage de marquage conforme &agrave; XML sont d&eacute;finies ind&eacute;pendamment des donn&eacute;es elles-m&ecirc;mes. Les donn&eacute;es relatives aux d&eacute;finitions repr&eacute;sentent ce qu'on appelle une <b>d&eacute;finition de type de document (anglais document type definition, en abr&eacute;g&eacute; DTD)</b>. Un logiciel supportant XML doit &ecirc;tre en mesure de lire ces DTD ainsi que d'&eacute;valuer les donn&eacute;es qui s'y r&eacute;f&egrave;rent en fonction des r&egrave;gles de la  DTD (voir aussi <img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#parser"><b>Missions des analyseurs syntaxiques XML</b></a>). Ce faisant, le logiciel d'interpr&eacute;tation peut &eacute;tablir si dans les donn&eacute;es XML qui se r&eacute;f&egrave;rent &agrave; une DTD donn&eacute;e, des notations non valables sont plac&eacute;es. Des notations non valables sont par exemple, des noms d'&eacute;l&eacute;ments ou d'attributs qui n'ont pas &eacute;t&eacute; d&eacute;finis dans la DTD ou bien des &eacute;l&eacute;ments plac&eacute;s &agrave; des endroits auxquels ils ne sont pas autoris&eacute;s en raison des r&egrave;gles de la DTD. Le proc&eacute;d&eacute; de v&eacute;rification si un fichier XML s'en tient aux r&egrave;gles de sa DTD s'appelle <b>validation</b> (en anglais valid = <i>valide</i>).</p>

<p>Le proc&eacute;d&eacute; avec les DTD et la validation peut vous para&icirc;tre au d&eacute;but quelque peu compliqu&eacute; et repr&eacute;sentant beaucoup de travail. Pourtant, ce n'est qu'avec ce proc&eacute;d&eacute; que l'on peut s'assurer que les langages XML ne sont pas des produits de l'imagination mais des langages qui respectent certaines r&egrave;gles d&eacute;finies exactement. C'est le seul moyen pour que diff&eacute;rents auteurs et diff&eacute;rents produits logiciels s'en tiennent aux conventions d'un langage et que le langage ne sombre pas en raison d'extensions spontan&eacute;es et ind&eacute;finies en devenant inutilisable pour les logiciels d'interpr&eacute;tation. Il est tout &agrave; fait possible d'&eacute;largir un langage XML, mais si c'est le cas, par le moyen pr&eacute;vu &agrave; cet effet, &agrave; savoir en compl&eacute;tant la DTD correspondante.</p>


<h3 class="xmp">Exemple d'un extrait de DTD</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#E4EEFF"><pre>
&lt;!ELEMENT nouvelle (titre,texte,date,auteur)&gt;
&lt;!-- Une nouvelle comprend le titre, le texte, la date et l'auteur --&gt;

   &lt;!ELEMENT titre (#PCDATA)&gt;
   &lt;!-- Le titre comprend le titre du texte, sinon rien --&gt;

   &lt;!ELEMENT texte (#PCDATA)&gt;
   &lt;!-- Le texte comprend le texte de la nouvelle sinon rien --&gt;

   &lt;!ELEMENT date (#PCDATA)&gt;
   &lt;!-- La date comprend la mention de date sinon rien --&gt;

   &lt;!ELEMENT auteur (#PCDATA)&gt;
   &lt;!-- &quot;auteur&quot; comprend la mention de l'auteur sinon rien --&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication</h3>

<p>La syntaxe exacte pour les d&eacute;finitions ne sera pas d&eacute;taill&eacute;e plus avant dans cette introduction. L'exemple a pour seul but &agrave; vrai dire de donner une premi&egrave;re impression de l'aspect des d&eacute;finitions qui composent la DTD et quelles cons&eacute;quences elles ont. Dans l'exemple, diff&eacute;rents <b>types d'&eacute;l&eacute;ments</b> sont d&eacute;finis. Ce sont les &quot;mod&egrave;les logiques&quot; qui peuvent &ecirc;tre plac&eacute;s dans un langage XML qui se r&eacute;f&egrave;re &agrave; cette DTD. Une d&eacute;finition comme par exemple <code>&lt;!ELEMENT&nbsp;titre&nbsp;(#PCDATA)&gt;</code> signifie qu'il y a dans ce langage XML un &eacute;l&eacute;ment <code>titre</code> qui est marqu&eacute; par les rep&egrave;res <code>&lt;titre&gt;...&lt;/titre&gt;</code>. Des r&egrave;gles &eacute;nonc&eacute;es dans l'exemple, il ressort par ailleurs que <code>&lt;titre&gt;...&lt;/titre&gt;</code> (ainsi que  <code>&lt;texte&gt;...&lt;/texte&gt;</code>, <code>&lt;date&gt;...&lt;/date&gt;</code> et <code>&lt;auteur&gt;...&lt;/auteur&gt;</code>) ne peuvent &ecirc;tre plac&eacute;s que dans <code>&lt;nouvelle&gt;...&lt;/nouvelle&gt;</code>. Tout ce qui dans l'exemple est plac&eacute; entre <code>&lt;!--</code> et <code>--&gt;</code> et un commentaire et ne fait pas partie de la d&eacute;finition concern&eacute;e.</p>

<p>Sur la base des d&eacute;finitions de l'exemple ci-dessus un fichier XML qui se r&eacute;f&egrave;re &agrave; cette d&eacute;finition pourrait contenir les donn&eacute;es suivantes:</p>

<h3 class="xmp">Exemple de donn&eacute;es sur la base de la DTD</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#E4EEFF"><pre>
&lt;nouvelle&gt;
 &lt;titre&gt;XML est trait� �galement maintenant dans SELFHTML !&lt;/titre&gt;
 &lt;texte&gt;
 Apr�s une longue pause, une nouvelle version de SELFHTML est parue. Une des nouveaut�s les plus importantes est la partie sur XML, dans laquelle est trait�e le nouveau langage de d�finitions pour langages de marquage. L'utilisateur apprend comment d�finir des r�gles et des exemples compl�tent les descriptions.
 &lt;/texte&gt;
 &lt;date&gt;20.10.2001&lt;/date&gt;
 &lt;auteur&gt;Ferdinand Scribouillard&lt;/auteur&gt;
&lt;/nouvelle&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication</h3>

<p>Dans l'exemple, vous pouvez constater que les r&egrave;gles d&eacute;finies auparavant dans l'exemple de DTD ont &eacute;t&eacute; respect&eacute;es. Il y a l'&eacute;l&eacute;ment qui prime <code>nouvelle</code>, marqu&eacute; par les rep&egrave;res <code>&lt;nouvelle&gt;...&lt;/nouvelle&gt;</code>. Dans ces rep&egrave;res sont not&eacute;s les autres &eacute;l&eacute;ments qui constituent une nouvelle auxquels des donn&eacute;es concr&egrave;tes sont affect&eacute;es. Les questions que vous pouvez vous poser, par exemple comment un fichier de donn&eacute;es se r&eacute;f&egrave;re &agrave; une DTD, trouveront leur r&eacute;ponse plus tard. Il n'est question ici que d'assimiler que ce qu'on nomme &quot;XML&quot; comprend toujours cette dualit&eacute;: &agrave; savoir la d&eacute;finition des r&egrave;gles pour un certain langage de marquage et l'application concr&egrave;te de ces r&egrave;gles dans ce langage de marquage.</p>

<p>L'exemple ci-dessus est naturellement tr&egrave;s simple. Dans la pratique, vous pouvez d&eacute;finir des structures de donn&eacute;es complexes &agrave; souhait et leurs relations &agrave; l'aide de la syntaxe DTD. Dans la partie sur les <img src="../src/chap.gif" width="15" height="13" border="0" alt="Autre page d'information">&nbsp;<a href="dtd/index.htm"><b> D&eacute;finitions de type de document (DTDs</b></a> vous trouverez des explications d&eacute;taill&eacute;es sur la fa&ccedil;on de cr&eacute;er une DTD conforme &agrave; XML.</p>

<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="formatage">XSL ou CSS -formatage d'&eacute;l&eacute;ments XML</a></h2>


<p>Les fichiers bas&eacute;s sur XML ne comprennent rien d'autre que des marquages logiques (appel&eacute;s aussi marquages s&eacute;mantiques). Un marquage tel que <code>&lt;description&gt;...&lt;/description&gt;</code> ne d&eacute;voile quelque chose que sur la signification des donn&eacute;es plac&eacute;es &agrave; cet endroit, rien sur la fa&ccedil;on dont doivent &ecirc;tre repr&eacute;sent&eacute;es ces donn&eacute;es. Les donn&eacute;es ainsi d&eacute;sign&eacute;es sont tout &agrave; fait ind&eacute;pendantes du m&eacute;dia de sortie (par exemple l'&eacute;cran, l'&eacute;cran d'affichage d'un portable, les hauts-parleurs, l'imprimante) et elles ne contiennent pas la moindre mention de formatage (police, taille de police, couleurs etc...). &Agrave; la diff&eacute;rence des donn&eacute;es HTML pour la repr&eacute;sentation desquelles un navigateur utilise des valeurs par d&eacute;faut, il n'a pour les donn&eacute;es XML aucun point de rep&egrave;re sur la fa&ccedil;on de les repr&eacute;senter. Avant donc que vous ne puissiez pr&eacute;senter ces donn&eacute;es, vous devez mentionner &agrave; l'aide d'un langage de style comment les donn&eacute;es doivent &ecirc;tre format&eacute;es.</p>

<p>Pour ce faire, deux langages de formatage sont disponibles aujourd'hui: CSS et XSL. <img src="../src/chap.gif" width="15" height="13" border="0" alt="Autre page d'information">&nbsp;<a href="../css/index.htm"><b>CSS (feuilles de style en cascade)</b></a>, utilisable &eacute;galement pour HTML, est pour le faire le langage &quot;passe-partout&quot;. Il suffit par exemple pour faire savoir &agrave; un navigateur Web comment il doit repr&eacute;senter les &eacute;l&eacute;ments d'un fichier XML. XSL, par contre, est infiniment plus puissant et plus &eacute;troitement orient&eacute; aux concepts XML. Ce qu'on appelle le composant de transformation XSLT est tout particuli&egrave;rement important. Gr&acirc;ce &agrave; XSLT vous pouvez par exemple transformer des donn&eacute;es XML en HTML - et cela avant que le navigateur n'en ait la moindre id&eacute;e, donc c&ocirc;t&eacute; serveur! Cela pr&eacute;sente l'avantage que XML en relation avec XSL fonctionne m&ecirc;me avec des navigateurs plus anciens qui ne connaissent pas XML. L'inconv&eacute;nient en est qu'il ne fonctionne que dans un environnement HTTP mais pas quand les donn&eacute;es sont pr&eacute;sent&eacute;es localement, sur un CD-ROM par exemple. En outre, le serveur Web doit avoir une interface correspondante, qui permette l'incorporation du module logiciel  traitant XSL/XSLT.</p>

<p>Par ailleurs des possibilit&eacute;s XSL existent qui sont inconnues des CSS, par exemple le formatage conditionnel (comme les conditions if dans les langages de programmation) ou le tri de donn&eacute;es.</p>

<p>De plus, un avantage d&eacute;cisif de XSL qu'il n'utilise pas une syntaxe d&eacute;riv&eacute;e d'un langage de marquage qui lui est propre, comme les CSS. Au lieu de cela XSL est lui m&ecirc;me un langage de marquage d&eacute;fini &agrave; l'aide de XML! Un fichier de feuilles de style cr&eacute;&eacute; avec XSL, est donc lui-m&ecirc;me un fichier conforme &agrave; XML. Ainsi des utilitaires logiciels d&eacute;velopp&eacute;s pour XML peuvent aussi &ecirc;tre utilis&eacute;s pour XSL.</p>

<h3 class="xmp">Exemple de d&eacute;finition avec les CSS:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#E4EEFF"><pre>
ligneentete { display:block; font-family:Helvetica; font-size:9pt; font-weight:bold }
</pre></td></tr></table>

<h3 class="xmp">Exemple de d&eacute;finition avec XSLT:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#E4EEFF"><pre>
  &lt;xsl:template match=&quot;ligneentete&quot;&gt;
    &lt;div style=&quot;font-family:Helvetica; font-size:9pt; font-weight:bold;&quot;&gt;
      &lt;xsl:value-of select=&quot;.&quot; /&gt;
    &lt;/div&gt;
  &lt;/xsl:template&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication</h3>

<p>&Agrave; premi&egrave;re vue, la d&eacute;finition CSS para&icirc;t naturellement plus simple - tout au moins si vous avez d&eacute;j&agrave; travaill&eacute; avec les CSS. La d&eacute;finition XSL est par contre plus famili&egrave;re vue sous l'angle des langages de marquage. Des marquages tels que <code>&lt;xsl:template&gt;...&lt;/xsl:template&gt;</code> (d&eacute;finition de mod&egrave;le) ou <code>&lt;xsl:value-of&nbsp;select=&quot;.&quot;&nbsp;/&gt;</code> (ins&eacute;rer le contenu de l'&eacute;l&eacute;ment actuel) font partie de XSL. Dans l'exemple, vous avez peut-&ecirc;tre remarqu&eacute; que pour la d&eacute;finition de format proprement-dite de <code>ligneentete</code> un &eacute;l&eacute;ment HTML est soudain utilis&eacute;, &agrave; savoir <code>div</code>, et que le rep&egrave;re d'ouverture  <code>&lt;div&gt;</code> contient m&ecirc;me la d&eacute;finition CSS famili&egrave;re. C'est l&agrave; tout le concept de XLST. Car &agrave; l'aide de ce langage, vous pouvez non pas seulement noter des mentions de format pour les &eacute;l&eacute;ments mais encore, vous pouvez transformer les &eacute;l&eacute;ments dans un autre langage. Dans la pratique, &agrave; l'heure actuelle c'est essentiellement la transformation de donn&eacute;es XML personnelles en HTML qui est utilis&eacute;e, comme dans l'exemple ci-dessus.</p>

<p>Dans la partie sur la <img src="../src/chap.gif" width="15" height="13" border="0" alt="Autre page d'information">&nbsp;<a href="representation/index.htm"><b> Repr&eacute;sentation de donn&eacute;es XML </b></a> vous trouverez des explications d&eacute;taill&eacute;es sur la fa&ccedil;on de fonctionner de XLST.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="w3c">Le consortium W3 et XML</a></h2>

<p>XML retourne aux efforts du consortium W3 et sa sp&eacute;cification et son d&eacute;veloppement sont dans les mains de cette organisation. Sur la  <img src="../src/en.gif" width="14" height="10" border="0" alt="english page">&nbsp;<a href="http://www.w3.org/XML/"><b>page d'acc&egrave;s du W3C &agrave; XML</b></a> les int&eacute;ress&eacute;s peuvent en suivre le d&eacute;veloppement actuel. &Eacute;tant donn&eacute; que c'est la m&ecirc;me organisation qui est responsable des sp&eacute;cifications HTML et qui d&eacute;termine le standard XML, une pr&eacute;vision per&ccedil;ue de plusieurs c&ocirc;t&eacute;s est apparue comme quoi XML &quot;remplacerait&quot; HTML. Pour cela, le potentiel de XML est beaucoup plus grand que le besoin  des concepteurs Web en formats de donn&eacute;es. XML est un concept universel pour la sauvegarde de donn&eacute;es et pour cette raison n'est pas limit&eacute; &agrave; L'Internet et au WWW. De toutes mani&egrave;res, le standard XML est en bonnes mains au consortium W3. Car les gens qui travaillent avec Dan Conolly qui dirige le projet XML, se sont au cours des ans, av&eacute;r&eacute;s &ecirc;tre clairvoyants et incorruptibles malgr&eacute; les tentatives de prises d'influence par des groupes r&eacute;put&eacute;s fabricants de logiciels .</p>

<p>Les id&eacute;es sur XML remontent &agrave; ces ann&eacute;es o&ugrave; la toile commen&ccedil;ait son essor. En octobre 1994, Tim Berners-Lee, le p&egrave;re de HTTP et de HTML, fondait &agrave; l'institut de technologie du  Massachusetts (Massachusetts Institute of Technology) un forum libre de d&eacute;veloppeur auquel des repr&eacute;sentants de l'industrie, de la recherche, de la technologie Internet, de la politique et des m&eacute;dias avaient acc&egrave;s. Il devint clair que HTML seul ne pourrait pas suffire seul aux exigences futures, et qu'un standard devait &ecirc;tre trouv&eacute; dans lequel il serait possible d'int&eacute;grer HTML et qui profiterait du succ&egrave;s de HTML. Un langage de d&eacute;finition pour langages de marquage &eacute;tait l'objectif. D'abord on discuta de concepts qui ne tenaient pas compte de SGML. Pourtant finalement, une solution s'imposa dans laquelle le nouveau langage de d&eacute;finition orient&eacute; sur la pratique con&ccedil;u comme un d&eacute;riv&eacute; de SGML, donc d&eacute;fini lui-m&ecirc;me &agrave; l'aide de SGML mais qui prend en charge les t&acirc;ches de SGML lui-m&ecirc;me &agrave; savoir la d&eacute;finition de langages de marquage et d'application concr&egrave;te. &Agrave; la conf&eacute;rence SGML  de 1996 &agrave; Boston a &eacute;t&eacute; pr&eacute;sent&eacute; le premier projet sur XML.</p>

<p>En f&eacute;vrier 1998 le consortium W3 publiait enfin la premi&egrave;re recommandation (Recommendation) sur XML. Ensuite, l'organisation s'effor&ccedil;ait d'&eacute;tablir XML, cr&eacute;ait des groupes de travail qui standardisaient diff&eacute;rents langages de marquage &agrave; l'aide de XML. Au premier rang desquels, naturellement HTML qui fut red&eacute;fini en nouveau standard XHTML &agrave; l'aide de XML et qui continue &agrave; &ecirc;tre d&eacute;velopp&eacute; sur cette base. D'autres langages importants comme SVG (format de graphique vectoriel), le langage de marquage math&eacute;matique (Mathematical Markup Language (MathML), ou le syst&egrave;me RDF (Resource Description Framework (RDF), un mod&egrave;le pour la description de donn&eacute;es Meta sur les documents, sont d&eacute;finis sur la base de XML et re&ccedil;oivent par le processus de standardisation typique du W3, le statut de langage de description g&eacute;n&eacute;ralement r&eacute;pandu et ind&eacute;pendant de tout logiciel.</p>



<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="marche_logiciels">XML et le march&eacute; des logiciels</a></h2>

<p>Pour le march&eacute; classique des logiciels, XML repr&eacute;sente une provocation d'importance. Car c'est une attaque g&eacute;n&eacute;rale &agrave; tous les formats de fichiers sp&eacute;cifiques &agrave; un concepteur qui sont li&eacute;s &agrave; certains programmes souvent tr&egrave;s chers. Par XML se cr&eacute;e du point de vue de l'utilisateur quelque chose de nouveau: au premier plan, ce n'est plus le produit logiciel qui forme une unit&eacute; de l'interface utilisateur et du format de fichier, mais ce n'est plus que l'interface utilisateur avec en m&ecirc;me temps l'attente que les donn&eacute;es &agrave; cr&eacute;er ou &agrave; traiter seront sauvegard&eacute;es dans un format de fichier moderne bas&eacute; sur XML. La concurrence entre les produits logiciels en lice se reporte pour cette raison sur la &quot;cr&eacute;ation d'interface&quot; (Interface-Design). Car quand des produits comparables utilisent les m&ecirc;mes formats standardis&eacute;s de fichiers et ne peuvent plus s'attacher l'utilisateur par le format de fichier, ils doivent alors convaincre l'utilisateur par une utilisation facile et un emploi adapt&eacute; &agrave; la pratique. Par le caract&egrave;re universel de l'utilisation de XML, cela s'applique &agrave; presque tous les types de logiciels, peu importe s'il s'agit de traitement de texte, de graphiques, de feuilles de calcul, bases de donn&eacute;es, CAD, musique ou m&ecirc;me jeux informatiques.</p>

<p>Alors que la plupart des concepteurs de logiciels dormaient encore sommeil du juste, le groupe Microsoft ha&iuml; par beaucoup, prouvait encore ses facult&eacute;s de cam&eacute;l&eacute;on. Avec un &eacute;norme investissement financier, l'entreprise travaille &agrave; adapter la famille Office tr&egrave;s r&eacute;pandue compos&eacute;e de  Word, Excel, PowerPoint et Access, compl&egrave;tement sur la base de formats de fichiers bas&eacute;s sur XML. Mais d'un autre c&ocirc;t&eacute; les fabricants se r&eacute;veillent aussi peu &agrave; peu. Avant tout le format de fichier SVG bas&eacute; sur XML pour le graphique vectoriel etcr&eacute;&eacute; par le consortium W3, se r&eacute;v&egrave;le comme tr&egrave;s prometteur.</p>

<p>XML pourrait veiller &agrave; ce qu'&agrave; l'avenir il importe peu avec quoi vous &eacute;crivez vos lettres, construisez votre maison ou cr&eacute;ez vos affiches publicitaires. Si le logiciel utilis&eacute; s'en tient avec rigueur au standard XML en utilisant des types de document (DTD) pouvant &ecirc;tre pr&eacute;sent&eacute;s, plus grand chose ne s'oppose alors au transfert de documents sans perte des donn&eacute;es entre des applications concurrentes de performances identiques. </p>

<p>Un atout important de XML est que la mise en page et les donn&eacute;es soient compl&egrave;tement s&eacute;par&eacute;es. M&ecirc;me le mode de sortie des donn&eacute;es n'est pas fix&eacute;. &Agrave; partir des m&ecirc;mes donn&eacute;es XML, on peut out aussi bien g&eacute;n&eacute;rer une page Web, qu'un mod&egrave;le imprim&eacute; ou une restitution acoustique avec une voix artificielle. Il n'y a plus qu'une sorte de donn&eacute;es et la publication se fait par des convertisseurs qui transforment les donn&eacute;es XML en d'autres donn&eacute;es ( par exemple en HTML ou en Postscript). Les programmes classiques, devenus ces derniers temps toujours plus monstrueux avec leurs formats sp&eacute;cifiques deviendront pour cette raison des modules logiciels de plus en plus r&eacute;duits dont la forme r&eacute;sidera dans l'interactivit&eacute;. Le concept de cette modularisation est certes d&eacute;j&agrave; plus ancien mais il y manquait les interfaces. XML assure pourtant cette interface au niveau des formats de fichiers.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="parser">Missions des analyseurs syntaxiques XML</a></h2>

<p>Ce qu'on d&eacute;signe dans les langages de proc&eacute;dure, donc dans les langages de programmation comme interpr&eacute;teur, s'appelle dans les langages de description comme XML un <b>analyseur syntaxique</b> (&eacute;galement: <b>processeur</b>). Pour XML un analyseur syntaxique est ce logiciel qui lit les structures XML, les analyse et met &agrave; disposition un logiciel qui prend la rel&egrave;ve. Un navigateur soutenant XML par exemple est &eacute;quip&eacute; de son propre module logiciel qui repr&eacute;sente l'analyseur syntaxique. Dans l'analyseur syntaxique l'<img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="regles/arborescence.htm"><b>arborescence</b></a> des donn&eacute;es XML est analys&eacute;e. Une analyse couronn&eacute;e de succ&egrave;s de cette structure est la condition pr&eacute;alable &agrave; une repr&eacute;sentation/diffusion correcte des donn&eacute;es.</p>

<p>Il n'est pas indispensable que l'analyseur syntaxique soit int&eacute;gr&eacute; c&ocirc;t&eacute; client (dans le navigateur). Il peut tout aussi bien &ecirc;tre incorpor&eacute; dans l'environnement d'un serveur Web et transformer les donn&eacute;es sauvegard&eacute;es sur le serveur et appel&eacute;es par le navigateur par HTTP avant m&ecirc;me que celles-ci ne soient transmises sur Internet. C'est exactement ce que fait par exemple un analyseur syntaxique XLST c&ocirc;t&eacute; serveur quand il transforme les donn&eacute;es XML en donn&eacute;es HTML. Un navigateur qui a r&eacute;clam&eacute; les donn&eacute;es XML par HTTP re&ccedil;oit alors du serveur du code HTML facile &agrave; dig&eacute;rer.</p>

<p>En g&eacute;n&eacute;ral on distingue les analyseurs syntaxiques qui <b>valident</b> le code source et ceux qui ne le font pas. Les analyseurs syntaxiques qui valident attendent pour toutes les donn&eacute;es XML une DTD, ils v&eacute;rifient ensuite tout le contenu des donn&eacute;es XML au vu de la DTD correspondante. Si l'examen r&eacute;v&egrave;le des erreurs, ces analyseurs syntaxiques sortent des messages d'erreur et interrompent le traitement.</p>


<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="navigateurs">XML et les navigateurs</a></h2>

<p>Le probl&egrave;me d&eacute;cisif pour le succ&egrave;s de XML est la capacit&eacute; des logiciels &agrave; repr&eacute;senter compl&egrave;tement et de fa&ccedil;on appropri&eacute;e les donn&eacute;es XML. Peu importe qu'il s'agisse de fichiers texte, de graphiques de donn&eacute;es num&eacute;riques ou de donn&eacute;es multim&eacute;dia.. Les navigateurs Web sont aujourd'hui le type de logiciel confront&eacute; avec les formats de fichiers les plus divers et qui doit s'assurer de la conversion plaisante de ces donn&eacute;es &agrave; l'&eacute;cran ou sur d'autres p&eacute;riph&eacute;riques de sortie. Par ailleurs, les navigateurs Web sont d'entr&eacute;e adapt&eacute;s &agrave; Internet, ce qui peut &ecirc;tre &eacute;galement important pour XML. Car un logiciel supportant XML doit pouvoir, le cas &eacute;ch&eacute;ant, acc&eacute;der &agrave; des d&eacute;finitions de type de document publiques sur Internet pour pouvoir interpr&eacute;ter un fichier cod&eacute; d'apr&egrave;s les r&egrave;gles d'un certain type de document. Dans cet esprit, les navigateurs ont un certain r&ocirc;le de pionnier en ce qui concerne la conversion de la philosophie XML dans la pratique.</p>

<p>L'Explorer Internet MS interpr&egrave;te toutes sortes de langages de marquage bas&eacute;s sur XML depuis sa version 5.0, le navigateur Netscape depuis sa version 6.0 enti&egrave;rement reprogramm&eacute;e. Par &quot;interpr&eacute;ter&quot; on entend ici que ces navigateurs reconnaissent les donn&eacute;es XML comme telles et qu'ils peuvent en analyser la syntaxe. Ils ne peuvent pas encore les repr&eacute;senter joliment - pour cela des formatages sont n&eacute;cessaires avec les CSS ou XSL ou une conversion en HTML gr&acirc;ce &agrave; XSLT.</p>

<p>&Eacute;tant donn&eacute; que les concepteurs Web prennent le plus souvent en consid&eacute;ration les versions plus anciennes de produit ou les autres navigateurs, il est provisoirement recommand&eacute; de na pas se lancer tout de suite dans la conception Web avec des langages bas&eacute;s sur XML. Ce n'est que lorsque XML en relation avec XSLT et son interpr&eacute;tation c&ocirc;t&eacute; serveur sont pr&ecirc;ts que son utilisation sur le Web que l'utilisation sur le Web peut se faire sans h&eacute;siter.</p>

<p>XML gagne en tout cas toujours plus d'importance pour la maintenance de donn&eacute;es  de larges stocks de donn&eacute;es richement structur&eacute;es. Pour des sites Web importants avec beaucoup de contenu structur&eacute; uniform&eacute;ment, les donn&eacute;es sont toujours plus souvent sauvegard&eacute;es dans des formats propres de fichiers bas&eacute;s sur XML. Jusqu'a ce qu'il soit pourtant possible sans probl&egrave;me d'envoyer directement les donn&eacute;es XML au navigateur Web qui les r&eacute;clame, il faudra attendre encore quelque temps.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="langages_standard">Langages standard XML importants: SVG, MathML, SMIL, RDF, WML</a></h2>

<p>XML offre d'un c&ocirc;t&eacute; la possibilit&eacute; de cr&eacute;er ses propres formats de fichier en suivant un sch&eacute;ma standardis&eacute; qui garantisse la compatibilit&eacute;. D'un autre c&ocirc;t&eacute; des formats de donn&eacute;es peuvent eux aussi &ecirc;tre cr&eacute;&eacute;s avec XML, qui se pr&ecirc;tent &agrave; une plus large utilisation sur le march&eacute; des logiciels. Le consortium W3 travaille en m&ecirc;me temps sur plusieurs de ces langages de marquage bas&eacute;s sur XML. Pour chacun de ces langages de marquage, il y a un groupe de travail distinct qui s'occupe de d'une sp&eacute;cification soign&eacute;e et d'un d&eacute;veloppement conforme &agrave; la pratique de chaque langage. Mais il y a aussi d'autres fabricants ou prestataires qui essaient de donner aux langages bas&eacute;s sur XML le statut de standard. Les langages suivants sont des exemples de ces langages standard. Chaque langage sera &eacute;clair&eacute; par un petit exemple. Les exemples ne sont cependant con&ccedil;us que pour se faire une id&eacute;e.</p>

<h3>SVG: Scalable Vector Graphics</h3>

<p><img src="../src/en.gif" width="14" height="10" border="0" alt="english page">&nbsp;<a href="http://www.w3.org/Graphics/SVG/"><b>Page d'accueil du W3 sur SVG</b></a><br>
SVG est un langage de marquage d&eacute;fini avec XML pour la description de graphiques vectoriels en 2 dimensions. Gr&acirc;ce &agrave; lui des donn&eacute;es graphiques peuvent &ecirc;tre d&eacute;crites telles qu'elles peuvent &ecirc;tre cr&eacute;&eacute;es par des programmes comme Corel Draw par exemple. Un exemple simple:</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#E4EEFF"><pre>
&lt;svg width=&quot;4in&quot; height=&quot;3in&quot;&gt;
&lt;g&gt;
  &lt;rect x=&quot;50&quot;, y=&quot;80&quot;, width=&quot;200&quot;, height=&quot;100&quot; style=&quot;fill: #FFFFCC&quot;/&gt;
&lt;/g&gt;
&lt;/svg&gt;
</pre></td></tr></table>

<p>L'exemple montre comment en SVG un &quot;canevas&quot; dans une surface d'image est cr&eacute;&eacute; &agrave; l'aide d'un &eacute;l&eacute;ment central <code>svg</code>. &Agrave; l'aide de l'&eacute;l&eacute;ment de groupage <code>g</code> les &eacute;l&eacute;ments peuvent &ecirc;tre reli&eacute;s en unit&eacute;s complexes. Dans l'exemple, un simple rectangle a &eacute;t&eacute; d&eacute;fini dans le seul groupe d&eacute;fini. Pour cela, l'&eacute;l&eacute;ment <code>rect</code> a &eacute;t&eacute; plac&eacute;.</p>


<h3>MathML: Mathematical Markup Language</h3>

<p><img src="../src/en.gif" width="14" height="10" border="0" alt="english page">&nbsp;<a href="http://www.w3.org/Math/"><b>Page d'acc&egrave;s du W3 &agrave; MathML</b></a><br>
MathML a la mission de repr&eacute;senter des contenus techniques et scientifiques qui ont besoin pour l'&ecirc;tre du langage de formulation math&eacute;matique. Un exemple simple (emprunt&eacute; au consortium W3):</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#E4EEFF"><pre>
&lt;msup&gt;
  &lt;mfenced&gt;
    &lt;mrow&gt;
       &lt;mi&gt;a&lt;/mi&gt;
       &lt;mo&gt;+&lt;/mo&gt;
       &lt;mi&gt;b&lt;/mi&gt;
     &lt;/mrow&gt;
   &lt;/mfenced&gt;
&lt;/mn&gt;2&lt;/mn&gt;
&lt;/msup&gt;
</pre></td></tr></table>

<p>L'exemple donne comme sortie: (a+b)<sup>2</sup><br>
La formulation peut, &agrave; premi&egrave;re vue para&icirc;tre excessive. L'avantage de la description en MarhML est pourtant que chacun des diff&eacute;rents &eacute;l&eacute;ments d'une expression re&ccedil;oit son propre marquage logique. Ce n'est qu'ainsi qu'il est possible de d&eacute;crire des expressions complexes &agrave; souhait.<br>
Avec <code>&lt;mfenced&gt;...&lt;/mfenced&gt;</code> l&egrave;s parenth&egrave;ses sont d&eacute;finies, avec <code>&lt;mrow&gt;...&lt;/mrow&gt;</code> une expression not&eacute;e horizontalement et formant un tout, avec <code>&lt;mi&gt;...&lt;/mi&gt;</code> un identificateur (<i>Identifier</i>), avec <code>&lt;mo&gt;...&lt;/mo&gt;</code> un op&eacute;rateur, avec <code>&lt;mn&gt;...&lt;/mn&gt;</code> une valeur num&eacute;rique et avec <code>&lt;msup&gt;...&lt;/msup&gt;</code> ce nombre est d&eacute;fini comme exposant (Superscript).</p>


<h3>SMIL: Synchronized Multimedia Integration Language</h3>

<p>(&agrave; prononcer comme l'anglais <i>smile</i> - sourire)<br>
<img src="../src/en.gif" width="14" height="10" border="0" alt="english page">&nbsp;<a href="http://www.w3.org/AudioVideo/"><b>Page d'acc&egrave;s du W3 &agrave; SMIL</b></a><br>
SMIL permet d'&eacute;crire des sc&eacute;narios pour les  &eacute;l&eacute;ments de m&eacute;dias les plus divers comme le texte, les images, la vid&eacute;o et l'audio. Cela permet de cr&eacute;er les pr&eacute;sentations qui se mettent d'elles-m&ecirc;mes en route, un peu comme &agrave; la t&eacute;l&eacute;vision,; cela peut &ecirc;tre par exemple pour des foires, des expositions, des pr&eacute;sentations de produits mais aussi dans le domaine artistique pour des s&eacute;quences film&eacute;es multim&eacute;dia. Un exemple simple:</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#E4EEFF"><pre>
&lt;par&gt;
&lt;text src=&quot;title.rt&quot; type=&quot;text/html&quot; region=&quot;title&quot; dur=&quot;20s&quot;/&gt;
 &lt;audio src=&quot;bienvenue.ra&quot;/&gt;
&lt;/par&gt;
</pre></td></tr></table>

<p>Dans l'exemple un &eacute;l&eacute;ment texte a &eacute;t&eacute; d&eacute;fini avec <code>&lt;text&gt;</code>. Le texte lui-m&ecirc;me est pris d'une source s&eacute;par&eacute;e (<code>src=&quot;title.rt&quot;</code>). Il est plac&eacute; dans une r&eacute;gion bien pr&eacute;cise du domaine d'affichage (<code>region=&quot;title&quot;</code>), d&eacute;finie &agrave; un autre endroit du fichier SMIL, et il sera visible pendant 20 secondes (<code>dur=&quot;20s&quot;</code>). Pendant ce temps un fichier audio du nom de <code>bienvenue.ra</code> sera diffus&eacute;. Tous les deux, le texte et le fichier audio, sont inclus dans <code>&lt;par&gt;...&lt;/par&gt;</code>. Ce qui veut dire &quot;parallel&quot; et d&eacute;crit l'instruction de pr&eacute;senter tout ce qui y est not&eacute; en m&ecirc;me temps.</p>



<h3>RDF: Resource Description Framework</h3>

<p><img src="../src/en.gif" width="14" height="10" border="0" alt="english page">&nbsp;<a href="http://www.w3.org/RDF/"><b>Page d'accueil du W3 &agrave; RDF</b></a><br>
RDF est un langage de description des donn&eacute;es Meta pour les documents. Les donn&eacute;es Meta peuvent jouer diff&eacute;rents r&ocirc;les: par exemple repr&eacute;senter des saisies pour les robots de moteurs de recherche ou bien livrer les donn&eacute;es n&eacute;cessaires &agrave; l'enregistrement dans le syst&egrave;me de catalogue d'une certaine biblioth&egrave;que &eacute;lectronique. Un exemple simple:</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#E4EEFF"><pre>
&lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;
         xmlns:dc=&quot;http://purl.org/dc/elements/1.0/&quot;&gt;
  &lt;rdf:Description rdf:about=&quot;http://localhost/doc&quot;
      dc:creator=&quot;Fr�d�ric Figaret&quot;
      dc:title=&quot;P�che d'aujourd'hui&quot;
      dc:description=&quot;Une documentation sur les m�thodes de p�che moderne&quot;
      dc:date=&quot;2001-03-30&quot; /&gt;
&lt;/rdf:RDF&gt;
</pre></td></tr></table>

<p>L'exemple montre une instance d'espace de nommage RDF, introduit par <code>&lt;rdf:RDF...</code> et cl&ocirc;tur&eacute; par <code>&lt;/rdf:RDF&gt;</code>. Pour l'instance d'espace de nommage deux sources sont toutefois mentionn&eacute;es: une fois la d&eacute;finition de syntaxe de donn&eacute;es Meta d'apr&egrave;s le sch&eacute;ma RDF  du consortium W3, et une fois celle d'apr&egrave;s le sch&eacute;ma RDF de <img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../html/entete/meta.htm#dublin_core"><b>Dublin Core</b></a> (dc). Il est ainsi possible d'utiliser &agrave; la suite le sch&eacute;ma du W3 avec le rep&egrave;re <code>rdf:</code> et le sch&eacute;ma Dublin-Core avec le rep&egrave;re <code>dc:</code> .</p>


<h3>WML: Wireless Markup Language</h3>

<p><img src="../src/en.gif" width="14" height="10" border="0" alt="english page">&nbsp;<a href="http://www.wapforum.org/"><b>Page d'accueil sur le forum WAP</b></a><br>
WML va de pair avec le protocole de transmission WAP qui a un r&ocirc;le analogue &agrave; celui de HTTP - pour repr&eacute;senter le langage de description pour les contenus &agrave; afficher sur les t&eacute;l&eacute;phones portables ou autres petits appareils supportant Internet. WML est &eacute;galement un exemple qui montre comment une autre instance que le consortium W3 s'efforce pour la normalisation bas&eacute;e sur XML de ce langage. WML a en principe un r&ocirc;le similaire a celui de HTML mais est optimis&eacute; pour un affichage sur un &eacute;cran r&eacute;duit. Chaque t&eacute;l&eacute;phone portable qui se dit WAP a un navigateur WML int&eacute;gr&eacute; qui peut afficher les donn&eacute;s correspondantes d'Internet. Un exemple simple:</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#E4EEFF"><pre>
&lt;wml&gt;
&lt;card id=&quot;card_1&quot; title=&quot;Bienvenue!&quot;&gt;
&lt;p align=&quot;left&quot;&gt;hier notre offre&lt;br/&gt;actuelle:&lt;/p&gt;
&lt;a href=&quot;#Card_2&quot;&gt;slips&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;#Card_3&quot;&gt;bavoirs&lt;/a&gt;
&lt;/card&gt;
&lt;/wml&gt;
</pre></td></tr></table>

<p>La caract&eacute;ristique pour les donn&eacute;es WML est la division en ce qu'on appelle des  &quot;Cards&quot;. Ce sont des petites unit&eacute;s qui repr&eacute;sente chacune le contenu d'un &eacute;cran. Avec <code>&lt;card&gt;...&lt;/card&gt;</code> une telle unit&eacute; est d&eacute;finie. &agrave; l'int&eacute;rieur de la carte sont not&eacute;s des &eacute;l&eacute;ments qui para&icirc;tront familiers &agrave; tous ceux qui connaissent HTML. Il y a l&agrave; des paragraphes, des passages &agrave; la ligne et des liens. La syntaxe de ces &eacute;l&eacute;ments en WML  est reprise de HTML. M&ecirc;me les graphiques peuvent &ecirc;tre incorpor&eacute;s en WML, et les formulaires peuvent &ecirc;tre eux aussi &ecirc;tre d&eacute;finis. Les formulaires envoy&eacute;s peuvent &ecirc;tre trait&eacute;s par des scripts CGI sur le serveur WAP de fa&ccedil;on analogue aux formulaires HTML.</p>






<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">
&#160;<a href="#top"><img src="../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a>
</td></tr>
<tr><td bgcolor="#EEEEEE" class="doc" align="right"><a href="regles/declarationxml.htm"><img src="../src/suivant.gif" width="10" height="10" border="0" hspace="10" alt="page suivante"></a></td>
<td bgcolor="#FFFFFF"><img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="regles/declarationxml.htm"><b>D&eacute;claration XML et instructions de traitement</b></a>
</td></tr>
<tr>
<td bgcolor="#EEEEEE" class="doc" align="right"><a href="../css/proprietes/filtres_ms.htm"><img src="../src/precedent.gif" width="10" height="10" border="0" hspace="10" alt="page pr&eacute;c&eacute;dente"></a></td>
<td bgcolor="#FFFFFF" width="100%"><img src="../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="../css/proprietes/filtres_ms.htm"><b>Filtres (seulement Microsoft)</b></a>
</td>
</tr>
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;</td></tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="bottom"><img src="../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../index.htm"><b>SELFHTML</b></a>/<a href="../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>XML/DTDs</b></a> </td>
</tr>
</table>

<p>&copy; 2002 <img src="../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:selfhtml@selfhtml.com.fr">selfhtml@selfhtml.com.fr</a></p>



</body>
</html>