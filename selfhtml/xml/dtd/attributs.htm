<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>SELFHTML: XML/DTD / D&eacute;finitions de type de document (DTD) / Attributs et affectation de valeurs</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Comment, dans une DTD XML, d&eacute;clarer des attributs et leurs valeurs autoris&eacute;es.">
<meta name="keywords"       content="SELFHTML, XML, DTD, DTDs, Document Type Definition, d&eacute;finition de type de document, Attributs, d&eacute;claration d'attribut">
<meta name="author"         content="Stefan M&uuml;nz, selfhtml@teamone.de">
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<meta name="DC.Publisher"   content="Serge Fran&ccedil;ois, selfhtml@selfhtml.com.fr">
<meta name="DC.Date"        content="2003-01-27T08:00+00:00">
<meta name="DC.Identifier"  content="http://selfhtml.selfhtml.com.fr/xml/dtd/attributs.htm">
<meta name="DC.Language"    content="fr">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.Create" content="2003-01-27T08:00+00:00">
<meta name="SELF.Version"   content="1">
<meta name="SELF.Pagetype"  content="Information">
<meta name="SELF.Path"      content="SELFHTML == ../../index.htm // XML/DTD == ../index.htm // D&eacute;finitions de type de document (DTD) == index.htm">
<!-- Matomo -->
<script type="text/javascript">
  var _paq = window._paq = window._paq || [];
  /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="//matomo.boitasite.com/";
    _paq.push(['setTrackerUrl', u+'matomo.php']);
    _paq.push(['setSiteId', '1']);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
<!-- End Matomo Code -->
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#AA5522" vlink="#772200" alink="#000000">

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="top"><img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../../index.htm"><b>SELFHTML</b></a>/<a href="../../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="../index.htm"><b>XML/DTD</b></a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>D&eacute;finitions de type de document (DTD)</b></a></td>
</tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#EEEEEE" class="doc" width="110"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></td>
<td bgcolor="#EEEEEE" class="doc" valign="bottom" width="100%"><h2>Attributs et affectation de valeurs</h2>
<tr>
<td bgcolor="#EEEEEE" class="doc" valign="top" align="center">
<img src="../../src/docx.gif" width="30" height="20" vspace="6" border="0" alt="Page d'information: vue d'ensemble">
</td>
<td bgcolor="#FFFFFF" valign="top" nowrap>
<p>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#generalites"><b>G&eacute;n&eacute;ralit&eacute;s sur les attributs</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#schema"><b>Sch&eacute;ma pour d&eacute;finir les attributs</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#obligatoires_facultatifs"><b>Attributs obligatoires et facultatifs</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#type_chaine"><b>Attributs de type cha&icirc;ne</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#valeur_au_choix"><b>Attributs avec des valeurs au choix invariables</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#valeur_identificateur"><b>Attributs avec une valeur d'identificateur (Token)</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#valeur_identification"><b>Attributs avec une valeur d'identification</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#valeur_reference_id"><b>Attributs avec une valeur d'identification de r&eacute;f&eacute;rence</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#valeur_entite"><b>Attributs avec une valeur d'entit&eacute; (par exemple pour des r&eacute;f&eacute;rences de fichier externe)</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#valeur_nom"><b>Attributs avec valeur de nom</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#sans_valeur"><b>Attributs sans attribution de valeur</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#exemple_personne"><b>Exemple li&eacute; au contexte: Description de personne</b></a><br>
</p>
</td>
</tr><tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;<a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr>
</table>


<h2 class="Sh2"><a class="an" name="generalites">G&eacute;n&eacute;ralit&eacute;s sur les attributs</a></h2>

<p>Quand vous notez en HTML quelque chose comme <code>&lt;p align=&quot;center&quot;&gt; un peu de texte&lt;/p&gt;</code>, alors <code>&lt;p&gt;</code> est l'&eacute;l&eacute;ment, et <code>align</code> est un attribut qui peut &ecirc;tre dans l'&eacute;l&eacute;ment <code>&lt;p&gt;</code>. Vous pouvez d&eacute;terminer les attributs dans vos propres DTD XML pour les <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="elements.htm#generalites"><b>types d'&eacute;l&eacute;ment</b></a> qui y sont d&eacute;finis. Lors de la d&eacute;finition d'un attribut, vous mentionnez quelles attributions de valeurs doivent &ecirc;tre possibles.</p>

<p>Lors de la cr&eacute;ation de DTD, vous devez r&eacute;fl&eacute;chir s'il est judicieux de sauvegarder des donn&eacute;es dans les attributs ou non. Pour beaucoup de propri&eacute;t&eacute;s il est assur&eacute;ment plus indiqu&eacute; de d&eacute;finir ses propres types d'&eacute;l&eacute;ment. Ainsi &quot;couleur_cheveux&quot; est par exemple une propri&eacute;t&eacute; naturelle typique d'une personne. Quand maintenant, dans la structure de donn&eacute;es concernant la description d'une personne rien d'autre que la couleur des cheveux ne doit &ecirc;tre pris en consid&eacute;ration, alors la d&eacute;finition d'un type d'&eacute;l&eacute;ment comme <code>&lt;couleur_cheveux&gt;...&lt;/couleur_cheveux&gt;</code> suffit. Quand par contre, d'autres propri&eacute;t&eacute;s des cheveux doivent &ecirc;tre prises en consid&eacute;ration, par exemple la longueur, alors l'opportunit&eacute; est donn&eacute;e de d&eacute;finir la structure de donn&eacute;es de telle fa&ccedil;on qu'il y ait un &eacute;l&eacute;ment avec diff&eacute;rents attributs par exemple <code>&lt;cheveux couleur=&quot;...&quot; longueur=&quot;...&quot;&gt;...&lt;/cheveux&gt;</code>.</p>

<p>On est pourtant ainsi confront&eacute; &agrave; la situation o&ugrave; les donn&eacute;es proprement dites de l'application sont plac&eacute;es dans les attributs de telle fa&ccedil;on qu'aucune donn&eacute;e en caract&egrave;res sens&eacute;e n'est plus possible entre le rep&egrave;re d'ouverture et le rep&egrave;re de fermeture de l'&eacute;l&eacute;ment. On peut en effet se demander ce qui pourrait bien &ecirc;tre plac&eacute; entre le rep&egrave;re d'ouverture <code>&lt;cheveux couleur=&quot;...&quot; longueur=&quot;...&quot;&gt;</code> et le rep&egrave;re de fermeture <code>&lt;/cheveux&gt;</code>. C'est pourquoi il est indiqu&eacute; de ne placer dans les attributs que les donn&eacute;es qui ne servent qu'au <b>traitement de donn&eacute;es</b> proprement-dit. Si par contre il s'agit de donn&eacute;es qui contiennent un <b>contenu</b> qui par exemple doit &ecirc;tre affich&eacute; &agrave; l'&eacute;cran, alors il vaut mieux d&eacute;finir pour elles des &eacute;l&eacute;ments distincts. Ainsi on pourrait aussi repr&eacute;senter la structure de donn&eacute;es <code>&lt;cheveux couleur=&quot;...&quot; longueur=&quot;...&quot;&gt;...&lt;/cheveux&gt;</code> par exemple de la fa&ccedil;on suivante:<br> <code>&lt;cheveux&gt;<br>&nbsp;&lt;couleur_cheveux&gt;...&lt;/couleur_cheveux&gt;<br>&nbsp;&lt;longueur_cheveux&gt;...&lt;/longueur_cheveux&gt;<br>&lt;/cheveux&gt;</code></p>


<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><a class="an" name="schema">Sch&eacute;ma pour d&eacute;finir les attributs</a></h2>

<p>Les attributs dans une DTD sont not&eacute;s d'apr&egrave;s le sch&eacute;ma suivant:</p>

<h3 class="xmp">Sch&eacute;ma:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;!ELEMENT nom_element (contenu)&gt;
&lt;!ATTLIST nom_element
   nom_attribut_1 contenu [#REQUIRED|#IMPLIED|#FIXED &quot;valeur&quot;|valeur_par_defaut]
   nom_attribut_n contenu [#REQUIRED|#IMPLIED|#FIXED &quot;valeur&quot;|valeur_par_defaut]
&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Les attributs sont d&eacute;finis par rapport aux types d'&eacute;l&eacute;ment, c'est &agrave; dire que vous ne pouvez d&eacute;finir des attributs que pour des types d'&eacute;l&eacute;ment d&eacute;finis.</p>

<p>La d&eacute;finition d'un attribut commence par une parenth&egrave;se pointue d'ouverture <code>&lt;</code> suivie imm&eacute;diatement &agrave; la suite d'un point d'exclamation <code>!</code> et derri&egrave;re, en majuscules, du mot cl&eacute; <code>ATTLIST</code>. Le mot indique d&eacute;j&agrave; que vous pouvez d&eacute;finir toute une liste d'attributs. Un type d'&eacute;l&eacute;ment peut avoir autant d'attributs que l'on veut. Notez dans la liste d'attributs d'un type d'&eacute;l&eacute;ment tous les attributs que vous voulez affecter &agrave; ce type d'&eacute;l&eacute;ment. Derri&egrave;re <code>ATTLIST</code> suit le nom du type d'&eacute;l&eacute;ment auquel les attributs se r&eacute;f&egrave;rent. Ce type d'&eacute;l&eacute;ment doit &ecirc;tre d&eacute;fini dans la DTD (voir <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="elements.htm"><b>&eacute;l&eacute;ments et r&egrave;gles d'imbrication</b></a>).</p>

<p>Dans la liste d'attributs il est pratique de noter chaque d&eacute;finition d'attribut sur une ligne distincte. Chaque d&eacute;finition d'attribut de la liste d'attributs commence avec le nom de l'attribut. Vous pouvez choisir librement un nom. Il doit pourtant satisfaire aux <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="regles_traitement.htm#noms"><b>r&egrave;gles pour les noms</b></a> . Derri&egrave;re le nom, notez des mentions sur le contenu du type d'attribut. Ces mentions peuvent &ecirc;tre vari&eacute;es et r&egrave;glent quelles valeurs un attribut peut avoir. Enfin chaque attribut doit encore recevoir l'un des mots cl&eacute;s <code>#REQUIRED</code>, <code>#IMPLIED</code> ou bien <code>#FIXED</code> avec une valeur mentionn&eacute;e ou une valeur par d&eacute;faut (plus de d&eacute;tails &agrave; ce sujet dans la partie sur les <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#obligatoires_facultatifs"><b>attributs obligatoires et facultatifs</b></a>).</p>

<p>La d&eacute;finition de la liste d'attributs est cl&ocirc;tur&eacute;e par une parenth&egrave;se pointue de fermeture <code>&gt;</code>. Les diff&eacute;rentes parties de chaque d&eacute;finition sont s&eacute;par&eacute;es les unes des autres par un ou plusieurs espaces.</p>


<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xml10.gif" width="30" height="30" border="0" alt="XML1.0"><img src="../../src/msie5.gif" width="30" height="30" border="0" alt="msie5.0">&nbsp;<a class="an" name="obligatoires_facultatifs"> Attributs obligatoires et facultatifs</a></h2>

<p>Vous devez toujours mentionner pour les attributs que vous d&eacute;finissez pour un type d'&eacute;l&eacute;ment dans une DTD, si l'attribut <b>doit &ecirc;tre plac&eacute;</b> ou <b>peut &ecirc;tre plac&eacute;</b> dans l'&eacute;l&eacute;ment. En HTML par exemple l'attribut <code>src</code> dans l'&eacute;l&eacute;ment <code>&lt;img&gt;</code> est absolument obligatoire. L'attribut <code>hspace</code> peut &ecirc;tre plac&eacute; de la m&ecirc;me mani&egrave;re dans cet &eacute;l&eacute;ment mais ne le doit pas.</p>

<h3 class="xmp">Exemple de DTD <var>ressources.dtd</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;!ELEMENT ressources (ressource)*&gt;
&lt;!ELEMENT ressource (#PCDATA)&gt;
&lt;!ATTLIST ressource
   url            CDATA #REQUIRED
   langue        CDATA #IMPLIED
   date_saisie        CDATA #REQUIRED
   date_modification      CDATA #IMPLIED
&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>L'exemple d&eacute;finit comme contenu pour le type d'&eacute;l&eacute;ment  <code>ressources</code> un type d'&eacute;l&eacute;ment nomm&eacute; <code>ressource</code>. Pour ce type d'&eacute;l&eacute;ments sont d&eacute;finis quatre attributs. Deux de ces quatre attributs &agrave; savoir ceux avec les noms <code>url</code> et <code>date_saisie</code> <b>doivent</b> &ecirc;tre not&eacute;s lors de l'utilisation du type d'&eacute;l&eacute;ment. Les deux autres, <code>langue</code> et <code>date_modification</code>, <b>peuvent</b> &ecirc;tre not&eacute;s. Marquez les attributs obligatoires par le identificateur-cl&eacute; <code>#REQUIRED</code>, et les attributs facultatifs par <code>#IMPLIED</code>. Les deux mentions doivent chacune figurer en fin d'une d&eacute;finition d'attribut.</p>

<p>Il est stipul&eacute; pour les quatre attributs de l'exemple que la valeur affect&eacute;e comporte des donn&eacute;es en caract&egrave;res. Ceci est indiqu&eacute; par le mot cl&eacute; <code>CDATA</code> (voir <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#type_chaine"><b>Attributs de type cha&icirc;ne</b></a>).</p>

<h3 class="xmp">Exemple d'une application valide:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/ressources.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (un navigateur XML affiche par exemple la structure de donn&eacute;es)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt;
&lt;!DOCTYPE ressources SYSTEM &quot;ressources.dtd&quot;&gt;
&lt;ressources&gt;
&lt;ressource url=&quot;http://alpentouren.teamone.de/&quot;langue=&quot;de&quot; date_saisie=&quot;09.11.2000&quot; &gt;
Description hypertextuelle pr�par�e pour quantit� d'excursions � v�lo par les cols des Alpes
&lt;/ressource&gt;
&lt;ressource url=&quot;http://www.planetbike.co.nz/&quot; date_saisie=&quot;10.12.2000&quot;
 date_modification=&quot;16.12.2000&quot; langue=&quot;en&quot;&gt;
Ballades en VTT � travers la Nouvelle Z�lande
&lt;/ressource&gt;
&lt;/ressources&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple deux &eacute;l&eacute;ments du type <code>ressource</code> sont not&eacute;s. Pour le premier &eacute;l&eacute;ment, les deux &eacute;l&eacute;ments obligatoires  <code>url</code> et <code>date_saisie</code> sont not&eacute;s ainsi que l'&eacute;l&eacute;ment facultatif <code>langue</code>, dans le deuxi&egrave;me &eacute;l&eacute;ment par contre les quatre attributs d&eacute;finis sont not&eacute;s.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><img src="../../src/xml10.gif" width="30" height="30" border="0" alt="XML1.0"><img src="../../src/msie5.gif" width="30" height="30" border="0" alt="msie5.0">&nbsp;<a class="an" name="type_chaine">Attributs de type cha&icirc;ne</a></h2>

<p>Chaque attribut en XML doit recevoir une affectation de valeur. Dans de nombreux cas, la valeur affect&eacute;e ne se limite pas &agrave; une certaine plage de valeurs mais peut avoir un nombre ind&eacute;termin&eacute; de valeurs possibles. C'est le cas par exemple quand l'attribut contient une courte description, une valeur num&eacute;rique une valeur en pourcentage ou une mention de mesure. Ces attributs sont nomm&eacute;s attributs de type cha&icirc;ne.</p>

<h3 class="xmp">Exemple de DTD <var>autos.dtd</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;!ELEMENT autos (auto)*&gt;
&lt;!ELEMENT auto EMPTY&gt;
&lt;!ATTLIST auto
   type                CDATA #REQUIRED
   annee_construction  CDATA #REQUIRED
   km                  CDATA #REQUIRED
   puissance           CDATA #REQUIRED
   prix_vente          CDATA #REQUIRED
&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple un <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="elements.htm#ohne_inhalt"><b>&eacute;l&eacute;ment vide sans contenu</b></a> nomm&eacute; <code>auto</code> a &eacute;t&eacute; d&eacute;fini. Cinq <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#obligatoires_facultatifs"><b>attributs obligatoires </b></a> ont &eacute;t&eacute; affect&eacute;s &agrave; ce type d'&eacute;l&eacute;ment. Tous contiennent une valeur en caract&egrave;res. Pour ce genre de valeur vous devez mentionner derri&egrave;re le nom d'attribut comme contenu d'attribut l'identificateur-cl&eacute; <code>#CDATA</code>. Une valeur en caract&egrave;res est une cha&icirc;ne de caract&egrave;res de votre choix, d'une longueur choisie donc du texte, des chiffres et des caract&egrave;res sp&eacute;ciaux. <code>#CDATA</code> est une abr&eacute;viation pour <i>character data</i>, en fran&ccedil;ais <i>donn&eacute;es en caract&egrave;res </i>).</p>


<h3 class="xmp">Exemple d'une application valide:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/autos.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (un navigateur XML affiche par exemple la structure de donn&eacute;es)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt;
&lt;!DOCTYPE autos SYSTEM &quot;autos.dtd&quot;&gt;
&lt;autos&gt;
&lt;auto typ=&quot;AUDI 80&quot; annee_construction=&quot;1992&quot; km=&quot;125000&quot; puissance=&quot;90&quot; prix_vente=&quot;6250 Euros&quot; /&gt;
&lt;/autos&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Tous les attributs d&eacute;finis dans l'exemple d'application ont &eacute;t&eacute; affect&eacute;s &agrave; l'&eacute;l&eacute;ment <code>auto</code>. Peu importe qu'il s'agisse de cha&icirc;nes de caract&egrave;res, de nombres ou des deux, toutes les affectations de valeurs en XML se classent dans ce qui est recouvert par <code>CDATA</code> en XML.</p>

<h3 class="inf">Attention:</h3>

<p>Peu importe ce qui figure comme affectation de valeur dans les attributs pour <code>CDATA</code>. Pour n'autoriser que certaines affectations de valeur vous pouvez d&eacute;finir des <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#valeur_au_choix"><b>attributs avec des valeurs au choix invariables</b></a>.</p>

<p>Dans les affectations de valeur &agrave; des attributs, vous pouvez aussi utiliser l'apostrophe <code>'</code> et le guillemet <code>&quot;</code>. Vous devez alors absolument toutefois masquer ces deux signes, &agrave; savoir sous la forme  <code>&amp;apos;</code> pour <code>'</code> et <code>&amp;quot;</code> pour <code>&quot;</code>.</p>


<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><img src="../../src/xml10.gif" width="30" height="30" border="0" alt="XML1.0"><img src="../../src/msie5.gif" width="30" height="30" border="0" alt="msie5.0">&nbsp;<a class="an" name="valeur_au_choix">Attributs avec des valeurs au choix invariables</a></h2>

<p>Vous connaissez sans soute de nombreux &eacute;l&eacute;ments de HTML qui n'autorisent que certaines valeurs. Ainsi l'attribut  <code>align</code> ne permet, dans les &eacute;l&eacute;ments o&ugrave; il peut &ecirc;tre plac&eacute; que les valeurs telles que <code>left</code>, <code>center</code>, <code>right</code> et <code>justify</code>. Vous pouvez &eacute;galement d&eacute;finir en XML ces &eacute;l&eacute;ments avec certaines affectations de valeur autoris&eacute;es.</p>

<h3 class="xmp">Exemple de DTD <var>hotels.dtd</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;!ELEMENT hotels (hotel)*&gt;
&lt;!ELEMENT hotel (#PCDATA)&gt;
&lt;!ATTLIST hotel
   nom            CDATA               #REQUIRED
   categorie          (I|II|III|IV|V)     #REQUIRED
   chambre_simple    (oui|non)           #IMPLIED
   chambre_double    (oui|non) &quot;oui&quot;
&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>


<p>Dans l'exemple, un type d'&eacute;l&eacute;ment  <code>hotel</code> est d&eacute;fini. Quatre attributs ont &eacute;t&eacute; attribu&eacute;s &agrave; ce type d'&eacute;l&eacute;ment. Le premier est un <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#obligatoires_facultatifs"><b>attribut obligatoire</b></a> avec une <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#type_chaine"><b>valeur de type cha&icirc;ne</b></a>. Les trois autres n'ont pas une valeur cha&icirc;ne nais attendent une des affectations de valeurs possibles d&eacute;termin&eacute;es. Les valeurs possibles sont not&eacute;es entre parenth&egrave;ses, s&eacute;par&eacute;es les uns des autres par le &quot;ou&quot; logique, symbolis&eacute;  par la barre verticale <code>|</code>. L'attribut <code>categorie</code> permet de cette fa&ccedil;on un des valeurs possibles <code>I</code>, <code>II</code>, <code>III</code>, <code>IV</code> ou <code>V</code>. Les attributs <code>chambre_simple</code> et <code>chambre_double</code> permettent les affectations de valeur <code>oui</code> ou bien <code>non</code>. De plus, il est possible pour les attributs avec des valeurs au choix invariables de d&eacute;finir une de ces valeurs comme valeur par d&eacute;faut. C'est le cas dans l'exemple pour l'attribut <code>chambre_double</code>. L&agrave;, derri&egrave;re la parenth&egrave;se incluant les affectations de valeur possibles, et s&eacute;par&eacute;e par un ou plusieurs espaces, est not&eacute;e entre guillemets une des valeur comme valeur par d&eacute;faut - dans l'exemple, il s'agit de la valeur <code>oui</code>. Quand vous notez une telle valeur par d&eacute;faut, il n'est plus possible de mentionner par la suite si l'attribut est indispensable (<code>#REQUIRED</code>) ou facultatif (<code>#IMPLIED</code>). Car la valeur par d&eacute;faut fait en sorte que l'attribut est interpr&eacute;t&eacute; en interne comme &eacute;tant indispensable par l' <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../intro.htm#parser"><b>analyseur syntaxique</b></a>. Quant l'attribut est omis dans l'application, la valeur par d&eacute;faut sera prise automatiquement.</p>


<h3 class="xmp">Exemple d'une application valide:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/hotels.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (un navigateur XML affiche par exemple la structure de donn&eacute;es)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt;
&lt;!DOCTYPE hotels SYSTEM &quot;hotels.dtd&quot;&gt;
&lt;hotels&gt;

&lt;hotel nom=&quot;Au lion d'or&quot; categorie=&quot;IV&quot;&gt;
h�tel situ� en lisi�re de for�t, 150 lits, calme et cher.
&lt;/hotel&gt;

&lt;hotel nom=&quot;Arabesque&quot; categorie=&quot;II&quot; chambre_double=&quot;oui&quot; chambre_simple=&quot;oui&quot;&gt;
h�tel en ville simple, 400 chambres, satisfaisant, sans confort particulier.
&lt;/hotel&gt;

&lt;hotel nom=&quot;Lancelot&quot; categorie=&quot;III&quot; chambre_simple=&quot;non&quot;&gt;
h�tel situ� dans le centre, 100 lits, agr�able, facilement accessible.
&lt;/hotel&gt;

&lt;/hotels&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>L'exemple montre trois applications autoris&eacute;es de l'&eacute;l&eacute;ment <code>hotel</code>. Dans le premier cas, seuls sont not&eacute;s les deux attributs qui ont &eacute;t&eacute; d&eacute;finis comme indispensables dans la DTD. Pour l'attribut <code>chambre_double</code> la valeur par d&eacute;faut <code>oui</code> a &eacute;t&eacute; interpr&eacute;t&eacute;e en interne.</p>

<p>Dans la deuxi&egrave;me application l'attribut <code>chambre_double</code> a &eacute;t&eacute; not&eacute; explicitement, et la valeur par d&eacute;faut lui a &eacute;t&eacute; affect&eacute;e. &Agrave; vrai dire, cette mention est superflue, car elle fait double emploi avec l'interpr&eacute;tation. La notation correspond &agrave; peu pr&egrave;s &agrave; la mention en HTML <code>align=&quot;left&quot;</code> o&ugrave; l'affectation de valeur <code>left</code> est d&eacute;finie comme valeur par d&eacute;faut.</p>

<p>L'attribut <code>chambre_simple</code>, qui est d&eacute;fini comme &eacute;tant facultatif (<code>#IMPLIED</code>), ne re&ccedil;oit aucune valeur dans les deux premi&egrave;res applications de l'exemple. Dans la troisi&egrave;me, la valeur <code>non</code> lui est attribu&eacute;e explicitement.</p>


<h3 class="inf">Attention:</h3>

<p>Les affectations de valeur &agrave; des attributs avec des valeurs au choix invariables ne doivent contenir aucun espace, donc en fin de compte ne pas comporter plus d'un mot.</p>

<p>La possibilit&eacute; existe aussi d'imposer une certaine affectation de valeur pour un attribut. Pour cela notez (exemple):<br>
<code>type (hotel | motel) #FIXED &quot;hotel&quot;</code><br>
Par la mention <code>#FIXED</code> vous obtenez qu'aucune autre affectation de valeur que <code>hotel</code> ne soit possible pour l'attribut <code>type</code>, bien qu'une autre possibilit&eacute; soit d&eacute;finie. Ces constructions peuvent &ecirc;tre appropri&eacute;es quand un attribut doit pouvoir se voir attribuer d'autres valeurs par la suite mais doit d&eacute;j&agrave; &ecirc;tre &quot;&eacute;tabli&quot;.</p>



<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="valeur_identificateur">Attributs avec une valeur d'identificateur (Token)</a></h2>

<p>Outre les attributs avec des donn&eacute;es en caract&egrave;res au choix (<code>CDATA</code>) comme valeur ou avec des valeurs au choix invariables il y a des attributs qui attendent comme affectation de valeur une valeur d'identificateur. Les valeurs d'identificateur sont des valeurs qui identifient telles des noms ou des num&eacute;ros. Font partie de ce groupe:</p>

<p>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#valeur_identification"><b>Attributs avec une valeur d'identification</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#valeur_reference_id"><b>Attributs avec une valeur d'identification de r&eacute;f&eacute;rence</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#valeur_entite"><b>Attributs avec une valeur d'entit&eacute; (par exemple pour des r&eacute;f&eacute;rences de fichier externe)</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#valeur_identificateur"><b>Attributs avec une valeur nmtoken (m&ecirc;me pour les identifications num&eacute;riques)</b></a>
</p>



<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><img src="../../src/xml10.gif" width="30" height="30" border="0" alt="XML1.0">&nbsp;<a class="an" name="valeur_identification">Attributs avec une valeur d'identification</a></h2>

<p>XML pr&eacute;voit la possibilit&eacute; de signaler &agrave; l'<img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../intro.htm#parser"><b>analyseur syntaxique</b></a> que la valeur affect&eacute;e d'un certain attribut ne peut &ecirc;tre plac&eacute;e qu'une fois dans tout le document. Ceci est une propri&eacute;t&eacute; importante avant tout par rapport aux langages script. Car ce n'est que par des valeurs claires d'identification pour tout le document qu'il est possible d'adresser un &eacute;l&eacute;ment par sa valeur d'identification.</p>

<h3 class="xmp">Exemple de DTD <var>livres.dtd</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;!ELEMENT livres (livre)*&gt;
&lt;!ELEMENT livre (#PCDATA)&gt;
&lt;!ATTLIST livre
   isbn     ID    #REQUIRED
   titre    CDATA #REQUIRED
   auteur    CDATA #REQUIRED
&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple, un type d'&eacute;l&eacute;ment  <code>livre</code> a &eacute;t&eacute; d&eacute;fini auquel trois  <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#obligatoires_facultatifs"><b>Attributs obligatoires</b></a> ont &eacute;t&eacute; affect&eacute;s. Deux d'entres eux contiennent des valeurs en caract&egrave;res, le troisi&egrave;me une valeur d'identification - &agrave; savoir l'attribut <code>isbn</code>. Pour d&eacute;finir un attribut avec une valeur d'identification, notez pour la d&eacute;signation l'identificateur-cl&eacute; <code>ID</code> &agrave; la place de <code>CDATA</code>.</p>

<h3 class="xmp">Exemple d'une application valide:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/livres.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (un navigateur XML affiche par exemple la structure de donn&eacute;es)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt;
&lt;!DOCTYPE livres SYSTEM &quot;livres.dtd&quot;&gt;
&lt;livres&gt;

&lt;livre isbn=&quot;nr_3-90193-3949-7&quot; titre=&quot;Fleurette facile&quot; auteur=&quot;Professeur Trouvetout&quot;&gt;
Une introduction entre le g�nie et la folie.
&lt;/livre&gt;

&lt;livre isbn=&quot;nr_3-90193-3950-2&quot; titre=&quot;Fleurette facile II&quot; auteur=&quot;Professeur Trouvetout&quot;&gt;
Une autre introduction entre le g�nie et la folie.
&lt;/livre&gt;

&lt;/livres&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>L'exemple montre comment deux &eacute;l&eacute;ments du m&ecirc;me nom pour lesquels les attributs peuvent aussi avoir le m&ecirc;me contenu, doivent pourtant se distinguer par un attribut d&eacute;fini comme ID. Un analyseur syntaxique qui interpr&egrave;te correctement XML doit annoncer une erreur si l'affectation de valeur &agrave; l'attribut  <code>isbn</code> du deuxi&egrave;me enregistrement a la m&ecirc;me valeur que dans le premier enregistrement.</p>

<h3 class="xpl">Attention:</h3>

<p>Les affectations de valeur &agrave; un attribut du type <code>ID</code> doivent correspondre aux <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="regles_traitement.htm#noms"><b>r&egrave;gles pour les noms</b></a>! Dans l'exemple ci-dessus, c'est pour cette raison qu'on a fait pr&eacute;c&eacute;der le num&eacute;ro isbn de la cha&icirc;ne de caract&egrave;res <code>nr_</code> &eacute;tant donn&eacute; que le num&eacute;ro ISBN proprement-dit commence par un chiffre, ce ne serait pas un nom valable.</p>

<p>L'Explorer Internet MS  qui avec l'ancien analyseur syntaxique XML de Microsoft accepte certes le type <code>ID</code>, mais en tol&eacute;rant plusieurs valeurs identiques ID dans le m&ecirc;me document ce qui n'est pas le but recherch&eacute;. Les analyseurs syntaxiques XML plus r&eacute;cents de Microsoft (&agrave; partir de <var>msxml3.dll</var>) se comportent par contre correctement.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><img src="../../src/xml10.gif" width="30" height="30" border="0" alt="XML1.0">&nbsp;<a class="an" name="valeur_reference_id">Attributs avec une valeur d'identification de r&eacute;f&eacute;rence</a></h2>

<p>Quand vous d&eacute;finissez pour des types d'&eacute;l&eacute;ment des <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#valeur_identification"><b>attributs avec une valeur d'identification</b></a>, vous pouvez aussi d&eacute;finir des attributs dont la valeur renvoie &agrave; un autre &eacute;l&eacute;ment d&eacute;termin&eacute;. De cette fa&ccedil;on, vous pouvez gr&acirc;ce aux attributs d&eacute;finir des relations de d&eacute;pendance entre des &eacute;l&eacute;ments.</p>

<h3 class="xmp">Exemple de DTD <var>liste.dtd</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;!ELEMENT liste (point)*&gt;
&lt;!ELEMENT point (#PCDATA)&gt;
&lt;!ATTLIST point
   nom              ID                  #REQUIRED
   point_parent     IDREF               #IMPLIED
&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple un type d'&eacute;l&eacute;ment <code>point</code> est d&eacute;fini. Ce type d'&eacute;l&eacute;ment pourrait par exemple accepter les diff&eacute;rents points d'un index du contenu qui d&eacute;finit des structures de chapitres arborescentes. Cette d&eacute;pendance est exprim&eacute;e dans l'exemple dans la d&eacute;finition des attributs. Le type d'&eacute;l&eacute;ment <code>point</code> re&ccedil;oit un attribut  <code>nom</code> qui est d&eacute;fini comme <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#valeur_identification"><b>attribut avec une valeur d'identification</b></a>. Chacun des &eacute;l&eacute;ments  <code>point</code> de l'application doit donc se voir affecter une valeur claire et sans ambigu&iuml;t&eacute; pour <code>nom</code>.<br>
De plus un attribut <code>point_parent</code> est affect&eacute; &agrave; l'&eacute;l&eacute;ment <code>point</code>. La valeur de cette attribut doit &ecirc;tre d'apr&egrave;s la d&eacute;finition le nom d'un point auquel l'&eacute;l&eacute;ment actuel se r&eacute;f&egrave;re. De telles relations r&eacute;currentes s'expriment par l'identificateur cl&eacute; <code>IDREF</code>. Gr&acirc;ce aux deux attributs d&eacute;finis, il est maintenant possible de former une arborescence de votre choix.</p>


<h3 class="xmp">Exemple d'une application valide:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/liste.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (un navigateur XML affiche par exemple la structure de donn&eacute;es)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt;
&lt;!DOCTYPE liste SYSTEM &quot;liste.dtd&quot;&gt;
&lt;liste&gt;
&lt;point nom=&quot;racine&quot;&gt;contenu&lt;/point&gt;
&lt;point nom=&quot;introduction&quot; point_parent=&quot;racine&quot;&gt;introduction&lt;/point&gt;
&lt;point nom=&quot;histoire&quot; point_parent=&quot;introduction&quot;&gt;histoire&lt;/point&gt;
&lt;point nom=&quot;aujourd_hui&quot; point_parent=&quot;introduction&quot;&gt;etat_actuel&lt;/point&gt;
&lt;point nom=&quot;pas&quot; point_parent=&quot;racine&quot;&gt;premiers pas&lt;/point&gt;
&lt;point nom=&quot;exemple&quot; point_parent=&quot;pas&quot;&gt;un petit exemple&lt;/point&gt;
&lt;/liste&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>L'exemple montre comment vous pouvez former une arborescence avec la seule aide des deux attributs <code>nom</code> (d&eacute;fini en tant qu'<code>ID</code>) et <code>point_parent</code> (d&eacute;fini en tant qu'<code>IDREF</code>). La structure de l'exemple pourrait &ecirc;tre visuellement repr&eacute;sent&eacute;e ainsi:</p>

<p>
<img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine">&nbsp;contenu<br>
&nbsp;&nbsp;<img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine">&nbsp;introduction<br>
&nbsp;&nbsp;&nbsp;&nbsp;<img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;histoire<br>
&nbsp;&nbsp;&nbsp;&nbsp;<img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;etat_actuel<br>
&nbsp;&nbsp;<img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine">&nbsp;premiers pas<br>
&nbsp;&nbsp;&nbsp;&nbsp;<img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;un petit exemple<br>
</p>

<p>L'attribut <code>point_parent</code> dans l'exemple est d&eacute;fini comme facultatif (<code>#IMPLIED</code>. C'est pourquoi il peut par exemple &ecirc;tre omis dans le premier point de l'exemple (le point nomm&eacute; <code>racine</code>).</p>


<h3 class="inf">Attention:</h3>

<p>Outre <code>IDREF</code> il existe pour la d&eacute;finition d'attributs  avec une valeur d'identification &eacute;galement la forme plurielle <code>IDREFS</code>. Gr&acirc;ce &agrave; elle vous permettez que plusieurs valeurs de r&eacute;f&eacute;rence claire soient attribu&eacute;es &agrave; un tel attribut. Si dans l'exemple ci-dessus on d&eacute;finissait par exemple:<br>
<code>point_parent IDREFS #REQUIRED</code><br>
Alors on permettrait dans l'application une affectation telle que celle-ci:<br>
<code>&lt;point nom=&quot;pas&quot; point_parent=&quot;racine introduction&quot;&gt;premiers pas&lt;/point&gt;</code><br>
S&eacute;parez plusieurs affectations par des espaces pour le faire.</p>

<p>L'Explorer Internet MS  avec l'ancien analyseur syntaxique XML de Microsoft accepte certes le type <code>ID</code>, mais en tol&eacute;rant plusieurs valeurs identiques ID dans le m&ecirc;me document ce qui n'est pas le but recherch&eacute;. Les analyseurs syntaxiques XML plus r&eacute;cents de Microsoft (&agrave; partir de <var>msxml3.dll</var>) se comportent par contre correctement.</p>



<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><img src="../../src/xml10.gif" width="30" height="30" border="0" alt="XML1.0">&nbsp;<a class="an" name="valeur_entite">Attributs avec une valeur d'entit&eacute; (par exemple pour des r&eacute;f&eacute;rences de fichier externe)</a></h2>

<p>Pour les attributs avec une valeur d'entit&eacute; l'affectation de valeur &agrave; un tel attribut dans l'application est reconnue en tant que nom d'une <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="entites.htm"><b>Entit&eacute; pour blocs de texte et transcriptions</b></a> d&eacute;finie. La valeur affect&eacute;e n'est alors pas le nom not&eacute; mais la d&eacute;finition qui lui est reli&eacute;e. Cette possibilit&eacute; est avant tout int&eacute;ressante parce qu'elle est en XML la fa&ccedil;on de r&eacute;f&eacute;rencer des fichiers externes. Imaginez-vous une notation telle que <code>&lt;image&nbsp;source=&quot;toile.gif&quot;&gt;</code>. Pour faire savoir &agrave; l'analyseur syntaxique que ce contenu d'attribut ne doit pas seulement &ecirc;tre interpr&eacute;t&eacute; comme une simple cha&icirc;ne de caract&egrave;res mais comme r&eacute;f&eacute;rence d'un fichier externe, un d&eacute;tour par la r&eacute;f&eacute;rence d&eacute;finie comme  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="entites.htm#externe"><b>entit&eacute; externe</b></a> est indispensable.</p>

<h3 class="xmp">Exemple de DTD <var>image.dtd</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;!NOTATION gif PUBLIC &quot;+//ISBN 0-7923-9432-1::Graphic Notation//NOTATION CompuServer Graphic Interchange Format//EN&quot;&gt;
&lt;!ENTITY toile SYSTEM &quot;toile.gif&quot; NDATA gif&gt;
&lt;!ELEMENT image EMPTY&gt;
&lt;!ATTLIST image
   source            ENTITY              #REQUIRED
&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Comme vous le voyez, l'incorporation d'une r&eacute;f&eacute;rence externe est un peu compliqu&eacute;e. Dans la DTD, mentionnez aussi bien la source du fichier &agrave; r&eacute;f&eacute;rencer que la mani&egrave;re dont le type de fichier correspondant doit &ecirc;tre trait&eacute;. D&eacute;finissez la source avec l'<img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="entites.htm#externe"><b>entit&eacute; pour ressource externe</b></a> (<code>&lt;!ENTITY...&gt;</code>), le traitement du type de fichier avec la <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="notations.htm"><b>notation de fichier r&eacute;f&eacute;renc&eacute;</b></a>  (<code>&lt;!NOTATION...&gt;</code>). Dans l'exemple un type d'&eacute;l&eacute;ment nomm&eacute; <code>image</code> est d&eacute;fini avec un attribut nomm&eacute; <code>source</code>. Pour d&eacute;finir un attribut avec une valeur d'entit&eacute;, notez dans la d&eacute;finition &agrave; la place de <code>CDATA</code> l'identificateur-cl&eacute; <code>ENTITY</code>.</p>

<h3 class="xmp">Exemple d'une application valide:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/image.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (un navigateur XML affiche par exemple la structure de donn&eacute;es)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt;
&lt;!DOCTYPE image SYSTEM &quot;image.dtd&quot;&gt;
&lt;image source=&quot;toile&quot; /&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>L'application est toute simple: Un nom est affect&eacute; &agrave; l'&eacute;l&eacute;ment <code>image</code> par l'attribut <code>source</code>. Ce nom est d&eacute;fini comme entit&eacute; dans la DTD. L'analyseur syntaxique apprend par la d&eacute;finition comme attribut avec valeur d'entit&eacute;, qu'il doit interpr&eacute;ter la valeur affect&eacute;e comme le nom d'une entit&eacute;. Lors de l'interpr&eacute;tation, la valeur affect&eacute;e <code>&quot;toile&quot;</code> est remplac&eacute;e par le lien qui lui a &eacute;t&eacute; affect&eacute; <code>&quot;toile.gif&quot;</code>. Par la d&eacute;finition comme entit&eacute; externe (avec <code>SYSTEM</code>) l'analyseur syntaxique sait en outre que cette valeur repr&eacute;sente la mention de chemin d'un autre fichier.</p>

<h3 class="inf">Attention:</h3>

<p>Le moyen d&eacute;crit ici n'est pas une solution si vous voulez obtenir qu'&agrave; un attribut une source externe de votre choix puisse &ecirc;tre affect&eacute;e, comme c'est possible par exemple en HTML avec <code>&lt;img src=&quot;...&quot;&gt;</code>. Ce genre de chose ne peut pas du tout &ecirc;tre d&eacute;fini en XML &agrave; l'heure actuelle. En XHTML, la d&eacute;finition conforme &agrave; XML de HTML, l'attribut <code>src</code> de l'&eacute;l&eacute;ment <code>img</code> est simplement d&eacute;fini comme <code>CDATA</code>. Si un navigateur Web comprend cet attribut comme l'ordre d'afficher le graphique &agrave; l'endroit correspondant n'est d&ucirc; qu'a la programmation m&ecirc;me du navigateur Web - cela ne figure pourtant pas dans la DTD XHTML! Quand vous voulez sortir directement &agrave; l'&eacute;cran  des donn&eacute;es XML, les r&eacute;f&eacute;rences externes de votre choix sont un probl&egrave;me. Une possibilit&eacute; de r&eacute;soudre ce probl&egrave;me est donn&eacute;e par <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../representation/basesxsl.htm"><b>XSLT</b></a> &agrave; l'aide duquel vous pouvez transcrire des donn&eacute;es XML en HTML avant la sortie de ces donn&eacute;es.</p>

<p>En plus d'<code>ENTITY</code> existe encore pour la d&eacute;finition d'attributs la forme plurielle <code>ENTITIES</code>. Gr&acirc;ce &agrave; elle, vous permettez qu'&agrave; un tel attribut plusieurs noms d'entit&eacute;s puissent &ecirc;tre affect&eacute;s. Pour le faire, s&eacute;parez plusieurs affectations par des espaces.</p>



<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><img src="../../src/xml10.gif" width="30" height="30" border="0" alt="XML1.0"><img src="../../src/msie5.gif" width="30" height="30" border="0" alt="msie5.0">&nbsp;<a class="an" name="valeur_nom">Attributs avec valeur de nom</a></h2>

<p>De tels attributs attendent comme valeur un nom qui cependant, &agrave; la diff&eacute;rence des <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#valeur_identification"><b>attributs avec une valeur d'identification</b></a> ne doivent pas &ecirc;tre uniques pour tout le document. Le nom ne peut pas contenir d'espace et doit commencer par une lettre, un chiffre ou l'un des signes <code>.</code> (point), <code>-</code> (trait d'union), <code>_</code> (tiret de soulignement) ou bien <code>:</code> (deux points).</p>

<h3 class="xmp">Exemple de DTD <var>jours_feries.dtd</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;!ELEMENT jours_feries (jour_ferie)*&gt;
&lt;!ELEMENT jour_ferie EMPTY&gt;
&lt;!ATTLIST jour_ferie
   date            NMTOKEN              #REQUIRED
   occasion         CDATA                #REQUIRED
&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple, une liste d'attributs avec deux attributs <code>date</code> et <code>occasion</code> ont &eacute;t&eacute; d&eacute;finis pour un &eacute;l&eacute;ment <code>jour_ferie</code>. L'attribut <code>date</code> a quant &agrave; lui une valeur de nom. C'est ce qu'on obtient par le mot-cl&eacute; <code>NMTOKEN</code>.</p>

<h3 class="xmp">Exemple d'une application valide:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/jours_feries.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (un navigateur XML affiche par exemple la structure de donn&eacute;es)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt;
&lt;!DOCTYPE jours_feries SYSTEM &quot;jours_feries.dtd&quot;&gt;
&lt;jours_feries&gt;
&lt;jour_ferie date=&quot;6.01&quot; occasion=&quot;�piphanie&quot; /&gt;
&lt;jour_ferie date=&quot;1.05&quot; occasion=&quot;F�te du travail&quot; /&gt;
&lt;jour_ferie date=&quot;25.12&quot; occasion=&quot;No&euml;l&quot; /&gt;
&lt;/jours_feries&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>L'exemples d&eacute;finit trois jours f&eacute;ri&eacute;s avec la date et l'occasion. Les valeurs des attributs <code>date</code> correspondent tout &agrave; fait aux r&egrave;gles permises pour le type <code>NMTOKEN</code>. Dans la pratique on utilise aussi volontiers ce type d'attribut pour travailler avec des valeurs num&eacute;riques ID &eacute;tant donn&eacute; que les attributs avec valeur d'identification ne tol&egrave;rent aucun chiffre au d&eacute;but de l'affectation de valeur.</p>

<h3 class="inf">Attention:</h3>

<p>En plus de <code>NMTOKEN</code> existe encore pour la d&eacute;finition d'attributs la forme plurielle  <code>NMTOKENS</code>. Gr&acirc;ce &agrave; elle, vous permettez qu'&agrave; un tel attribut plusieurs noms puissent &ecirc;tre affect&eacute;s. Pour le faire, s&eacute;parez plusieurs affectations par des espaces.</p>



<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><a class="an" name="sans_valeur">Attributs sans attribution de valeur</a></h2>

<p>Vous connaissez probablement en HTML des constructions telles que <code>&lt;hr noshade&gt;</code> ou bien <code>&lt;td nowrap&gt;</code>. Donc des attributs autonomes sans affectation de valeur. Ce genre d'attributs n'existe pas dans la syntaxe XML. XML pr&eacute;voit qu'&agrave; chaque attribut une valeur soit affect&eacute;e. Chaque attribut doit recevoir lors de la d&eacute;finition au moins le type de contenu ind&eacute;fini <code>CDATA</code>. &Eacute;tant donn&eacute; que des attributs tels que <code>noshade</code> ne sont ni plus ni moins qu'une abr&eacute;viation pour quelque chose comme <code>noshade=&quot;yes&quot;</code>, il est recommand&eacute; pour la d&eacute;finition de tels attributs de travailler avec des <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#valeur_au_choix"><b>attributs avec des valeurs au choix invariables</b></a>.</p>






<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>
<h2 class="Sh2"><img src="../../src/xml10.gif" width="30" height="30" border="0" alt="XML1.0"><img src="../../src/msie5.gif" width="30" height="30" border="0" alt="msie5.0">&nbsp;<a class="an" name="exemple_personne">Exemple li&eacute; au contexte: Description de personne</a></h2>

<p>Les personnes ont de nombreuses propri&eacute;t&eacute;s et c'est pourquoi une description de personne est le cas r&ecirc;v&eacute; d'application typique pour la mise en &#339;uvre d'attributs. Toutefois, lors de la transcription en XML, vous devez tenir compte des r&eacute;flexions d&eacute;velopp&eacute;es dans la partie sur les <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#generalites"><b>g&eacute;n&eacute;ralit&eacute;s sur les attributs</b></a>.</p>

<p>L'exemple suivant montre un concept de donn&eacute;es pour lequel toutes les donn&eacute;es utiles sont sauvegard&eacute;es dans des attributs.</p>

<h3 class="xmp">Exemple de DTD <var>fichier_personnel.dtd</var>:</h3>


<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;!ELEMENT fichier_personnel          (personne)*&gt;
&lt;!ELEMENT personne          (bio,socio)&gt;
&lt;!ATTLIST personne
   nom                   CDATA #REQUIRED
&gt;
&lt;!ELEMENT bio             (yeux,cheveux,peau,poids,groupe_sanguin)&gt;
&lt;!ELEMENT yeux           EMPTY&gt;
&lt;!ATTLIST yeux
   couleur                  CDATA #REQUIRED
&gt;
&lt;!ELEMENT cheveux            EMPTY&gt;
&lt;!ATTLIST cheveux
   couleur                  CDATA #REQUIRED
   remarque              CDATA #IMPLIED
&gt;
&lt;!ELEMENT peau            EMPTY&gt;
&lt;!ATTLIST peau
   couleur                  CDATA #REQUIRED
   remarque              CDATA #IMPLIED
&gt;
&lt;!ELEMENT poids         EMPTY&gt;
&lt;!ATTLIST poids
   kg                     CDATA #REQUIRED
&gt;
&lt;!ELEMENT groupe_sanguin      EMPTY&gt;
&lt;!ATTLIST groupe_sanguin
   type                    (A|B|0|AB) #REQUIRED
&gt;
&lt;!ELEMENT socio           (langue,etat_civil,passeport)&gt;
&lt;!ELEMENT langue         EMPTY&gt;
&lt;!ATTLIST langue
   lang                   CDATA #REQUIRED
   abr                   (de|en|fr|es|pt|it) #IMPLIED
&gt;
&lt;!ELEMENT etat_civil           EMPTY&gt;
&lt;!ATTLIST etat_civil
   type                    (celibataire|marie|veuf) #REQUIRED
&gt;
&lt;!ELEMENT passeport        EMPTY&gt;
&lt;!ATTLIST passeport
   nr                     NMTOKEN #REQUIRED
&gt;
</pre></td></tr></table>


<h3 class="xmp">Exemple d'une application valide</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/fichier_personnel.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (un navigateur XML affiche par exemple la structure de donn&eacute;es)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot; ?&gt;
&lt;!DOCTYPE fichier_personnel SYSTEM &quot;fichier_personnel.dtd&quot;&gt;
&lt;fichier_personnel&gt;
&lt;personne nom=&quot;Prosper T&#234;tedeuf&quot;&gt;
  &lt;bio&gt;
    &lt;yeux couleur=&quot;bleugris&quot; /&gt;
    &lt;cheveux couleur=&quot;blonds&quot; remarque=&quot;parfois teints&quot; /&gt;
    &lt;peau couleur=&quot;blanche&quot; /&gt;
    &lt;poids kg=&quot;74&quot; /&gt;
    &lt;groupe_sanguin type=&quot;A&quot; /&gt;
  &lt;/bio&gt;
  &lt;socio&gt;
    &lt;langue lang=&quot;fran&#231;aise&quot; abr=&quot;fr&quot; /&gt;
    &lt;etat_civil type=&quot;marie&quot; /&gt;
    &lt;passeport no=&quot;38385409398&quot; /&gt;
  &lt;/socio&gt;
&lt;/personne&gt;
&lt;/fichier_personnel&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>L'exemple de DTD d&eacute;finit un type d'&eacute;l&eacute;ment document <code>fichier_personnel</code> qui peut contenir autant d'&eacute;l&eacute;ments du type <code>personne</code> qu'il est souhait&eacute;. Ce type d'&eacute;l&eacute;ments est constitu&eacute; de son c&ocirc;t&eacute;  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="elements.htm#contenu_element"><b> avec un contenu d'&eacute;l&eacute;ments</b></a>. Par ailleurs le type d'&eacute;l&eacute;ment <code>personne</code> re&ccedil;oit toujours l'attribut indispensable <code>nom</code>, dans lequel le nom de la personne doit &ecirc;tre not&eacute;. Les deux types d'&eacute;l&eacute;ments <code>bio</code> et <code>socio</code>, qui repr&eacute;sentent le contenu de l'&eacute;l&eacute;ment <code>personne</code>  sont eux-m&ecirc;mes des types d'&eacute;l&eacute;ments avec un contenu d'&eacute;l&eacute;ments. Le type d'&eacute;l&eacute;ment  <code>bio</code> est constitu&eacute; par la suite fixe de types d'&eacute;l&eacute;ments <code>yeux,cheveux,peau,poids,groupe_sanguin</code>, et le type d'&eacute;l&eacute;ment <code>socio</code> par la suite fixe de types d'&eacute;l&eacute;ments <code>langue,etat_civil,passeport</code>. De cette mani&egrave;re, on obtient un enregistrement structur&eacute; <code>personne</code>.</p>

<p>Les types d'&eacute;l&eacute;ments subordonn&eacute;s sont tous d&eacute;finis sans exception comme des  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="elements.htm#sans_contenu"><b>&eacute;l&eacute;ments sans contenu</b></a> gr&acirc;ce au mot-cl&eacute; <code>EMPTY</code>. Cependant des attributs sont d&eacute;finis pour tous ces types d'&eacute;l&eacute;ments dans lesquels, dans l'application, les donn&eacute;es peuvent &ecirc;tre sauvegard&eacute;es. La plupart de ces attributs sont d&eacute;finis comme des attributs indispensables &agrave; l'aide du mot cl&eacute; <code>REQUIRED</code>, quelques uns comme attributs facultatifs avec <code>IMPLIED</code> (voir <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#obligatoires_facultatifs"><b>attributs obligatoires et facultatifs</b></a>).</p>

<p>Dans l'application en exemple on reconna&icirc;t la notation typique de rep&egrave;res sans rep&egrave;res de fermeture (sur la notation de ces &eacute;l&eacute;ments, voir aussi la partie sur les  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../regles/valattrrepere.htm#repere_attribut_valeur"><b>rep&egrave;res, attributs et affectations de valeur</b></a>). Le fichier d'exemple <i>fichier_personnel.xml</i> contient dans l'exemple exactement un enregistrement <code>personne</code>. Le fichier pourrait cependant d'apr&egrave;s la d&eacute;finition DTD contenir le nombre d'enregistrements que vous souhaitez, avec toutefois l'obligation pour tous les enregistrements d'adopter la m&ecirc;me construction d'&eacute;l&eacute;ment.</p>





<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a>
</td></tr>
<tr><td bgcolor="#EEEEEE" class="doc" align="right"><a href="entites.htm"><img src="../../src/suivant.gif" width="10" height="10" border="0" hspace="10" alt="page suivante"></a></td>
<td bgcolor="#FFFFFF"><img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="entites.htm"><b>Entit&eacute;s pour blocs de texte et transcriptions</b></a>
</td></tr>
<tr>
<td bgcolor="#EEEEEE" class="doc" align="right"><a href="elements.htm"><img src="../../src/precedent.gif" width="10" height="10" border="0" hspace="10" alt="page pr&eacute;c&eacute;dente"></a></td>
<td bgcolor="#FFFFFF" width="100%"><img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="elements.htm"><b>&Eacute;l&eacute;ments et r&egrave;gles d'imbrication</b></a>
</td>
</tr>
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;</td></tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="bottom"><img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../../index.htm"><b>SELFHTML</b></a>/<a href="../../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="../index.htm"><b>XML/DTD</b></a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>D&eacute;finitions de type de document (DTD)</b></a></td>
</tr>
</table>

<p>&copy; 2001 Stefan M&uuml;nz / &copy; 2003 Traduction <img src="../../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:13405@free.fr">Serge Fran&ccedil;ois, 13405@free.fr</a><br><img src="../../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:selfhtml@selfhtml.com.fr">selfhtml@selfhtml.com.fr</a></p>



</body>
</html>
