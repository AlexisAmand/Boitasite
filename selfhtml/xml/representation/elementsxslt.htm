<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>SELFHTML: XML/DTD / Repr&eacute;sentation de donn&eacute;es XML / &Eacute;l&eacute;ments XSLT</title>
<link rel="stylesheet" type="text/css" href="../../src/selfhtml.css">
<meta name="description"    content="Quels sont les &eacute;l&eacute;ments XSLT  - explication des diff&eacute;rents &eacute;l&eacute;ments au vu d'exemples.">
<meta name="keywords"       content="SELFHTML, XML, XSLT, Transformation, &eacute;l&eacute;ments XSLT, transformation">
<meta name="author"         content="Stefan M&uuml;nz, selfhtml@teamone.de">
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
<meta name="DC.Publisher"   content="Serge Fran&ccedil;ois, selfhtml@selfhtml.com.fr">
<meta name="DC.Date"        content="2003-01-27T08:00+00:00">
<meta name="DC.Identifier"  content="http://selfhtml.selfhtml.com.fr/xml/representation/elementsxslt.htm">
<meta name="DC.Language"    content="fr">
<meta name="DC.Rights"      content="../../editorial/copyright.htm">
<meta name="DC.Date.Create" content="2003-01-27T08:00+00:00">
<meta name="SELF.Version"   content="1">
<meta name="SELF.Pagetype"  content="Information">
<meta name="SELF.Path"      content="SELFHTML == ../../index.htm // XML/DTD == ../index.htm // Repr&eacute;sentation de donn&eacute;es XML == index.htm">
<!-- Matomo -->
<script type="text/javascript">
  var _paq = window._paq = window._paq || [];
  /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="//matomo.boitasite.com/";
    _paq.push(['setTrackerUrl', u+'matomo.php']);
    _paq.push(['setSiteId', '1']);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
<!-- End Matomo Code -->
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#AA5522" vlink="#772200" alink="#000000">

<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="top"><img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../../index.htm"><b>SELFHTML</b></a>/<a href="../../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="../index.htm"><b>XML/DTD</b></a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>Repr&eacute;sentation de donn&eacute;es XML</b></a></td>
</tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#EEEEEE" class="doc" width="110"><img src="../../src/logo.gif" width="106" height="109" border="0" alt="SELFHTML"></td>
<td bgcolor="#EEEEEE" class="doc" valign="bottom" width="100%"><h2>&Eacute;l&eacute;ments XSLT</h2>
<tr>
<td bgcolor="#EEEEEE" class="doc" valign="top" align="center">
<img src="../../src/docx.gif" width="30" height="20" vspace="6" border="0" alt="Page d'information: vue d'ensemble">
</td>
<td bgcolor="#FFFFFF" valign="top" nowrap>
<p>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#remarques"><b>Remarques sur les &eacute;l&eacute;ments XSLT</b></a><br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#apply_imports"><b>xsl:apply-imports</b></a> (appliquer des feuilles de style import&eacute;es)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#apply_templates"><b>xsl:apply-templates</b></a> (appliquer les mod&egrave;les subordonn&eacute;s)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#attribute"><b>xsl:attribute</b></a> (cr&eacute;er un attribut dans l'arbre de transformation)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#attribute_set"><b>xsl:attribute-set</b></a> (cr&eacute;er plusieurs attributs dans l'arbre de transformation)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#call_template"><b>xsl:call-template</b></a> (appeler un mod&egrave;le)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#choose"><b>xsl:choose</b></a> (faire un choix)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#comment"><b>xsl:comment</b></a> (mettre un commentaire)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#copy"><b>xsl:copy</b></a> (copier un &eacute;l&eacute;ment dans l'arbre de transformation)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#copy_of"><b>xsl:copy-of</b></a> (copier un ensemble de n&#339;uds dans l'arbre de transformation)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#decimal_format"><b>xsl:decimal-format</b></a> (format d&eacute;cimal)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#element"><b>xsl:element</b></a> (cr&eacute;er un &eacute;l&eacute;ment)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#fallback"><b>xsl:fallback</b></a> (instruction d'ex&eacute;cution en alternative)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#for_each"><b>xsl:for-each</b></a> (r&eacute;p&eacute;ter pour chacun des &eacute;l&eacute;ments d'une quantit&eacute;)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#if"><b>xsl:if</b></a> (condition si)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#import"><b>xsl:import</b></a> (importer des feuilles de style)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#key"><b>xsl:key</b></a> (cl&eacute; pour le choix d'&eacute;l&eacute;ments)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#message"><b>xsl:message</b></a> (sortir un message lors de la transformation)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#namespace_alias"><b>xsl:namespace-alias</b></a> (transformer une feuille de style en une autre feuille de style)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#number"><b>xsl:number</b></a> (num&eacute;rotation continue)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#otherwise"><b>xsl:otherwise</b></a> (instruction autrement)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#output"><b>xsl:output</b></a> (contr&ocirc;ler la cr&eacute;ation de l'arbre de transformation)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#param"><b>xsl:param</b></a> (d&eacute;finir un param&egrave;tre)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#preserve_space"><b>xsl:preserve-space</b></a> (conserver les espaces)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#processing_instruction"><b>xsl:processing-instruction</b></a> (g&eacute;n&eacute;rer un code de feuilles de style)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#sort"><b>xsl:sort</b></a> (trier les &eacute;l&eacute;ments d'apr&egrave;s leur contenu)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#strip_space"><b>xsl:strip-space</b></a> (contr&ocirc;ler le traitement des espaces)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> (&eacute;l&eacute;ment racine de la feuille de style)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a> (d&eacute;finir un mod&egrave;le pour l'arbre de transformation)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#text"><b>xsl:text</b></a> (sortir un contenu en caract&egrave;res)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#transform"><b>xsl:transform</b></a> (&eacute;l&eacute;ment racine de la feuille de style)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#value_of"><b>xsl:value-of</b></a> (sortir la valeur)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#variable"><b>xsl:variable</b></a> (d&eacute;finir une variable)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#when"><b>xsl:when</b></a> (condition &agrave; l'int&eacute;rieur d'un choix)<br>
<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#with_param"><b>xsl:with-param</b></a> (affecter une valeur &agrave; un param&egrave;tre)<br>


</p>
</td>
</tr><tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;<a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;</td></tr>
</table>



<h2 class="Sh2"><a class="an" name="remarques">Remarques sur les &eacute;l&eacute;ments XSLT</a></h2>

<p>L'&eacute;l&eacute;ment <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> repr&eacute;sente l'introduction logique d'un fichier XSL. Le plus important de ses &eacute;l&eacute;ments est l'&eacute;l&eacute;ment <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a> &agrave; l'aide duquel l'arbre de donn&eacute;es XML est transcrit dans un arbre de transformation d'un autre langage conforme &agrave; XML (par exemple aussi HTML).</p>

<p>Lors de la description des &eacute;l&eacute;ments, il est souvent question de n&#339;uds et de types de n&#339;uds. Ces termes trouvent un d&eacute;but d'explication dans la partie sur les <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../regles/arborescence.htm#noeuds_jeux_noeuds"><b>N&#339;uds et jeux de n&#339;uds dans l'arborescence </b></a>. Des explications plus approfondies &agrave; ce sujet se trouvent dans la partie sur la  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm"><b>syntaxe XPath</b></a>. Car XPath repr&eacute;sente un langage compl&eacute;mentaire ou d'aide dans une feuille de style  XSLT pour entre autres adresser pr&eacute;cis&eacute;ment les parties constitutives d'un document XML. XPath a une sp&eacute;cification distincte comme XSLT.</p>

<p>Ne perdez pas de vue, en ce qui concerne l'Explorer Internet les <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="exemplesxslt.htm#remarques"><b>Remarques sur les exemples</b></a>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="apply_imports">xsl:apply-imports (appliquer des feuilles de style import&eacute;es)</a></h2>

<p>Applique &agrave; l'int&eacute;rieur d'un mod&egrave;le d&eacute;fini avec <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>  des mod&egrave;les externes d&eacute;finis qui sont import&eacute;s avec <code>xsl:import</code>.</p>

<p>N'attend aucun attribut.</p>

<p>Ne peut &ecirc;tre plac&eacute; que dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>

<h3 class="xmp">Fichier d'exemple <var>apply_imports.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/apply_imports.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>apply_imports.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/apply_imports.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>apply_imports.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;apply_imports1.xsl&quot; ?&gt;
&lt;test&gt;
&lt;image&gt;pingouin.gif&lt;/image&gt;
&lt;texte&gt;Le pingouin est la marque distinctive de Linux&lt;/texte&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>apply_imports1.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:import href=&quot;apply_imports2.xsl&quot; /&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;xsl:apply-imports/&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>apply_imports2.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;image&quot;&gt;
&lt;img&gt;&lt;xsl:attribute name=&quot;src&quot;&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/xsl:attribute&gt;&lt;/img&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;texte&quot;&gt;
&lt;p&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/p&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans le document XML <var>apply_imports.xml</var> la feuille de style <var>apply_imports1.xsl</var> est incorpor&eacute;e. L&agrave; et &agrave; l'aide de <code>&lt;xsl:import href=&quot;apply_imports2.xsl&quot;&nbsp;/&gt;</code> une deuxi&egrave;me feuille de style est incorpor&eacute;e, &agrave; savoir <var>apply_imports2.xsl</var>. Dans la deuxi&egrave;me feuille de style, figurent des d&eacute;finitions pour la transcription HTML des &eacute;l&eacute;ments <code>image</code> et <code>texte</code>. Les d&eacute;finitions correspondantes sont appliqu&eacute;es dans la premi&egrave;re feuille de style &agrave; l'endroit o&ugrave;  <code>&lt;xsl:apply-imports/&gt;</code> est not&eacute;.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="apply_templates">xsl:apply-templates (appliquer les mod&egrave;les subordonn&eacute;s)</a></h2>

<p>Applique &agrave; l'int&eacute;rieur d'un mod&egrave;le d&eacute;fini avec <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a> d'autres mod&egrave;les qui sont le cas &eacute;ch&eacute;ant d&eacute;finis avec <code>xsl:template</code>. De cette mani&egrave;re, les d&eacute;pendances et l'ordre lors de l'emploi de mod&egrave;les peuvent &ecirc;tre contr&ocirc;l&eacute;s.</p>

<p>a les attributs suivants:</p>

<table>
<tr>
<td valign="top"><code>select=</code></td>
<td valign="top"><i>(facultatif)</i> choisit un mod&egrave;le qui doit &ecirc;tre appliqu&eacute;. Le jeu de n&#339;uds d&eacute;sir&eacute; est mentionn&eacute; ou bien un chemin d'apr&egrave;s la  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm"><b>syntaxe XPath</b></a>. Quand une d&eacute;finition <code>xsl:template</code> existe pour cet &eacute;l&eacute;ment, elle est appliqu&eacute;e. Si l'attribut <code>select</code> manque, toutes les d&eacute;finitions <code>xsl:template</code> de l'&eacute;chelon imm&eacute;diatement inf&eacute;rieur sont appliqu&eacute;es.</td>
</tr>
<tr>
<td valign="top"><code>mode=</code></td>
<td valign="top"><i>(facultatif)</i> Ne choisit le mod&egrave;le mentionn&eacute; avec <code>select=</code> que lorsqu'il a le mode mentionn&eacute;. Pour cela il faut que lors de la d&eacute;finition de <code>xsl:template</code> un nom qui concorde ait &eacute;t&eacute; attribu&eacute; pour le mode avec <code>mode=</code>.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; &agrave; l'int&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>apply_templates.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/apply_templates.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>apply_templates.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/apply_templates.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>apply_templates.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;apply_templates.xsl&quot; ?&gt;
&lt;test&gt;
&lt;texte&gt;
Ce que tu peux obtenir le &lt;moment&gt;lundi&lt;/moment&gt; ne le repousse pas au &lt;moment&gt;mardi&lt;/moment&gt;.
&lt;/texte&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>apply_templates.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;texte&quot;&gt;
 &lt;p style=&quot;font-family:Tahoma; font-size:14pt&quot;&gt;
 &lt;xsl:apply-templates /&gt;
 &lt;/p&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;moment&quot;&gt;
 &lt;i style=&quot;color:red&quot;&gt;
  &lt;xsl:value-of select=&quot;.&quot; /&gt;
 &lt;/i&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple de feuilles de style, l'instruction <code>&lt;xsl:apply-templates /&gt;</code> (sans attribut) est plac&eacute;e deux fois. La premi&egrave;re fois, elle est not&eacute;e dans la d&eacute;finition de mod&egrave;le de la racine du document. L&agrave; l'instruction figure dans le passage visible du code HTML &agrave; cr&eacute;er. &agrave; savoir entre <code>&lt;body&gt;</code> et <code>&lt;/body&gt;</code>. &Eacute;tant donn&eacute; qu'aucun attribut <code>select</code> n'est mentionn&eacute;, elle a pour effet qu'&agrave; l'endroit correspondant du code HTML, les mod&egrave;les pour l'&eacute;chelon pour les &eacute;chelons imm&eacute;diatement inf&eacute;rieurs sont appliqu&eacute;s. Dans la structure XML de l'exemple ce sont les &eacute;l&eacute;ments du type <code>texte</code>. Pour ces &eacute;l&eacute;ments, un mod&egrave;le est d&eacute;fini avec <code>&lt;xsl:template&nbsp;match=&quot;texte&quot;&gt;</code>. Les &eacute;l&eacute;ments de ce type seront en HTML, inclus dans un paragraphe <code>&lt;p&gt;...&lt;/p&gt;</code>qui est format&eacute; avec les CSS. Pour le contenu du paragraphe l'avis s'applique pourtant une nouvelle fois: faire attention aux mod&egrave;les subordonn&eacute;s! C'est pourquoi l'instruction <code>&lt;xsl:apply-templates&nbsp;/&gt;</code> est not&eacute;e &agrave; nouveau &agrave; l'int&eacute;rieur du paragraphe de texte. Comme &eacute;l&eacute;ment subordonn&eacute; de <code>texte</code> dans l'exemple, l'&eacute;l&eacute;ment <code>moment</code> peut &ecirc;tre plac&eacute;. Pour cet &eacute;l&eacute;ment &eacute;galement un mod&egrave;le a &eacute;t&eacute; d&eacute;fini avec <code>&lt;xsl:template&nbsp;match=&quot;moment&quot;&gt;</code>. Du texte plac&eacute; dans ces &eacute;l&eacute;ments sera, en HTML, repr&eacute;sent&eacute; en rouge et en italique.<br>
��Etant donn&eacute; qu'&agrave; l'int&eacute;rieur de l'&eacute;l&eacute;ment <code>moment</code> il n'y a plus d'autres mod&egrave;les subordonn&eacute;s &agrave; prendre en consid&eacute;ration, il ne faut plus consid&eacute;rer que le que le contenu respectif de l'&eacute;l&eacute;ment. C'est ce qui est r&eacute;alis&eacute; gr&acirc;ce &agrave; l'instruction <code>&lt;xsl:value-of select=&quot;.&quot;&nbsp;/&gt;</code>  (voir aussi <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#value_of"><b>xsl:value-of</b></a>).</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="attribute">xsl:attribute (cr&eacute;er un attribut dans l'arbre de transformation)</a></h2>

<p>Peut poser un attribut dans l'arbre de transformation et lui affecter une valeur, donc par exemple dans l'&eacute;l&eacute;ment HTML <code>div</code> poser l'attribut <code>align</code> et lui affecter la valeur <code>center</code>.</p>

<p>a les attributs suivants:</p>

<table>
<tr>
<td valign="top"><code>name=</code></td>
<td valign="top"><i>(obligatoire)</i> Mentionne le nom de l'attribut par exemple <code>align</code>.</td>
</tr>
<tr>
<td valign="top"><code>namespace=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne l'URI de l'espace de nommage dont provient l'attribut.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; &agrave; l'int&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a> ou bien &agrave; l'int&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#attribute_set"><b>xsl:attribute-set</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>attributes.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/attributs.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>attributs.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/attributs.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>attributs.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;attributs.xsl&quot; ?&gt;
&lt;test&gt;
&lt;texte  alignement=&quot;gauche&quot;&gt;
Ceci est du texte align� � gauche
&lt;/texte&gt;
&lt;texte alignement=&quot;centre&quot;&gt;
Ceci est du texte centr�
&lt;/texte&gt;
&lt;texte alignement=&quot;droite&quot;&gt;
Ceci est du texte align� � droite
&lt;/texte&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>attributs.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;texte&quot;&gt;
 &lt;p&gt;
 &lt;xsl:choose&gt;
  &lt;xsl:when test=&quot;@alignement='centre'&quot;&gt;
   &lt;xsl:attribute name=&quot;align&quot;&gt;center&lt;/xsl:attribute&gt;
  &lt;/xsl:when&gt;
  &lt;xsl:when test=&quot;@alignement='droite'&quot;&gt;
   &lt;xsl:attribute name=&quot;align&quot;&gt;right&lt;/xsl:attribute&gt;
  &lt;/xsl:when&gt;
  &lt;xsl:otherwise&gt;
   &lt;xsl:attribute name=&quot;align&quot;&gt;left&lt;/xsl:attribute&gt;
  &lt;/xsl:otherwise&gt;
 &lt;/xsl:choose&gt;
 &lt;xsl:value-of select=&quot;.&quot; /&gt;
 &lt;/p&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple, il y a un &eacute;l&eacute;ment XML <code>texte</code> avec l'attribut <code>alignement</code>, qui peut prendre les valeurs <code>gauche</code>, <code>droite</code> et <code>centre</code>  (d'apr&egrave;s la DTD non mentionn&eacute;s dans l'exemple). Dans les donn&eacute;es XML trois &eacute;l&eacute;ment du type <code>texte</code> sont not&eacute;s, &agrave; chaque fois avec une valeur diff&eacute;rente pour <code>alignement</code>. Dans la feuille de style de l'exemple, un mod&egrave;le est d&eacute;fini avec <code>&lt;xsl:template&nbsp;match=&quot;texte&quot;&gt;</code> pour l'&eacute;l&eacute;ment <code>texte</code>. Le mod&egrave;le a pour effet que les &eacute;l&eacute;ments du type <code>texte</code> seront transcrits en &eacute;l&eacute;ments HTML du type <code>p</code>. En le faisant, il faut pourtant &eacute;galement prendre en compte l'alignement du texte. Pour permettre de d&eacute;cider si, dans l'&eacute;l&eacute;ment <code>p</code>, l'attribut <code>align</code> doit recevoir la valeur <code>center</code>, <code>right</code> ou <code>left</code>, il est recherch&eacute; par des instructions <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#choose"><b>xsl:choose</b></a>, <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#when"><b>xsl:when</b></a> et <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#otherwise"><b>xsl:otherwise</b></a> si l'&eacute;l&eacute;ment &agrave; transcrire <code>texte</code> des donn&eacute;es XML, a pour l'attribut <code>alignement</code> la valeur <code>centre</code>, <code>droite</code> ou <code>gauche</code>. Sous le module de requ&ecirc;te le contenu de l'&eacute;l&eacute;ment XML <code>texte</code> est finalement transcrit dans le contenu de l'&eacute;l&eacute;ment HTML <code>p</code> gr&acirc;ce &agrave; l'instruction <code>&lt;xsl:value-of&nbsp;select=&quot;.&quot;&nbsp;/&gt;</code>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="attribute_set">xsl:attribute-set (cr&eacute;er plusieurs attributs dans l'arbre de transformation)</a></h2>

<p>d&eacute;finit un ou plusieurs attributs pour l'arbre de transformation et cela s&eacute;par&eacute;ment. Ceci est particuli&egrave;rement indiqu&eacute; pour d&eacute;finir comme blocs de texte des cha&icirc;nes d'attributs utilis&eacute;es fr&eacute;quemment comme <code>border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;</code>, ou bien pour tenir &agrave; disposition des caract&eacute;ristiques d'&eacute;l&eacute;ments en alternative par diff&eacute;rents blocs de texte d'attributs.</p>

<p>a les attributs suivants:</p>

<table>
<tr>
<td valign="top"><code>name=</code></td>
<td valign="top"><i>(obligatoire)</i> affecte un nom pour le jeu d'attributs. Sous ce nom, le jeu d'attributs peut ensuite &ecirc;tre utilis&eacute;.</td>
</tr>
<tr>
<td valign="top"><code>use-attribute-sets=</code></td>
<td valign="top"><i>(facultatif)</i> incorpore d'autres jeux d'attributs dans le jeu d'attributs actuel. Un ou plusieurs noms d'autres jeux d'attributs sont &agrave; mentionner. Plusieurs noms sont s&eacute;par&eacute;s par des espaces.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; &agrave; l'int&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> et doit &ecirc;tre not&eacute; &agrave; l'ext&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>. Peut &ecirc;tre employ&eacute; &agrave; l'int&eacute;rieur d'un mod&egrave;le par <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#element"><b>xsl:element</b></a> ou <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#copy"><b>xsl:copy</b></a>, par leur attribut <code>use-attribute-sets</code>.</p>


<h3 class="xmp">Fichier d'exemple <var>attribute_set.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/attribute_set.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>attribute_set.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/attribute_set.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>attribute_set.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;attribute_set.xsl&quot; ?&gt;
&lt;test&gt;
 &lt;element&gt;
  &lt;terme&gt;
   HTML
  &lt;/terme&gt;
  &lt;definition&gt;
   abr�viation pour 'How To Make Love'
  &lt;/definition&gt;
 &lt;/element&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>attribute_set.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:attribute-set name=&quot;visible&quot;&gt;
  &lt;xsl:attribute name=&quot;border&quot;&gt;1&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name=&quot;cellpadding&quot;&gt;3&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name=&quot;cellspacing&quot;&gt;1&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;

&lt;xsl:attribute-set name=&quot;invisible&quot;&gt;
  &lt;xsl:attribute name=&quot;border&quot;&gt;0&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name=&quot;cellpadding&quot;&gt;3&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name=&quot;cellspacing&quot;&gt;1&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;xsl:element name=&quot;table&quot; use-attribute-sets=&quot;visible&quot;&gt;
 &lt;xsl:for-each select=&quot;test/element&quot;&gt;
 &lt;tr&gt;
  &lt;td valign=&quot;top&quot;&gt;&lt;b&gt;&lt;xsl:value-of select=&quot;terme&quot; /&gt;&lt;/b&gt;&lt;/td&gt;
  &lt;td valign=&quot;top&quot;&gt;&lt;xsl:value-of select=&quot;definition&quot; /&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/xsl:for-each&gt;
 &lt;/xsl:element&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>L'exemple d&eacute;finit un glossaire. Les donn&eacute;es contiennent un &eacute;l&eacute;ment du glossaire. Dans la feuille de style de l'exemple le glossaire est transcrit en un tableau HTML. Au d&eacute;but de l'extrait d'exemple et en dehors des d&eacute;finitions de mod&egrave;les, deux jeux d'attributs sont d&eacute;finis avec l'instruction <code>attribute-set</code>, l'un est nomm&eacute; <code>visible</code>, et l'autre est nomm&eacute; <code>invisible</code>. Entre le rep&egrave;re d'ouverture <code>&lt;xsl:attribute-set&gt;</code> et son pendant <code>&lt;/xsl:attribute-set&gt;</code> des attributs sont d&eacute;finis &agrave; l'aide de <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#attribute"><b>xsl:attribute</b></a>; ils pourront &ecirc;tre employ&eacute;s plus tard dans les d&eacute;finitions de mod&egrave;les. Dans l'exemple il s'agit d'attributs qui doivent trouver une utilisation plus tard dans l'&eacute;l&eacute;ment <code>table</code>. Les deux jeux d'attributs d&eacute;finissent les attributs de telle fa&ccedil;on qu'ils rendent possible pour l'un, la d&eacute;finition d'un tableau avec quadrillage et pour l'autre d'un tableau sans quadrillage.<br>
&Agrave; l'int&eacute;rieur de la d&eacute;finition de mod&egrave;le dans laquelle le tableau est cr&eacute;&eacute;, l'&eacute;l&eacute;ment <code>table</code> est cr&eacute;&eacute; avec l'instruction
<code>&lt;xsl:element name=&quot;table&quot; use-attribute-sets=&quot;visible&quot;&gt;</code>, cet &eacute;l&eacute;ment aura les attributs qui ont &eacute;t&eacute; d&eacute;finis dans le jeu d'attributs nomm&eacute; <code>visible</code>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="call_template">xsl:call-template (appeler un mod&egrave;le)</a></h2>

<p>Appelle un autre mod&egrave;le par son nom. Peut &eacute;galement renvoyer des valeurs de param&egrave;tres au mod&egrave;le appel&eacute;.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>name=</code></td>
<td valign="top"><i>(obligatoire)</i> le nom du mod&egrave;le &agrave; appeler qui doit &ecirc;tre d&eacute;fini avec <code>&lt;xsl:template&nbsp;name=&quot;...&quot;&nbsp;[...]&gt;</code>.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; &agrave; l'int&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>. peut &ecirc;tre not&eacute; sans contenu ou bien avec contenu et rep&egrave;re de fermeture. Sont permis comme contenu des &eacute;l&eacute;ments du type <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#with_param"><b>xsl:with-param</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>call_template.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/call_template.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>call_template.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/call_template.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>call_template.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;call_template.xsl&quot; ?&gt;
&lt;test&gt;
&lt;contact mail=&quot;est@aminet.net&quot;&gt;Estelle Aminet&lt;/contact&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>call_template.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template name=&quot;etiquette&quot;&gt;
 &lt;xsl:text&gt;, Courriel: &lt;/xsl:text&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;contact&quot;&gt;
 &lt;div&gt;
 &lt;xsl:value-of select=&quot;.&quot; /&gt;
 &lt;xsl:call-template name=&quot;etiquette&quot; /&gt;
 &lt;xsl:value-of select=&quot;@mail&quot; /&gt;
 &lt;/div&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>L'exemple XML contient des donn&eacute;es de contact pour lesquelles sont not&eacute;es dans l'&eacute;l&eacute;ment <code>contact</code> le nom comme contenu; cet &eacute;l&eacute;ment re&ccedil;oit comme attribut l'affectation de l'adresse &eacute;lectronique correspondante.<br>
Dans la feuille de style de l'exemple, un mod&egrave;le est d&eacute;fini et nomm&eacute; avec <code>&lt;xsl:template&nbsp;name=&quot;etiquette&quot;&gt;</code>. Dans ce mod&egrave;le un texte statique a &eacute;t&eacute; d&eacute;fini avec <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#text"><b>xsl:text</b></a>. &Agrave; l'int&eacute;rieur d'un autre mod&egrave;le d&eacute;fini avec <code>&lt;xsl:template&nbsp;match=&quot;contact&quot;&gt;</code> est not&eacute; un appel au mod&egrave;le nomm&eacute; <code>etiquette</code> et cela gr&acirc;ce &agrave; l'instruction <code>&lt;xsl:call-template&nbsp;name=&quot;etiquette&quot;&nbsp;/&gt;</code>. Dans l'exemple est ainsi cr&eacute;&eacute;e, &agrave; partir des donn&eacute;es XML <code>&lt;contact mail=&quot;est@aminet.net&quot;&gt;Estelle Aminet&lt;/contact&gt;</code>, la sortie <code>&lt;div&gt;Estelle Aminet, Courriel: est@aminet.net&lt;/div&gt;</code>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="choose">xsl:choose (faire un choix)</a></h2>

<p>Forme le cadre d'une s&eacute;rie de requ&ecirc;tes ex&eacute;cut&eacute;es avec <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#when"><b>xsl:when</b></a> et <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#text"><b>xsl:otherwise</b></a>. La s&eacute;rie peut &ecirc;tre constitu&eacute;e du nombre souhait&eacute; de requ&ecirc;tes <code>xsl:when</code> et d'une instruction finale <code>xsl:otherwise</code>. La requ&ecirc;te qui la premi&egrave;re, r&eacute;pond &agrave; la condition sera choisie.</p>

<p>n'a pas d'attributs.</p>

<p>Peut &ecirc;tre plac&eacute; &agrave; l'int&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>choose.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/choose.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>choose.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/choose.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>choose.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;choose.xsl&quot; ?&gt;
&lt;test&gt;
&lt;nombre&gt;69&lt;/nombre&gt;
&lt;nombre&gt;12345&lt;/nombre&gt;
&lt;nombre&gt;743&lt;/nombre&gt;
&lt;nombre&gt;915743&lt;/nombre&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>choose.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;h3&gt;Les nombres sont les suivants:&lt;/h3&gt;
 &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;nombre&quot;&gt;
&lt;div&gt;
&lt;xsl:value-of select=&quot;.&quot; /&gt;
&lt;xsl:variable name=&quot;valeur&quot; select=&quot;.&quot; /&gt;
 &lt;xsl:choose&gt;
  &lt;xsl:when test=&quot;$valeur &amp;lt; 10000&quot;&gt;
   &lt;xsl:text&gt; (un petit nombre)&lt;/xsl:text&gt;
  &lt;/xsl:when&gt;
  &lt;xsl:otherwise&gt;
   &lt;xsl:text&gt; (grand nombre)&lt;/xsl:text&gt;
  &lt;/xsl:otherwise&gt;
 &lt;/xsl:choose&gt;
&lt;/div&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Une s&eacute;rie de nombres sont not&eacute;es dans les donn&eacute;es XML de l'exemple et cela &agrave; chaque fois dans un &eacute;l&eacute;ment nomm&eacute; <code>nombre</code>. Dans la feuille de style de l'exemple le mod&egrave;le est d&eacute;fini avec <code>&lt;xsl:template&nbsp;match=&quot;nombre&quot;&gt;</code>; il contr&ocirc;lera la sortie HTML des nombres. La valeur du nombre est sortie avec <code>&lt;xsl:value-of&nbsp;select=&quot;.&quot;&nbsp;/&gt;</code> (voir &eacute;galement <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#value_of"><b>xsl:value-of</b></a>). Enfin une variable nomm&eacute;e <code>valeur</code> est d&eacute;finie, qui rep&egrave;re la valeur donc le contenu plac&eacute; entre <code>&lt;nombre&gt;</code> et <code>&lt;/nombre&gt;</code>, (voir &eacute;galement <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#variable"><b>xsl:variable</b></a>). Une s&eacute;rie de requ&ecirc;tes est ainsi introduite avec <code>&lt;xsl:choose&gt;</code> . Elle contient une requ&ecirc;te <code>xsl:when</code> et une instruction <code>xsl:otherwise</code>. La requ&ecirc;te <code>xsl:when</code> demande si la valeur de la variable <code>valeur</code> est plus petite que 10000. Si oui, le texte <code>(un petit nombre)</code> sera sorti &agrave; la suite du nombre d&eacute;j&agrave; sorti, dans le cas contraire, ce sera le texte <code>(un grand nombre)</code>. Pour la sortie de texte est utilis&eacute; <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#text"><b>xsl:text</b></a>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="comment">xsl:comment (mettre un commentaire)</a></h2>

<p>Inclut les sorties dans l'arbre de transformation dans des commentaires conformes &agrave; XML (&eacute;galement &agrave; HTML), de fa&ccedil;on &agrave; ce que leur contenu ne soit pas sorti.</p>

<p>n'a pas d'attributs.</p>

<p>Peut &ecirc;tre plac&eacute; &agrave; l'int&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>

<h3 class="xmp">Exemple d'un extrait d'une feuille de style:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;script language=&quot;JavaScript&quot; type=&quot;text/javascript&quot;&gt;
 &lt;xsl:comment&gt;
   alert(&quot;hello monde&quot;);
 &lt;/xsl:comment&gt;
 &lt;/script&gt;
 &lt;/head&gt;
 &lt;body&gt;
 hello monde
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans la feuille de style de l'exemple, un passage JavaScript est not&eacute; entre autres lors de la sortie HTML. Le contenu d'un tel passage doit &ecirc;tre comment&eacute; pour le rendre inaccessible aux navigateurs ne supportant pas JavaScript. Dans l'exemple cela est r&eacute;alis&eacute; &agrave; l'aide de l'instruction <code>xsl:comment</code>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="copy">xsl:copy (copier un &eacute;l&eacute;ment dans l'arbre de transformation)</a></h2>

<p>Copie un n&#339;ud actuel dans l'arbre de transformation &agrave; l'endroit o&ugrave; est not&eacute;e l'instruction. Cela est judicieux par exemple quand les donn&eacute;es XML contiennent des &eacute;l&eacute;ments pour lesquels un &eacute;l&eacute;ment du m&ecirc;me nom existe dans le langage de destination. Les rep&egrave;res d'&eacute;l&eacute;ment et le contenu PCDATA sont copi&eacute;s, mais pas les attributs, ni les &eacute;l&eacute;ments-enfants (voir &eacute;galement &agrave; ce sujet <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#copy_of"><b>xsl:copy-of</b></a>).</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>use-attribute-sets=</code></td>
<td valign="top"><i>(facultatif)</i> ins&eacute;rer dans la copie les attributs d&eacute;finis avec <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#attribute_set"><b>xsl:attribute-set</b></a>.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; &agrave; l'int&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>. Peut avoir comme contenu tout ce qui est permis &agrave; l'int&eacute;rieur de <code>xsl:template</code>.</p>


<h3 class="xmp">Fichier d'exemple <var>copy.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/copy.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>copy.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/copy.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>copy.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;copy.xsl&quot; ?&gt;
&lt;test&gt;
&lt;p&gt;Si nous estimons meilleurs, nous ne le devenons pas pour autant&lt;/p&gt;
&lt;p&gt;On ne peut poser de pont qu'entre des rives s�par�es l'une de l'autre&lt;/p&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>copy.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;h1&gt;Aphorismes&lt;/h1&gt;
 &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;p&quot;&gt;
&lt;xsl:copy&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Les donn&eacute;es XML de l'exemple sont compos&eacute;s d'aphorismes qui sont chacun inclus dans un &eacute;l&eacute;ment XML nomm&eacute; <code>p</code>. Dans la feuille de style de l'exemple, il a &eacute;t&eacute; fix&eacute; pour la d&eacute;finition du mod&egrave;le pour les &eacute;l&eacute;ments du type <code>p</code> avec l'instruction <code>&lt;xsl:copy&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/xsl:copy&gt;</code> qu'ils soient tout simplement copi&eacute;s dans l'arbre de transformation HTML. Cela se justifie &eacute;tant donn&eacute; que l'&eacute;l&eacute;ment <code>p</code> signifie quelque chose en HTML et qu'il est format&eacute; en cons&eacute;quence par le navigateur. De cette mani&egrave;re, on obtient pour ce cas le m&ecirc;me effet qui serait obtenu avec la d&eacute;finition de mod&egrave;le suivante:<br>
<code>&lt;xsl:template match=&quot;p&quot;&gt;<br>
&lt;p&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/p&gt;<br>
&lt;/xsl:template&gt;</code></p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="copy_of">xsl:copy-of (copier un ensemble de n&#339;uds dans l'arbre de transformation)</a></h2>

<p>Copie dans l'arbre de transformation un n&#339;ud actuel et tout le jeu de n&#339;uds qui en d&eacute;pend, &agrave; l'endroit o&ugrave; l'instruction est not&eacute;e. C'est judicieux par exemple pour r&eacute;p&eacute;ter &agrave; plusieurs endroits le contenu s'un &eacute;l&eacute;ment qui n'est not&eacute; qu'une fois dans les donn&eacute;es.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>select=</code></td>
<td valign="top"><i>(obligatoire)</i> choisir ce qui doit &ecirc;tre copi&eacute;. Cela peut &ecirc;tre un jeu de n&#339;uds ou un chemin d'apr&egrave;s la <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm"><b>syntaxe XPath</b></a> ou encore une variable.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; &agrave; l'int&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>. Peut avoir comme contenu tout ce qui est permis &agrave; l'int&eacute;rieur de  <code>xsl:template</code>.</p>


<h3 class="xmp">Fichier d'exemple <var>copy_of.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/copy_of.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>copy_of.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/copy_of.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>copy_of.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;copy_of.xsl&quot; ?&gt;
&lt;test&gt;
&lt;titre&gt;T�l�phone&lt;/titre&gt;
&lt;telephone&gt;&lt;nom&gt;Alexandre&lt;/nom&gt;&lt;numero&gt;0442 - 117273&lt;/numero&gt;&lt;/telephone&gt;
&lt;telephone&gt;&lt;nom&gt;Marie&lt;/nom&gt;&lt;numero&gt;0320 - 558458&lt;/numero&gt;&lt;/telephone&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>copy_of.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;table border=&quot;1&quot;&gt;&lt;xsl:apply-templates /&gt;&lt;/table&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;titre&quot;&gt;
&lt;tr&gt;&lt;th colspan=&quot;3&quot;&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;telephone&quot;&gt;
&lt;tr&gt;
&lt;td&gt;&lt;xsl:copy-of select=&quot;../titre&quot; /&gt;&lt;/td&gt;
&lt;xsl:apply-templates /&gt;
&lt;/tr&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;nom&quot;&gt;
&lt;td&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/td&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;numero&quot;&gt;
&lt;td&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/td&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>L'exemple d&eacute;finit une liste de num&eacute;ros de t&eacute;l&eacute;phone, constitu&eacute;e de noms et de num&eacute;ros de t&eacute;l&eacute;phone avec un titre qui est not&eacute; dans l'&eacute;l&eacute;ment <code>titre</code>. Lors de la cr&eacute;ation de l'arbre de transformation dans la feuille de style de l'exemple, un tableau HTML &agrave; trois colonnes est cependant cr&eacute;&eacute; &agrave; partir de la liste de t&eacute;l&eacute;phone. Dans la premi&egrave;re colonne figure &agrave; chaque fois le mot <i>T&eacute;l&eacute;phone</i>. C'est le r&eacute;sultat de cette instruction qui gr&acirc;ce &agrave;  <code>&lt;td&gt;&lt;xsl:copy-of select=&quot;../titre&quot;&nbsp;/&gt;&lt;/td&gt;</code> r&eacute;p&egrave;te le titre, qui &agrave; vrai dire n'est plac&eacute; qu'une fois, &agrave; chaque fois qu'est rencontr&eacute; l'&eacute;l&eacute;ment <code>telephone</code>. L'adressage de l'&eacute;l&eacute;ment <code>titre</code> a lieu pour ce faire d'apr&egrave;s l'<img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm#relative_pfadangaben"><b>adressage XPath avec mention de chemin relative</b></a> en partant de l'&eacute;l&eacute;ment <code>telephone</code>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="decimal_format">xsl:decimal-format (format d&eacute;cimal)</a></h2>

<p>D&eacute;finit un sch&eacute;ma d'apr&egrave;s lequel les nombres sont sortis dans l'arbre de transformation. Ce sch&eacute;ma peut &ecirc;tre appliqu&eacute; dans la fonction <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="fonctionsxpath.htm#format_number"><b>format-number()</b></a>.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>decimal-separator=</code></td>
<td valign="top"><i>(facultatif)</i> Signe qui figure entre le nombre entier et les &quot;chiffres apr&egrave;s la virgule&quot; pour s&eacute;parer les deux groupes. En Fran&ccedil;ais, c'est en principe une virgule, en Anglais un point. Le r&eacute;glage par d&eacute;faut est le point (<code>.</code>).</td>
</tr>
<tr>
<td valign="top"><code>digit=</code></td>
<td valign="top"><i>(facultatif)</i> Signe plac&eacute; comme &quot;joker&quot; pour un chiffre inconnu. Normalement c'est le signe di&egrave;se <code>#</code> (r&eacute;glage par d&eacute;faut).</td>
</tr>
<tr>
<td valign="top"><code>grouping-separator=</code></td>
<td valign="top"><i>(facultatif)</i> Signe qui s&eacute;pare un groupe de signes par exemple comme &quot;signe des milliers&quot;. En Fran&ccedil;ais, c'est en principe le point, en Anglais c'est la virgule. Le r&eacute;glage par d&eacute;faut est la virgule (<code>,</code>).</td>
</tr>
<tr>
<td valign="top"><code>infinity=</code></td>
<td valign="top"><i>(facultatif)</i> Signe ou cha&icirc;ne de caract&egrave;res qui repr&eacute;sente la valeur pour &quot;infini&quot; par exemple pour des valeurs p&eacute;riodiques apr&egrave;s la virgule. Le r&eacute;glage par d&eacute;faut est <code>Infinity</code>.</td>
</tr>
<tr>
<td valign="top"><code>minus-sign=</code></td>
<td valign="top"><i>(facultatif)</i> Signe qui pr&eacute;c&egrave;de une valeur n&eacute;gative. Normalement c'est le signe moins <code>-</code> (r&eacute;glage par d&eacute;faut).</td>
</tr>
<tr>
<td valign="top"><code>name=</code></td>
<td valign="top"><i>(facultatif)</i> Nom du sch&eacute;ma d&eacute;fini. Sous ce nom, le sch&eacute;ma peut &ecirc;tre utilis&eacute; dans la fonction <code>format-number</code>. Si aucun nom n'est donn&eacute;, les d&eacute;finitions s'appliquent globalement.</td>
</tr>
<tr>
<td valign="top"><code>NaN=</code></td>
<td valign="top"><i>(facultatif)</i> Cha&icirc;ne de caract&egrave;res qui exprime qu'une valeur n'est pas un nombre valide. Le r&eacute;glage par d&eacute;faut est <code>NaN</code> (<i>not a number</i>).</td>
</tr>
<tr>
<td valign="top"><code>pattern-separator=</code></td>
<td valign="top"><i>(facultatif)</i> Signe qui figure entre la repr&eacute;sentation de format d'un nombre positif et la repr&eacute;sentation de format d'un nombre n&eacute;gatif. Le r&eacute;glage par d&eacute;faut est le point virgule (<code>;</code>).</td>
</tr>
<tr>
<td valign="top"><code>per-mille=</code></td>
<td valign="top"><i>(facultatif)</i> Signe qui d&eacute;signe des valeurs pour-mille. Le r&eacute;glage par d&eacute;faut est <code>%O</code>.</td>
</tr>
<tr>
<td valign="top"><code>percent=</code></td>
<td valign="top"><i>(facultatif)</i> Signe qui d&eacute;signe des valeurs pour cent. Le r&eacute;glage par d&eacute;faut est le signe de pourcentage <code>%</code>.</td>
</tr>
<tr>
<td valign="top"><code>zero-digit=</code></td>
<td valign="top"><i>(facultatif)</i> Signe pour la repr&eacute;sentation de z&eacute;ros pr&eacute;c&eacute;dant un chiffre. Le r&eacute;glage par d&eacute;faut est le z&eacute;ro <code>0</code>.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; &agrave; l'int&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> et doit &ecirc;tre not&eacute; &agrave; l'ext&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>decimal_format.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/decimal_format.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>decimal_format.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/decimal_format.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>decimal_format.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;decimal_format.xsl&quot; ?&gt;
&lt;test&gt;
&lt;valeur&gt;1230348345&lt;/valeur&gt;
&lt;valeur&gt;17235807&lt;/valeur&gt;
&lt;valeur&gt;12345&lt;/valeur&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>decimal_format.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:decimal-format name=&quot;fr&quot; decimal-separator=&quot;,&quot; grouping-separator=&quot;.&quot;/&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;valeur&quot;&gt;
&lt;div&gt;&lt;xsl:value-of select=&quot;format-number(.,'#.##0,0','de')&quot;/&gt;&lt;/div&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans les donn&eacute;es XML, diff&eacute;rentes valeurs sont simplement not&eacute;es et cela dans un &eacute;l&eacute;ment nomm&eacute; <code>valeur</code>. Dans la feuille de style de l'exemple, un sch&eacute;ma pour le formatage de nombres dans l'arbre de transformation est d&eacute;fini avec <code>xsl:decimal-format</code>. Le sch&eacute;ma contient le nom <code>fr</code> et d&eacute;termine la virgule comme s&eacute;parateur pour les nombres entiers et les positions d&eacute;cimales ainsi que le point pour s&eacute;parer les groupes de milliers. Un mod&egrave;le est d&eacute;fini pour l'&eacute;l&eacute;ment du type  <code>valeur</code> avec <code>&lt;xsl:template match=&quot;valeur&quot;&gt;</code>. Chaque valeur est sortie dans un &eacute;l&eacute;ment HTML <code>div</code>. Avec l'instruction <code>&lt;xsl:value-of select=&quot;format-number(.,'#.##0,0','fr')&quot;/&gt;</code> on se r&eacute;f&egrave;re au contenu de <code>valeur</code>, et cela par l'appel de la fonction <code>format-number</code>. Celle-ci re&ccedil;oit entre parenth&egrave;ses comme premier param&egrave;tre le point <code>.</code>, ce qui figure pour l'&eacute;l&eacute;ment actuel. Le deuxi&egrave;me param&egrave;tre est une cha&icirc;ne de format et le troisi&egrave;me le nom du sch&eacute;ma qui avait &eacute;t&eacute; d&eacute;fini auparavant avec <code>xsl:decimal-format</code>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="element">xsl:element (cr&eacute;er un &eacute;l&eacute;ment)</a></h2>

<p>Cr&eacute;e un &eacute;l&eacute;ment dans un arbre de transformation. Il est &agrave; vrai dire courant de noter directement des &eacute;l&eacute;ments dans l'arbre de transformation. Par exemple, lors de l'application de diff&eacute;rents <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#attribute_set"><b>Attribut-Sets</b></a> il peut &ecirc;tre judicieux de ne pas noter les &eacute;l&eacute;ments directement dans l'arbre de transformation mais de les g&eacute;n&eacute;rer &agrave; l'aide de <code>xsl:element</code>. Un autre cas d'application est quand un arbre de transformation doit &ecirc;tre cr&eacute;&eacute; &agrave; l'aide de XSL et que le langage de destination est lui-m&ecirc;me XSL.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>name=</code></td>
<td valign="top"><i>(obligatoire)</i> Nom de l'&eacute;l&eacute;ment &agrave; g&eacute;n&eacute;rer par exemple <code>table</code> pour l'&eacute;l&eacute;ment HTML du m&ecirc;me nom</td>
</tr>
<tr>
<td valign="top"><code>namespace=</code></td>
<td valign="top"><i>(facultatif)</i> Espace de nommage auquel l'&eacute;l&eacute;ment appartient.</td>
</tr>
<tr>
<td valign="top"><code>use-attribute-sets=</code></td>
<td valign="top"><i>(facultatif)</i> jeux d'attributs d&eacute;finis devant &ecirc;tre plac&eacute;s dans le rep&egrave;re d'ouverture de l'&eacute;l&eacute;ment &agrave; cr&eacute;er.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a> .</p>


<h3 class="xmp">Fichier d'exemple <var>element.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/element.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>element.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/element.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>element.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;element.xsl&quot; ?&gt;
&lt;test&gt;
&lt;produit&gt;&lt;nom&gt;Fauteuil � bascule&lt;/nom&gt;&lt;prix&gt;99,-&lt;/prix&gt;&lt;/produit&gt;
&lt;produit&gt;&lt;nom&gt;Machine � caf�&lt;/nom&gt;&lt;prix&gt;49,95&lt;/prix&gt;&lt;/produit&gt;
&lt;produit&gt;&lt;nom&gt;Tournevis&lt;/nom&gt;&lt;prix&gt;4,95&lt;/prix&gt;&lt;/produit&gt;
&lt;produit&gt;&lt;nom&gt;Coussin&lt;/nom&gt;&lt;prix&gt;29,95&lt;/prix&gt;&lt;/produit&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>element.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:attribute-set name=&quot;gris&quot;&gt;
  &lt;xsl:attribute name=&quot;bgcolor&quot;&gt;#E0E0E0&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;
&lt;xsl:attribute-set name=&quot;jaune&quot;&gt;
  &lt;xsl:attribute name=&quot;bgcolor&quot;&gt;#FFFFD0&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;table&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/table&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;produit&quot;&gt;
 &lt;xsl:choose&gt;
  &lt;xsl:when test=&quot;position() mod 2 = 0&quot;&gt;
    &lt;xsl:element nom=&quot;tr&quot; use-attribute-sets=&quot;gris&quot;&gt;
     &lt;xsl:apply-templates /&gt;
    &lt;/xsl:element&gt;
  &lt;/xsl:when&gt;
  &lt;xsl:otherwise&gt;
    &lt;xsl:element nom=&quot;tr&quot; use-attribute-sets=&quot;jaune&quot;&gt;
     &lt;xsl:apply-templates /&gt;
    &lt;/xsl:element&gt;
  &lt;/xsl:otherwise&gt;
 &lt;/xsl:choose&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;nom&quot;&gt;
 &lt;td&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/td&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;prix&quot;&gt;
 &lt;td&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/td&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans les donn&eacute;es XML de l'exemple, il y a une liste avec des produits pour lesquels est not&eacute; &agrave; chaque fois le nom du produit et son prix. Dans la sortie  HTML doit &ecirc;tre cr&eacute;&eacute;e sur ces bases un tableau dans lequel une rang&eacute;e sur deux doit avoir un arri&egrave;re-plan gris et les autres rang&eacute;e, un arri&egrave;re plan jaune. Pour cela deux sch&eacute;mas de jeux d'attributs correspondants sont d&eacute;finis dans la feuille de style de l'exemple avec <code>xsl:attribute-set</code>. &Eacute;tant donn&eacute; que pour chaque produit doit &ecirc;tre cr&eacute;&eacute;e une rang&eacute;e de tableau, une requ&ecirc;te est contenue dans chaque mod&egrave;le qui contr&ocirc;le la sortie HTML pour l'&eacute;l&eacute;ment <code>produit</code>; cette requ&ecirc;te v&eacute;rifie &agrave; chaque &eacute;l&eacute;ment actuel  <code>produit</code> de la liste de donn&eacute;es s'il s'agit d'un num&eacute;ro de position pair. Si oui, une couleur d'arri&egrave;re-plan grise est appliqu&eacute;e &agrave; la rang&eacute;e de tableau actuelle, dans le cas contraire, une couleur jaune. La requ&ecirc;te est contr&ocirc;l&eacute;e par les instructions <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#choose"><b>xsl:choose</b></a>, <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#when"><b>xsl:when</b></a> et <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#otherwise"><b>xsl:otherwise</b></a>. Le num&eacute;ro de position de chaque &eacute;l&eacute;ment actuel est livr&eacute; par la fonction <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="fonctionsxpath.htm#position"><b>position()</b></a>. L'expression <code>mod 2 = 0</code> demande si la division modulo de la valeur de la position donne 0, donc ne donne pas de reste et que le nombre est ainsi pair.<br>
En fonction de la requ&ecirc;te. un &eacute;l&eacute;ment HTML <code>tr</code>, donc une rang&eacute;e de tableau est cr&eacute;&eacute;e dans les embranchements de <code>when</code> et de <code>otherwise</code> avec <code>xsl:element</code>. Cet &eacute;l&eacute;ment HTML est dot&eacute; avec les diff&eacute;rents sch&eacute;mas d'attributs pour le jaune et pour le gris. Entre le rep&egrave;re d'ouverture et son pendant <code>&lt;/xsl:element&gt;</code> les mod&egrave;les subordonn&eacute;s pour le nom et le prix du produit sont appel&eacute;s.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="fallback">xsl:fallback (instruction d'ex&eacute;cution en alternative)</a></h2>

<p>Met &agrave; la disposition du processeur XSLT une instruction en alternative pour le cas o&ugrave; celui-ci ne conna&icirc;trait pas une instruction XSLT r&eacute;cente ou moins courante.</p>

<p>n'a pas d'attributs.</p>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>fallback.xml</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;fallback.xsl&quot; ?&gt;
&lt;test&gt;
&lt;texte&gt;Peu importe que tu dises A ou B , aussi longtemps que tu ne connais pas C.&lt;/texte&gt;
&lt;texte&gt;Il vaut mieux ne pas parler de ce que l'on ne conna�t pas.&lt;/texte&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>fallback.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;xsl:processing-instruction name=&quot;xml-stylesheet&quot;&gt;
  &lt;xsl:fallback&gt;
   &lt;link rel=&quot;stylesheet&quot; href=&quot;fallbacktest.css&quot; type=&quot;text/css&quot; /&gt;
  &lt;/xsl:fallback&gt;
  &lt;xsl:text&gt;href=&quot;fallbacktest.css&quot; type=&quot;text/css&quot; ?&lt;/xsl:text&gt;
 &lt;/xsl:processing-instruction&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;texte&quot;&gt;
 &lt;p&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/p&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans la feuille de style de l'exemple, une feuille de style CSS a &eacute;t&eacute; incorpor&eacute;e dans l'arbre de transformation HTML avec l'instruction <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#processing_instruction"><b>xsl:processing-instruction</b></a>. Dans le cas ou le processeur XSLT ne connaissait pas cette instruction, une alternative est not&eacute;e avec <code>xsl:fallback</code>, &agrave; savoir la notation directe de la commande d'incorporation de la feuille de style CSS.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="for_each">xsl:for-each (r&eacute;p&eacute;ter pour chacun des &eacute;l&eacute;ments d'une quantit&eacute;)</a></h2>

<p>Repr&eacute;sente une instruction de boucle dans une d&eacute;finition de mod&egrave;le. Ce qui figure dans la boucle sera appliqu&eacute; &agrave; tous les n&#339;uds &agrave; l'int&eacute;rieur d'un jeu de n&#339;uds &agrave; mentionner. Tous les n&#339;uds suivants seront alors trait&eacute;s dans l'ordre. Il est ainsi possible par exemple de traiter tous les &eacute;l&eacute;ments <code>element_liste</code>, qui d&eacute;pendent d'un &eacute;l&eacute;ment nomm&eacute; <code>liste</code>, directement &agrave; l'int&eacute;rieur de la d&eacute;finition de mod&egrave;le pour l'&eacute;l&eacute;ment <code>liste</code> sans qu'il soit n&eacute;cessaire d'appeler une d&eacute;finition de mod&egrave;le subordonn&eacute;e pour l'&eacute;l&eacute;ment <code>element_liste</code>.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>select=</code></td>
<td valign="top"><i>(obligatoire)</i> jeu de n&#339;uds ou chemin d'apr&egrave;s la   <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm"><b>syntaxe XPath</b></a>, pour lequel la boucle doit s'appliquer.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a> .</p>

<h3 class="xmp">Fichier d'exemple <var>for_each.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/for_each.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>for_each.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/for_each.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>for_each.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;for_each.xsl&quot; ?&gt;
&lt;test&gt;
&lt;classe nom=&quot;6eme&quot;&gt;
&lt;ecolier&gt;St�phane Jambon&lt;/ecolier&gt;
&lt;ecolier&gt;Annie Cortier&lt;/ecolier&gt;
&lt;ecolier&gt;Isabelle Perrault&lt;/ecolier&gt;
&lt;/classe&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>for_each.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;classe&quot;&gt;
  &lt;h3&gt;classe &lt;xsl:value-of select=&quot;@nom&quot; /&gt;&lt;/h3&gt;
  &lt;p&gt;
  &lt;xsl:for-each select=&quot;ecolier&quot;&gt;
    &lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;br /&gt;
  &lt;/xsl:for-each&gt;
  &lt;/p&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans les donn&eacute;es XML de l'exemple sont not&eacute;s les classes de l'&eacute;cole et les noms d'&eacute;l&egrave;ves. Dans la feuille de style de l'exemple une boucle est cr&eacute;&eacute;e avec <code>xsl:for-each</code> dans le mod&egrave;le pour l'&eacute;l&eacute;ment <code>classe</code>, qui peut comporter autant d'&eacute;l&eacute;ments <code>ecolier</code> que souhait&eacute;. Dans cette boucle est cr&eacute;&eacute; dans l'arbre de transformation et dans l'ordre le contenu  (<code>xsl:value-of</code>) de chaque &eacute;l&eacute;ment <code>ecolier</code> ainsi qu'un passage &agrave; la ligne.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="if">xsl:if (condition si)</a></h2>

<p>Fait d&eacute;pendre l'ex&eacute;cution d'une instruction d'une condition.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>test=</code></td>
<td valign="top"><i>(obligatoire)</i> formule la condition.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>if.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/if.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>if.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/if.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>if.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;if.xsl&quot; ?&gt;
&lt;test&gt;
&lt;resultats&gt;&lt;nom&gt;Gaulois&lt;/nom&gt;&lt;points&gt;453&lt;/points&gt;&lt;/resultats&gt;
&lt;resultats&gt;&lt;nom&gt;Allobroges&lt;/nom&gt;&lt;points&gt;199&lt;/points&gt;&lt;/resultats&gt;
&lt;resultats&gt;&lt;nom&gt;Redoutables&lt;/nom&gt;&lt;points&gt;347&lt;/points&gt;&lt;/resultats&gt;
&lt;resultats&gt;&lt;nom&gt;Bayard&lt;/nom&gt;&lt;points&gt;106&lt;/points&gt;&lt;/resultats&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>if.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;table border=&quot;1&quot;&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/table&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;resultats&quot;&gt;
  &lt;xsl:if test=&quot;points &amp;gt;= 200&quot;&gt;
    &lt;tr&gt;
    &lt;xsl:apply-templates /&gt;
    &lt;/tr&gt;
  &lt;/xsl:if&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;nom&quot;&gt;
 &lt;td&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/td&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;points&quot;&gt;
 &lt;td&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/td&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Les donn&eacute;es XML contiennent les r&eacute;sultats de jeu et cela avec les noms des joueurs et les points marqu&eacute;s. Dans la feuille de style de l'exemple un tableau HTML doit en &ecirc;tre cr&eacute;&eacute;. Il faut pourtant que n'apparaissent dans le tableau que les joueurs qui totalisent 200 points ou plus. Pour ce faire, il est demand&eacute; dans le mod&egrave;le qui contr&ocirc;le la sortie HTML de l'&eacute;l&eacute;ment XML <code>resultats</code> gr&acirc;ce &agrave; l'instruction <code>&lt;xsl:if test=&quot;points &amp;gt;= 200&quot;&gt;</code> si le contenu de l'&eacute;l&eacute;ment subordonn&eacute; <code>points</code> est plus grand ou &eacute;gal &agrave; 200. Dans l'affirmative une rang&eacute;e de tableau est cr&eacute;&eacute;e et les mod&egrave;les pour les &eacute;l&eacute;ments subordonn&eacute;s, donc pour <code>nom</code> et <code>points</code> sont appel&eacute;s. Normalement l'op&eacute;rateur pour &quot;plus grand ou &eacute;gal &agrave;&quot; est tout simplement <code>&gt;=</code>. Comme il est plac&eacute; &agrave; l'int&eacute;rieur d'une instruction bas&eacute;e sur XML, le signe plus grand que doit &ecirc;tre transcrit en tant que <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../regles/signes.htm#propres_xml"><b>Caract&egrave;re propre &agrave; XML</b></a>.<br>
Les diff&eacute;rentes possibilit&eacute;s de formuler des conditions avec <code>xsl:if</code> sont d&eacute;crites dans la partie sur les
<img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm#operateurs"><b>op&eacute;rateurs XPath</b></a>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="import">xsl:import (importer des feuilles de style)</a></h2>

<p>Importe des d&eacute;finitions de mod&egrave;les d'autres feuilles de style qui peuvent ensuite &ecirc;tre appliqu&eacute;es avec <code>xsl:apply-imports</code> &agrave; l'endroit d&eacute;sir&eacute;.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>href=</code></td>
<td valign="top"><i>(obligatoire)</i> mentionne l'URI du fichier &agrave; importer.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> et doit &ecirc;tre not&eacute; en dehors de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>

<p>Voir exemple dans<img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#apply_imports"><b>xsl:apply-imports</b></a>.</p>

<h3 class="inf">Attention:</h3>

<p>En cas de contradiction, les d&eacute;finitions de feuilles de style d&eacute;finies dans la feuille de style actuelle ont priorit&eacute; sur les d&eacute;finitions import&eacute;es.</p>



<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="key">xsl:key (cl&eacute; pour le choix d'&eacute;l&eacute;ments)</a></h2>

<p>D&eacute;finit une cl&eacute; d'acc&egrave;s &agrave; des &eacute;l&eacute;ments ou attributs. Le travail du processeur XSLT en est facilit&eacute;, ce qui peut augmenter la vitesse de traitement. La cl&eacute; d'acc&egrave;s peut &ecirc;tre appliqu&eacute;e par la fonction <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="fonctionsxpath.htm#key"><b>key()</b></a>.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>name=</code></td>
<td valign="top"><i>(obligatoire)</i> fixe un nom sous lequel la cl&eacute; peut &ecirc;tre employ&eacute;e.</td>
</tr>
<tr>
<td valign="top"><code>use=</code></td>
<td valign="top"><i>(obligatoire)</i> mentionne &agrave; quoi la cl&eacute; doit acc&eacute;der.</td>
</tr>
<tr>
<td valign="top"><code>match=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne le jeu de n&#339;uds ou le chemin d'apr&egrave;s la <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm"><b>syntaxe XPath</b></a> o&ugrave; la cl&eacute; doit s'ajouter dans l'arbre des &eacute;l&eacute;ments.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> et  doit &ecirc;tre not&eacute; en dehors de  <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>

<h3 class="xmp">Fichier d'exemple <var>key.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/key.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>key.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/key.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>key.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;key.xsl&quot; ?&gt;
&lt;test&gt;
&lt;config type=&quot;utilisateur&quot; nom=&quot;docroot&quot; valeur=&quot;/usr/local/web&quot; /&gt;
&lt;config type=&quot;utilisateur&quot; nom=&quot;cgibin&quot; valeur=&quot;/usr/local/bin/cgi&quot; /&gt;
&lt;config type=&quot;expert&quot; nom=&quot;timeout&quot; valeur=&quot;60&quot; /&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>key.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:key name=&quot;utilisateur-seulement&quot; match=&quot;config&quot; use=&quot;@type&quot;/&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;table border=&quot;1&quot;&gt;
  &lt;xsl:for-each select=&quot;key('utilisateur-seulement','utilisateur')&quot;&gt;
   &lt;tr&gt;
    &lt;td&gt;&lt;xsl:value-of select=&quot;@nom&quot; /&gt;&lt;/td&gt;
    &lt;td&gt;&lt;xsl:value-of select=&quot;@valeur&quot; /&gt;&lt;/td&gt;
   &lt;/tr&gt;
  &lt;/xsl:for-each&gt;
 &lt;/table&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Les donn&eacute;es XML repr&eacute;sentent le contenu d'un fichier de configuration. Chaque &eacute;l&eacute;ment de configuration repr&eacute;sent&eacute; dans l'&eacute;l&eacute;ment <code>config</code>, contient les donn&eacute;es sous forme d'attributs. En plus des donn&eacute;es typiques pour les &eacute;l&eacute;ments de configuration <code>nom=</code> et <code>valeur=</code> il y a aussi un attribut <code>type=</code>, dans lequel les valeurs <code>utilisateur</code> et <code>expert</code> sont permises. Cette information pourrait par exemple aider, quand, lors de l'affichage des donn&eacute;es de configuration  &agrave; un utilisateur annonc&eacute; comme  <code>utilisateur</code>, les donn&eacute;es du mode expert doivent lui &ecirc;tre occult&eacute;es. La feuille de style de l'exemple r&eacute;alise une telle restriction. Une cl&eacute; est d&eacute;finie avec <code>&lt;xsl:key name=&quot;utilisateur-seulement&quot; match=&quot;config&quot; use=&quot;@type&quot;/&gt;</code>; elle acc&egrave;de &agrave; l'attribut  <code>type=</code>. Pour &ecirc;tre appliqu&eacute;e cette cl&eacute; est plac&eacute;e dans l'instruction <code>&lt;xsl:for-each select=&quot;key('utilisateur-seulement','utilisateur')&quot;&gt;</code>. La cl&eacute; d&eacute;finie auparavant et la valeur d'attribut d&eacute;sir&eacute;e est renvoy&eacute;e &agrave; la fonction <code>key()</code>. Seuls les &eacute;l&eacute;ments avec cette valeur d'attribut sont sortis.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="message">xsl:message (sortir un message lors de la transformation)</a></h2>

<p>Sort un message pendant la transformation des donn&eacute;es. Utilis&eacute; habituellement pour le traitement d'erreur dans une condition.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>terminate=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne par <code>yes</code> ou par <code>no</code> (r&eacute;glage par d&eacute;faut) si le processus de transformation doit &ecirc;tre interrompu ou non.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a> .</p>

<h3 class="xmp">Fichier d'exemple <var>message.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/message.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>message.xml</var> - Un navigateur XML/XSLT sort un message d'erreur)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;message.xsl&quot; ?&gt;
&lt;test&gt;
&lt;chiffre_lotto&gt;32&lt;/chiffre_lotto&gt;
&lt;chiffre_lotto&gt;8&lt;/chiffre_lotto&gt;
&lt;chiffre_lotto&gt;13&lt;/chiffre_lotto&gt;
&lt;chiffre_lotto&gt;40&lt;/chiffre_lotto&gt;
&lt;chiffre_lotto&gt;3&lt;/chiffre_lotto&gt;
&lt;chiffre_lotto&gt;59&lt;/chiffre_lotto&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>message.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;chiffre_lotto&quot;&gt;
  &lt;xsl:variable name=&quot;valeur_actuelle&quot; select=&quot;.&quot;/&gt;
  &lt;xsl:if test=&quot;$valeur_actuelle &gt; 49&quot;&gt;
   &lt;xsl:message terminate=&quot;yes&quot;&gt;
    &lt;xsl:text&gt;Le chiffre &lt;/xsl:text&gt;
    &lt;xsl:value-of select=&quot;.&quot;/&gt;
    &lt;xsl:text&gt;) est trop grand!&lt;/xsl:text&gt;&lt;br /&gt;
   &lt;/xsl:message&gt;
  &lt;/xsl:if&gt;
  &lt;xsl:value-of select=&quot;.&quot;/&gt;&lt;br /&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans l'exemple sont not&eacute;s des chiffres du lotto. La feuille de style de l'exemple formule dans la d&eacute;finition de mod&egrave;le pour l'&eacute;l&eacute;ment <code>chiffre_lotto</code> dans un premier temps une variable avec <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#variable"><b>xsl:variable</b></a> et lui affecte le contenu de l'&eacute;l&eacute;ment actuel. Il est ensuite v&eacute;rifi&eacute; avec <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#if"><b>xsl:if</b></a> si le contenu de la variable est plus grand que  49. Pour ce cas (erreur) un message d'erreur est construit  avec <code>xsl:message</code>: il &eacute;crit, plut&ocirc;t que le num&eacute;ro de l'erreur, que le chiffre concern&eacute; est trop grand.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="namespace_alias">xsl:namespace-alias (transformer une feuille de style en une autre feuille de style)</a></h2>

<p>permet de transformer une feuille de style en une autre feuille de style.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>stylesheet-prefix=</code></td>
<td valign="top"><i>(obligatoire)</i> mentionne le nom de l'espace de nommage qui est utilis&eacute; dans la feuille de style actuelle. Ce nom doit &ecirc;tre attribu&eacute; dans l'&eacute;l&eacute;ment <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> avec l'attribut <code>xmlns:[Name]</code>.</td>
</tr>
<tr>
<td valign="top"><code>result-prefix=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne le nom de l'espace de nommage qui doit &ecirc;tre employ&eacute; &agrave; la place du nom mentionn&eacute; dans <code>stylesheet-prefix=</code> dans la feuille de style de r&eacute;sultat.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> et doit &ecirc;tre not&eacute; en dehors de  <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>

<h3 class="xmp">Fichier d'exemple <var>namespace_alias.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/namespace_out.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>namespace_out.htm</var> - cr&eacute;&eacute; par le biais de <var>namespace_out.xsl</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/namespace_alias.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>namespace_alias.xml</var>)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;namespace_alias.xsl&quot; ?&gt;
&lt;test&gt;
&lt;salut&gt;hello monde&lt;/salut&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>namespace_alias.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; xmlns:out=&quot;namespace_out.xsl&quot;&gt;

&lt;xsl:namespace-alias stylesheet-prefix=&quot;out&quot; result-prefix=&quot;xsl&quot;/&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;out:stylesheet version=&quot;1.0&quot;&gt;
  &lt;out:template match=&quot;/&quot;&gt;
   &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;
   &lt;h1&gt;&lt;xsl:value-of select=&quot;salut&quot; /&gt;&lt;/h1&gt;
   &lt;h1&gt;&lt;out:text&gt;hello monde - par la feuille de style de sortie&lt;/out:text&gt;&lt;/h1&gt;
   &lt;/body&gt;&lt;/html&gt;
  &lt;/out:template&gt;
 &lt;/out:stylesheet&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans la partie XML de l'exemple est not&eacute; simplement un salut &quot;hello monde&quot;. Dans la feuille de style de l'exemple, la premi&egrave;re particularit&eacute; se trouve d&eacute;j&agrave; dans le rep&egrave;re d'ouverture de l'&eacute;l&eacute;ment <code>xsl:stylesheet</code>. L'attribut <code>xmlns=</code> y est not&eacute; deux fois: une fois pour la d&eacute;claration habituelle de l'espace de nommage (<code>xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;</code>), et une fois pour la d&eacute;claration d'un propre espace de nommage  (<code>xmlns:out=&quot;output.xsl&quot;&gt;</code>). Par l'instruction <code>&lt;xsl:namespace-alias stylesheet-prefix=&quot;out&quot; result-prefix=&quot;xsl&quot;/&gt;</code> est ensuite fix&eacute;  pour le propre espace de nommage qui a re&ccedil;u le nom <code>out</code> que la feuille de style actuelle soit transform&eacute;e en feuille de style (<code>output.xsl</code>). Elle ne s'applique cependant que pour les notations qui mentionnent l'espace de nommage <code>out</code>. &Agrave; l'int&eacute;rieur de la d&eacute;finition de mod&egrave;le de l'exemple sont d&eacute;finies de telles notations. La premi&egrave;re commence par <code>lt;out:stylesheet version=&quot;1.0&quot;&gt;</code>. La d&eacute;finition int&eacute;rieure <code>&lt;xsl:value-of select=&quot;salut&quot; /&gt;</code> ne sera pas reprise dans la feuille de style de sortie, &agrave; la place ce sera <code>&lt;out:text&gt;hello monde - par la feuille de style de sortie&lt;/out:text&gt;</code>. Le code HTML qui est cr&eacute;&eacute; &agrave; la fin r&eacute;sulte de ce qui est d&eacute;fini dans la feuille de style de sortie.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="number">xsl:number (num&eacute;rotation continue)</a></h2>

<p>Permet de num&eacute;roter en continu des &eacute;l&eacute;ments r&eacute;p&eacute;titifs de l'arbre de transformation.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>count=</code></td>
<td valign="top"><i>(facultatif)</i> Pr&eacute;cise le ou les jeux de n&#339;uds ou les chemins d'apr&egrave;s la  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm"><b>syntaxe XPath</b></a> &agrave; l'occurrence desquels le compteur de num&eacute;rotation doit &ecirc;tre incr&eacute;ment&eacute;.</td>
</tr>
<tr>
<td valign="top"><code>format=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise le genre de num&eacute;rotation. Les mentions suivantes sont possibles:<br>
<code>1</code> = Genre de la num&eacute;rotation 1, 2, 3, 4 ...<br>
<code>01</code> = Genre de la num&eacute;rotation 01, 02, 03, 04, ... 10, 11 ...<br>
<code>a</code> = Genre de la num&eacute;rotation a, b, c, d ...<br>
<code>A</code> = Genre de la num&eacute;rotation A, B, C, D ...<br>
<code>i</code> = Genre de la num&eacute;rotation i, ii, iii, iv ...<br>
<code>I</code> = Genre de la num&eacute;rotation I, III, III, IV ...<br>
Le r&eacute;glage par d&eacute;faut est <code>1</code>. &Agrave; la suite de cette mention sur le genre de num&eacute;rotation peuvent encore suivre d'autres signes avec lesquels la num&eacute;rotation est format&eacute;e. Ainsi par exemple on obtient avec la mention <code>1.</code> que derri&egrave;re chaque nombre ordinal actuel respectif figure un point.
</td>
</tr>
<tr>
<td valign="top"><code>from=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise le jeu de n&#339;uds ou un chemin d'apr&egrave;s la  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm"><b>syntaxe XPath</b></a>, &agrave; l'occurrence duquel la num&eacute;rotation doit &ecirc;tre arr&ecirc;t&eacute;e.</td>
</tr>
<tr>
<td valign="top"><code>grouping-separator=</code></td>
<td valign="top"><i>(facultatif)</i> Signe de s&eacute;paration pour des groupes de chiffres pour des nombres &eacute;lev&eacute;s par exemple le signe de s&eacute;paration des milliers. Habituellement on utilise en fran&ccedil;ais le point (<code>.</code>) pour l'&eacute;criture des nombres .</td>
</tr>
<tr>
<td valign="top"><code>grouping-size=</code></td>
<td valign="top"><i>(facultatif)</i> Nombre des chiffres pour lequel le signe de s&eacute;paration doit &ecirc;tre pos&eacute;: Pour le signe de s&eacute;paration des milliers, la valeur serait <code>3</code>.</td>
</tr>
<tr>
<td valign="top"><code>lang=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne le pays (D'apr&egrave;s RFC 1766), d'apr&egrave;s les conventions de langues duquel la num&eacute;rotation doit se faire. La mention doit se faire avec les abr&eacute;viations du genre <code>de</code> (pour l'allemand), <code>en</code> (pour l'anglais), <code>fr</code> (pour le fran&ccedil;ais).
</td>
</tr>
<tr>
<td valign="top"><code>letter-value=</code></td>
<td valign="top"><i>(facultatif)</i> Les valeurs permises sont <code>alphabetical</code> ou <code>traditional</code>. Une mention qui en plus de <code>lang=</code> est judicieuse pour certaines langues.</td>
</tr>
<tr>
<td valign="top"><code>level=</code></td>
<td valign="top"><i>(facultatif)</i> Les valeurs permises sont <code>single</code>, <code>multiple</code> ou <code>any</code>. La mention se r&eacute;f&egrave;re &agrave; ce qui est mentionn&eacute; pour <code>count=</code>.<br>
<code>single</code> signifie: L'algorithme de num&eacute;rotation travaille sur le plan du niveau actuel de l'arborescence d'&eacute;l&eacute;ments et peut cr&eacute;er des num&eacute;rotations du genre 1, 2, 3 ; si le n&#339;ud actuel correspond &agrave; la mention de <code>count=</code>, il est num&eacute;rot&eacute;.<br>
<code>multiple</code> signifie: L'algorithme de num&eacute;rotation travaille hi&eacute;rarchiquement sur le niveaux actuel et tous les niveaux sup&eacute;rieurs de l'arborescence d'&eacute;l&eacute;ments et peut cr&eacute;er des num&eacute;rotations du genre 1.1 ou 1.1.1 ; si le n&#339;ud actuel correspond &agrave; la mention de <code>count=</code>, il est num&eacute;rot&eacute;. Ici chaque niveau sup&eacute;rieur de l'arborescence d'&eacute;l&eacute;ments est recherch&eacute; pour savoir si la mention pour <code>count=</code> co&iuml;ncide avec un n&#339;ud. &Agrave; partir de ces informations est cr&eacute;&eacute;e la num&eacute;rotation hi&eacute;rarchique. Pour <code>multiple</code> doit &ecirc;tre mentionn&eacute;e pour <code>count=</code> la s&eacute;quence de n&#339;uds pour lesquels doit s'appliquer la num&eacute;rotation hi&eacute;rarchique. Ceci est possible pour une mention telle que, par exemple <code>count=&quot;titre_chapitre|titre_section|soustitre&quot;</code>. Les noms d'&eacute;l&eacute;ments doivent ici &ecirc;tre s&eacute;par&eacute;s les uns des autres par des barres verticales (<code>|</code>) . Pour l'attribut <code>format=</code> doit &ecirc;tre not&eacute; dans ce cas quelque chose comme <code>format=&quot;1.1&quot;</code> .<br>
<code>any</code> signifie: L'algorithme de num&eacute;rotation travaille sur le plan du niveau actuel et tous les niveaux de l'arborescence d'&eacute;l&eacute;ments et peut cr&eacute;er des num&eacute;rotations du genre 1, 2, 3; si le n&#339;ud actuel correspond &agrave; la mention de <code>count=</code>, il est num&eacute;rot&eacute;. Ici est recherch&eacute; dans chaque niveau sup&eacute;rieur de l'arborescence d'&eacute;l&eacute;ments si  la mention de <code>count=</code> correspond &agrave; un n&#339;ud. La num&eacute;rotation compte tous les n&#339;uds ensemble.<br>
</td>
</tr>
<tr>
<td valign="top"><code>value=</code></td>
<td valign="top"><i>(facultatif)</i> expression de calcul qui d&eacute;termine la num&eacute;rotation. Une mention possible est par exemple <code>value=&quot;position()&quot;</code>.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>number.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/number.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>number.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/number.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>number.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;number.xsl&quot; ?&gt;
&lt;test&gt;
&lt;lien&gt;http://selfhtml/selfhtml.com.fr/&lt;/lien&gt;
&lt;lien&gt;http://selfforum/selfhtml.com.fr/&lt;/lien&gt;
&lt;lien&gt;http://www.selfhtml.com.fr/&lt;/lien&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>number.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;lien&quot;&gt;
 &lt;xsl:number level=&quot;single&quot; count=&quot;lien&quot; format=&quot;1. &quot; /&gt;
 &lt;a&gt;&lt;xsl:attribute name=&quot;href&quot;&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/xsl:attribute&gt;
 &lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Les donn&eacute;es XML de l'exemple contiennent une s&eacute;rie de liens qui doivent &ecirc;tre num&eacute;rot&eacute;s dans la sortie HTML. La feuille de style de l'exemple applique pour le faire l'instruction  <code>xsl:number</code> &agrave; l'int&eacute;rieur de la d&eacute;finition de mod&egrave;le pour l'&eacute;l&eacute;ment <code>lien</code> au d&eacute;but du code >HTML &agrave; cr&eacute;er. Une simple num&eacute;rotation (<code>level=&quot;single&quot;</code>) doit &ecirc;tre ex&eacute;cut&eacute;e. Elle doit se poursuivre &agrave; chaque occurrence de l'&eacute;l&eacute;ment <code>lien</code> (<code>count=&quot;lien&quot;</code>). La num&eacute;rotation doit &ecirc;tre repr&eacute;sent&eacute;e sous la forme <code>1.&nbsp;...</code>, <code>2.&nbsp;...</code>, <code>3.&nbsp;...</code> gr&acirc;ce &agrave;  (<code>format=&quot;1.&nbsp;&quot;</code>).<br>
Enfin un lien HTML est cr&eacute;&eacute; dans la d&eacute;finition de mod&egrave;le qui pr&eacute;sente le contenu de chaque &eacute;l&eacute;ment <code>lien</code> sous une forme pouvant &ecirc;tre cliqu&eacute;e.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="otherwise">xsl:otherwise (instruction autrement)</a></h2>

<p>D&eacute;termine ce qui doit &ecirc;tre fait quand une ou plusieurs conditions <code>xsl:when</code> ne sont pas remplies.</p>

<p>n'a pas d'attributs.</p>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#choose"><b>xsl:choose</b></a>. Voir l'exemple &agrave; cet endroit.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="output">xsl:output (contr&ocirc;ler la cr&eacute;ation de l'arbre de transformation)</a></h2>

<p>Mentionne comment l'arbre de transformation doit &ecirc;tre sorti ou &eacute;crit.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>cdata-section-elements=</code></td>
<td valign="top"><i>(facultatif)</i> pour <code>method=&quot;xml&quot;</code>: pr&eacute;cise les &eacute;l&eacute;ments dont le contenu doit &ecirc;tre &eacute;crit dans des parties CDATA lors de la cr&eacute;ation de l'arbre de transformation (Comparez avec les <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../regles/signes.htm#cdata"><b>Parties non interpr&eacute;t&eacute;es (CDATA)
</b></a>). Plusieurs &eacute;l&eacute;ments &agrave; s&eacute;parer par des espaces peuvent &ecirc;tre mentionn&eacute;s.</td>
</tr>
<tr>
<td valign="top"><code>doctype-public=</code></td>
<td valign="top"><i>(facultatif)</i> pour <code>method=&quot;xml&quot;</code> et <code>method=&quot;html&quot;</code>: quand le contr&ocirc;le de validit&eacute; de l'arbre de transformation se r&eacute;f&egrave;re &agrave; une affectation de DTD publique (public identifier) , cet attribut re&ccedil;oit comme valeur la cha&icirc;ne de caract&egrave;res de l'identificateur public.</td>
</tr>
<tr>
<td valign="top"><code>doctype-system=</code></td>
<td valign="top"><i>(facultatif)</i> pour <code>method=&quot;xml&quot;</code> et<code>method=&quot;html&quot;</code>: quand le contr&ocirc;le de validit&eacute; de l'arbre de transformation se r&eacute;f&egrave;re &agrave; une affectation de DTD adress&eacute;e (system identifier), cet attribut re&ccedil;oit comme valeur la cha&icirc;ne de caract&egrave;res de l'identificateur syst&egrave;me.</td>
</tr>
<tr>
<td valign="top"><code>encoding=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise avec quel jeu de caract&egrave;res l'arbre de transformation doit &ecirc;tre cod&eacute;. Une mention d'apr&egrave;s <img src="../../src/en.gif" alt="english page" width="16" height="10" border="0">&nbsp;<a target="_top" href="http://rfc.fh-koeln.de/rfc/html/rfc2278.html"><b>RFC2278</b></a> est indiqu&eacute;e.</td>
</tr>
<tr>
<td valign="top"><code>indent=</code></td>
<td valign="top"><i>(facultatif)</i> peut avoir comme valeur <code>yes</code> ou bien <code>no</code> (r&eacute;glage par d&eacute;faut). Avec <code>yes</code> l'arbre de transformation sera format&eacute; de telle fa&ccedil;on que les &eacute;l&eacute;ments subordonn&eacute;s seront plac&eacute;s en retrait. Ceci n'a aucun effet sur la repr&eacute;sentation mais est une mention &quot;esth&eacute;tique&quot; pour une meilleure lisibilit&eacute; du code-source g&eacute;n&eacute;r&eacute;.</td>
</tr>
<tr>
<td valign="top"><code>media-type=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne le <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../../divers/typesmime.htm"><b>type Mime</b></a> de l'arbre de transformation. Avec <code>method=&quot;xml&quot;</code> la mention  <code>text/xml</code> est par exemple judicieuse, avec  <code>method=&quot;html&quot;</code> c'est par exemple <code>text/html</code> et avec <code>method=&quot;text&quot;</code> c'est <code>text/plain</code>.</td>
</tr>
<tr>
<td valign="top"><code>method=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne de quelle fa&ccedil;on l'arbre de transformation doit &ecirc;tre cr&eacute;&eacute;. Les valeurs possibles sont <code>xml</code>, <code>html</code> (r&eacute;glage par d&eacute;faut), <code>text</code>, ou certains espaces de nommage publics ou priv&eacute;s XML.</td>
</tr>
<tr>
<td valign="top"><code>omit-xml-declaration=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise pour <code>method=&quot;xml&quot;</code>, si dans l'arbre de transformation une <img src="../../src/doc.gif" alt="Autre page d'information" width="15" height="10" border="0">&nbsp;<a target="_top" href="../regles/declarationxml.htm"><b>d&eacute;claration XML</b></a> (<code>&lt;?xml ...?&gt;</code>) doit &ecirc;tre sortie ou non. Les valeurs possibles sont <code>yes</code> pour oui ou <code>no</code> pour non.</td>
</tr>
<tr>
<td valign="top"><code>standalone=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise pour <code>omit-xml-declaration=&quot;yes&quot;</code>, que les d&eacute;clarations DTD se trouvent dans le fichier actuel (comparer avec les <img src="../../src/doc.gif" alt="Autre page d'information" width="15" height="10" border="0">&nbsp;<a target="_top" href="../regles/declarationxml.htm#mentions_supplementaires"><b>Mentions suppl&eacute;mentaires pour le jeu de caract&egrave;res et la r&eacute;f&eacute;rence DTD
</b></a>)</td>
</tr>
<tr>
<td valign="top"><code>version=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise pour <code>omit-xml-declaration=&quot;yes&quot;</code> la mention de version XML.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> et doit &ecirc;tre not&eacute; en dehors de  <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>output.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/output_en.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>output_en.xml</var> - Navigateur XML indispensable qui affiche la structure des donn&eacute;es)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;output.xsl&quot; ?&gt;
&lt;test&gt;
&lt;evenement&gt;
  &lt;description&gt;8514 WW 13 � la vitesse de 95 dans une zone limit�e � 70&lt;/description&gt;
  &lt;pointeuse&gt;13.05.2001,22:25&lt;/pointeuse&gt;
&lt;/evenement&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>output.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:output method=&quot;xml&quot; indent=&quot;yes&quot; encoding=&quot;ISO-8859-1&quot; omit-xml-declaration=&quot;yes&quot; /&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;test-en&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/test-en&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;evenement&quot;&gt;
 &lt;event&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/event&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;description&quot;&gt;
 &lt;description&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/description&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;pointeuse&quot;&gt;
 &lt;timestamp&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/timestamp&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Le donn&eacute;es XML de l'exemple contiennent des &quot;&eacute;v&eacute;nements&quot;, tels qu'ils pourraient &ecirc;tre trac&eacute;s par une station radar dans le trafic routier. Les noms d'&eacute;l&eacute;ments sont en fran&ccedil;ais. Dans une transformation contr&ocirc;l&eacute;e par XSL, ces donn&eacute;es doivent figurer dans un fichier XML analogue avec la m&ecirc;me arborescence d'&eacute;l&eacute;ments, le noms de ces derniers devant toutefois &ecirc;tre mentionn&eacute;s en anglais. Dans l'instruction <code>xsl:output</code> qui figure dans la feuille de style de l'exemple, avant les d&eacute;finitions de mod&egrave;les, il est notifi&eacute; &agrave; l'analyseur syntaxique XSL que l'arbre de transformation doit pr&eacute;senter une structure XML (<code>method=&quot;xml&quot;</code>). Avec <code>indent=&quot;yes&quot;</code> le formatage propre de la sortie de code-source XML est fix&eacute; et avec <code>encoding=&quot;ISO-8859-1&quot;</code> est d&eacute;termin&eacute; le jeu de caract&egrave;res. Afin que la sortie XML re&ccedil;oive une d&eacute;claration de type de document et une instruction de traitement, on a, gr&acirc;ce &agrave;  <code>omit-xml-declaration=&quot;yes&quot;</code>, fait le n&eacute;cessaire pour la <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../regles/declarationxml.htm"><b>d&eacute;claration XML </b></a>. Dans les d&eacute;finitions de mod&egrave;le suivantes, l'arbre de donn&eacute;es du document de sortie avec des noms d'&eacute;l&eacute;ments en fran&ccedil;ais est transcrit en un arbre de transformation avec des noms d'&eacute;l&eacute;ments en anglais.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="param">xsl:param (d&eacute;finir un param&egrave;tre)</a></h2>

<p>D&eacute;finit un param&egrave;tre devant &ecirc;tre utilis&eacute; avec <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#with_param"><b>xsl:with-param</b></a>.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>name=</code></td>
<td valign="top"><i>(obligatoire)</i> mentionne le nom de variable du param&egrave;tre. Sous ce nom, il sera possible d'acc&eacute;der &agrave; sa valeur.</td>
</tr>
<tr>
<td valign="top"><code>select=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise une valeur par d&eacute;faut pour la variable du param&egrave;tre. Si cet attribut est mentionn&eacute;, il s'agit d'un param&egrave;tre con&ccedil;u pour &ecirc;tre renvoy&eacute; d'une d&eacute;finition de mod&egrave;le &agrave; une autre.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> et peut &ecirc;tre plac&eacute; aussi bien &agrave; l'int&eacute;rieur qu'&agrave; l'ext&eacute;rieur de <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>. Quand il est not&eacute; &agrave; l'ext&eacute;rieur, c'est une variable globale &agrave; la disposition de toutes les d&eacute;finitions de mod&egrave;les. Quand il est not&eacute; dans une d&eacute;finition de mod&egrave;le, c'est une variable locale &agrave; l'int&eacute;rieur du mod&egrave;le.</p>

<p>Voir exemple dans<img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#with_param"><b>xsl:with-param</b></a>.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="preserve_space">xsl:preserve-space (conserver les espaces)</a></h2>

<p>Pr&eacute;cise que les espaces contenus dans le fichier entre les &eacute;l&eacute;ments, sont conserv&eacute;s lors de la sortie. Les espaces sont des caract&egrave;res avec les valeurs hexad&eacute;cimales <code>#x20</code> (simple espace), <code>#x9</code> (signe de tabulation), <code>#xD</code> (retour en arri&egrave;re) ou <code>#xA</code> (avance d'une ligne). Il ne s'agit pas du contenu texte d'&eacute;l&eacute;ments mais du formatage des &eacute;l&eacute;ments dans l'arbre de transformation.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>elements=</code></td>
<td valign="top"><i>(obligatoire)</i> Nom d'un ou plusieurs &eacute;l&eacute;ments des donn&eacute;es de sortie, dont les espaces doivent &ecirc;tre conserv&eacute;s dans la sortie. Plusieurs mentions sont &agrave; s&eacute;parer par des espaces.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> et doit &ecirc;tre not&eacute; en dehors de  <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>preserve_space.xml</var>:</h3>


<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/preserve_space.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>preserve_space.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/preserve_space.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>preserve_space.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;preserve_space.xsl&quot; ?&gt;
&lt;test&gt;


&lt;contact&gt;Germaine H�loire, gerloire@tiscali.net&lt;/contact&gt;


&lt;contact&gt;Gaelle Amine, gamine@mails.org&lt;/contact&gt;


&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>preserve_space.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:preserve-space elements=&quot;test&quot; /&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;&lt;pre&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/pre&gt;&lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;contact&quot;&gt;
  &lt;b&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/b&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans les donn&eacute;es XML un espace est not&eacute; entre les &eacute;l&eacute;ments &agrave; l'int&eacute;rieur de l'&eacute;l&eacute;ment document <code>test</code>. Dans la feuille de style de l'exemple, l'instruction <code>&lt;xsl:preserve-space elements=&quot;test&quot; /&gt;</code> assure que ces espaces seront conserv&eacute;s lors de la sortie. Dans la d&eacute;finition de mod&egrave;le pour la racine du document le contenu est alors ins&eacute;r&eacute; dans l'&eacute;l&eacute;ment <code>pre</code> pour la sortie HTML, afin que les espaces aient un effet en HTML.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="processing_instruction">xsl:processing-instruction (g&eacute;n&eacute;rer un code de feuilles de style)</a></h2>

<p>cr&eacute;e une  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="../regles/declarationxml.htm#instructions_traitement"><b>instruction de traitement</b></a> dans l'arbre de transformation.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>name=</code></td>
<td valign="top"><i>(obligatoire)</i> pr&eacute;cise le nom de l'instruction de traitement.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>processing_instruction.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/processing.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>processing.xml</var> - navigateur XML/CSS indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;processing_instruction.xsl&quot; ?&gt;
&lt;test&gt;
&lt;texte&gt;Bonjour!&lt;/texte&gt;
&lt;texte&gt;et au revoir!&lt;/texte&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>processing_instruction.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:output method=&quot;xml&quot; omit-xml-declaration=&quot;no&quot; /&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
&lt;xsl:processing-instruction name=&quot;xml-stylesheet&quot;&gt;
 &lt;xsl:text&gt;href=&quot;processing.css&quot; type=&quot;text/css&quot;&lt;/xsl:text&gt;
&lt;/xsl:processing-instruction&gt;
 &lt;test&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/test&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;texte&quot;&gt;
 &lt;xsl:copy-of select=&quot;.&quot; /&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>


<h3 class="xmp">Fichier d'exemple <var>processing.css</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
texte { font-size:21px; color:blue; }
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>La feuille de style XSLT cr&eacute;e un nouveau fichier HTML dans lequel toutes les donn&eacute;es du fichier d'entr&eacute;e, dans l'exemple donc de <var>processing_instruction.xml</var>, sont copi&eacute;es. Pour cela sert d'un c&ocirc;t&eacute; l'instruction <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#output"><b>xsl:output</b></a>, avec laquelle la d&eacute;claration XML pour le nouveau fichier HTML est cr&eacute;&eacute;e, et d'autre part la copie des &eacute;l&eacute;ments <code>texte</code> &agrave; l'aide de <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#copy_of"><b>xsl:copy-of</b></a> dans l'arbre de transformation, donc le nouveau fichier XML. La diff&eacute;rence entre le nouveau fichier XML cr&eacute;&eacute; avec l'ancien r&eacute;side en ce qu'il contient une instruction de traitement pour incorporer une feuille de style. Pour cela est not&eacute; au d&eacute;but de la d&eacute;finition de mod&egrave;le pour la racine du document <code>/</code> un &eacute;l&eacute;ment <code>xsl:processing-instruction</code> avec le nom <code>xml-stylesheet</code> qui incorpore un fichier de feuilles de style externe. Ce qui a pour cons&eacute;quence que les donn&eacute;es XML sont sorties directement avec les formats du fichier CSS incorpor&eacute;. Dans l'arbre de transformation l'instruction au processeur sera transcrite comme suit:<br>
<code>&lt;?xml-stylesheet href=&quot;sortie.css&quot; type=&quot;text/css&quot; ?&gt;</code><br>
Les attributs dans l'exemple sont not&eacute;s entre les rep&egrave;res d'ouverture et de fermeture de <code>xsl:processing-instruction</code> avec <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#text"><b>xsl:text</b></a>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="sort">xsl:sort (trier les &eacute;l&eacute;ments d'apr&egrave;s leur contenu)</a></h2>

<p>Trie les n&#339;uds dans l'ordre d'apr&egrave;s leur contenu. Ainsi par exemple tous les sous-&eacute;l&eacute;ments  <code>element_liste</code> d'un &eacute;l&eacute;ment nomm&eacute; <code>liste</code> peuvent &ecirc;tre tri&eacute;s alphab&eacute;tiquement ou num&eacute;riquement lors de la transformation.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>case-order=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise si dans le tri, les majuscules viennent avant les minuscules ou le contraire. Les valeurs possibles sont <code>upper-first</code> (d'abord les majuscules) ou <code>lower-first</code> (d'abord les minuscules).</td>
</tr>
<tr>
<td valign="top"><code>data-type=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise si le tri doit se faire alphab&eacute;tiquement (r&eacute;glage par d&eacute;faut) ou num&eacute;riquement. Pour un tri alphab&eacute;tique par exemple, <code>9</code> vient apr&egrave;s <code>10</code>, pour un tri num&eacute;rique <code>10</code> vient apr&egrave;s <code>9</code>. Les valeurs possibles sont <code>text</code> (tri alphab&eacute;tique) ou <code>number</code> (tri num&eacute;rique).</td>
</tr>
<tr>
<td valign="top"><code>lang=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne le pays (d'apr&egrave;s RFC 1766) d'apr&egrave;s les conventions duquel le tri doit se faire. Ainsi par exemple la lettre <code>&ecirc;</code> en fran&ccedil;ais (<code>lang=&quot;fr&quot;</code>) sera class&eacute;e autrement dans l'alphabet qu'en allemand (<code>lang=&quot;de&quot;</code>).</td>
</tr>
<tr>
<td valign="top"><code>order=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise si le tri doit se faire dans l'ordre croissant (r&eacute;glage par d&eacute;faut), &agrave; savoir par exemple de A &agrave; Z, ou bien d&eacute;croissant, &agrave; savoir par exemple de Z &agrave; A. Les valeurs possibles sont <code>ascending</code> (tri croissant) ou bien <code>descending</code> (tri d&eacute;croissant).</td>
</tr>
<tr>
<td valign="top"><code>select=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne ce qui doit &ecirc;tre tri&eacute;. En l'absence de l'attribut, c'est le contenu de l'&eacute;l&eacute;ment concern&eacute; qui est tri&eacute;.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#apply_templates"><b>xsl:apply-templates</b></a> ou bien dans <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#for_each"><b>xsl:for-each</b></a>.</p>

<h3 class="xmp">Fichier d'exemple <var>sort.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/sort.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>sort.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/sort.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>sort.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;sort.xsl&quot; ?&gt;
&lt;test&gt;
&lt;joueur&gt;&lt;nom&gt;Antoine&lt;/nom&gt;&lt;points&gt;12&lt;/points&gt;&lt;/joueur&gt;
&lt;joueur&gt;&lt;nom&gt;Patrick&lt;/nom&gt;&lt;points&gt;19&lt;/points&gt;&lt;/joueur&gt;
&lt;joueur&gt;&lt;nom&gt;Richard&lt;/nom&gt;&lt;points&gt;27&lt;/points&gt;&lt;/joueur&gt;
&lt;joueur&gt;&lt;nom&gt;William&lt;/nom&gt;&lt;points&gt;10&lt;/points&gt;&lt;/joueur&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>sort.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;table border=&quot;1&quot;&gt;
  &lt;xsl:for-each select=&quot;test/joueur&quot;&gt;
   &lt;xsl:sort select=&quot;points&quot; order=&quot;descending&quot; data-type=&quot;number&quot; /&gt;
   &lt;tr&gt;
   &lt;td&gt;&lt;xsl:value-of select=&quot;nom&quot; /&gt;&lt;/td&gt;
   &lt;td&gt;&lt;xsl:value-of select=&quot;points&quot; /&gt;&lt;/td&gt;
   &lt;/tr&gt;
  &lt;/xsl:for-each&gt;
 &lt;/table&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Les donn&eacute;es XML contiennent des noms de joueur et les points marqu&eacute;s. Pour la sortie HTML cette liste sera tri&eacute;e dans l'ordre d&eacute;croissant des points marqu&eacute;s. Pour ce faire une instruction <code>xsl:sort</code> est not&eacute;e, dans la feuille de style de l'exemple, &agrave; l'int&eacute;rieur de l'instruction <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#for_each"><b>xsl:for-each</b></a>. L'instruction not&eacute;e &agrave; cet endroit joue le r&ocirc;le d'un filtre qui influence le traitement des diff&eacute;rents &eacute;l&eacute;ments du type <code>joueur</code>. Comme crit&egrave;re de tri est mentionn&eacute; <code>points</code> &eacute;tant donn&eacute; que le tri doit se faire d'apr&egrave;s les points marqu&eacute;s. L'ordre de tri doit &ecirc;tre d&eacute;croissant (<code>descending</code>). &Eacute;tant donn&eacute; que les points marqu&eacute;s doivent &ecirc;tre interpr&eacute;t&eacute;s num&eacute;riquement, la mention <code>data-type=&quot;number&quot;</code> est encore not&eacute;e. Enfin, les valeurs actuelles des &eacute;l&eacute;ments <code>nom</code> et <code>points</code> sont &eacute;crits dans le tableau HTML.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="strip_space">xsl:strip-space (contr&ocirc;ler le traitement des espaces)</a></h2>

<p>Pr&eacute;cise que les espaces entre les &eacute;l&eacute;ments qui sont contenus dans le fichier doivent &ecirc;tre retir&eacute;s dans la sortie. Les espaces sont des signes avec les valeurs hexad&eacute;cimales <code>#x20</code> (simple espace), <code>#x9</code> (signe de tabulation), <code>#xD</code> (retour en arri&egrave;re) ou <code>#xA</code> (avance d'une ligne). Il ne s'agit pas ici du contenu en texte d'&eacute;l&eacute;ments mais du formatage des &eacute;l&eacute;ments dans l'arbre de transformation.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>elements=</code></td>
<td valign="top"><i>(obligatoire)</i> nom d'un ou plusieurs &eacute;l&eacute;ments des donn&eacute;es de sortie dont les espaces doivent &ecirc;tre supprim&eacute;s dans la sortie. Plusieurs mentions sont &agrave; s&eacute;parer par des espaces.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> et doit &ecirc;tre not&eacute; en dehors de  <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>strip_space.xml</var>:</h3>


<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/strip_space.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>strip_space.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/strip_space.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>strip_space.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;strip_space.xsl&quot; ?&gt;
&lt;test&gt;


&lt;contact&gt;Germaine H�loire, gerloire@tiscali.net &lt;/contact&gt;


&lt;contact&gt;Gaelle Amine, gamine@mails.org&lt;/contact&gt;


&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>strip_space.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:strip-space elements=&quot;test&quot; /&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;&lt;pre&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/pre&gt;&lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;contact&quot;&gt;
  &lt;b&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/b&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans les donn&eacute;es XML not&eacute;es, un espace est plac&eacute; entre les &eacute;l&eacute;ments &agrave; l'int&eacute;rieur de l'&eacute;l&eacute;ment document <code>test</code>. Dans la feuille de style de l'exemple l'instruction <code>&lt;xsl:strip-space elements=&quot;test&quot; /&gt;</code> assure que ces espaces seront retir&eacute;s lors de la sortie. Dans la d&eacute;finition de mod&egrave;le pour l'&eacute;l&eacute;ment racine le contenu est alors ins&eacute;r&eacute; dans l'&eacute;l&eacute;ment <code>pre</code> pour la sortie HTML, afin que la disparition des espaces ait un effet en HTML.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="stylesheet">xsl:stylesheet (&eacute;l&eacute;ment racine de la feuille de style)</a></h2>

<p>C'est l'&eacute;l&eacute;ment racine d'une feuille de style qui contient toutes les d&eacute;finitions de style.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>extension-element-prefixes=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne les espaces de nommage qui sont n&eacute;cessaires &agrave; l'int&eacute;rieur de la feuille de style, pour reconna&icirc;tre des &eacute;l&eacute;ments de ces autres espaces de nommage. Une ou plusieurs mentions sont permises. Plusieurs mentions sont &agrave; s&eacute;parer par des espaces.</td>
</tr>
<tr>
<td valign="top"><code>exclude-result-prefixes=</code></td>
<td valign="top"><i>(facultatif)</i>  mentionne les espaces de nommage qui sont n&eacute;cessaires &agrave; l'int&eacute;rieur de la feuille de style, pour reconna&icirc;tre des &eacute;l&eacute;ments de ces autres espaces de nommage. Lors de la cr&eacute;ation de l'arbre de transformation, ces espaces de nommage ne sont pourtant pas transmis dans las mesure o&ugrave; ils n'y sont pas n&eacute;cessaires. Une ou plusieurs mentions sont permises. Plusieurs mentions sont &agrave; s&eacute;parer par des espaces.</td>
</tr>
<tr>
<td valign="top"><code>id=</code></td>
<td valign="top"><i>(facultatif)</i> fixe pour la feuille de style un nom d'identification sans ambigu&iuml;t&eacute; sous lequel elle pourra &ecirc;tre adress&eacute;e de l'&quot;ext&eacute;rieur&quot;.</td>
</tr>
<tr>
<td valign="top"><code>version=</code></td>
<td valign="top"><i>(obligatoire)</i> mentionne la version de langage XSL utilis&eacute;e. Cette mention absolument indispensable est &agrave; l'heure actuelle <code>1.0</code>.</td>
</tr>
<tr>
<td valign="top" colspan="2">En outre l'&eacute;l&eacute;ment <code>xsl:stylesheet</code> contient une ou plusieurs mentions sur l'espace de nommage qu'il utilise. Pour cela les sources des espaces de nommage doivent &ecirc;tre mentionn&eacute;es avec <code>xmlns:xsl=[source]</code>. Pour l'espace de nommage XSLT il faut mentionner habituellement  <code>xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;</code>. Les diff&eacute;rences avec ceci d&eacute;pendent du processeur XSL employ&eacute;.</td>
</tr>
</table>



<h3 class="xmp">Fichier d'exemple <var>stylesheet.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/stylesheet.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>stylesheet.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/stylesheet.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>stylesheet.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;stylesheet.xsl&quot; ?&gt;
&lt;test&gt;
1234567890
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>stylesheet.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;&lt;head&gt;&lt;/head&gt;
 &lt;body style=&quot;background-color:#000000; font-family:Algerian; font-size:80px; color:#33FF33&quot;&gt;
  &lt;xsl:value-of select=&quot;.&quot; /&gt;
 &lt;/body&gt;&lt;/html&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Les donn&eacute;es XML de l'exemple ne contiennent que l'&eacute;l&eacute;ment racine avec une suite de chiffres comme contenu. La feuille de style de l'exemple n'en est que plus simple. Avec <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#template"><b>xsl:template</b></a> est d&eacute;finie une d&eacute;finition de mod&egrave;le pour transcrire les donn&eacute;es XML en sortie HTML. Ces d&eacute;finitions XSL et d'autres sont incluses dans l'&eacute;l&eacute;ment racine <code>xsl:stylesheet</code>. Dans l'exemple le rep&egrave;re d'ouverture de cet &eacute;l&eacute;ment contient les mentions typiques sur la version XSLT, sur la source XSLT et sur la source de l'espace de nommage HTML employ&eacute; (ici: XHTML).</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="template">xsl:template (d&eacute;finir un mod&egrave;le pour l'arbre de transformation)</a></h2>

<p>Sert &agrave; d&eacute;finir des gabarits pour la transcription de l'arborescence de sortie en arbre de transformation. Pour cela est mentionn&eacute; quel lien de l'arborescence de sortie doit &ecirc;tre transcrit en quelle construction de l'arbre de transformation. Lors de la transformation de donn&eacute;es XML personnelles en HTML, on peut par exemple &agrave; l'aide d'une telle d&eacute;finition de mod&egrave;le transformer un &eacute;l&eacute;ment  nomm&eacute; <code>liste</code> en &eacute;l&eacute;ment de liste &eacute;num&eacute;rative  <code>ul</code> et les &eacute;l&eacute;ments subordonn&eacute;s nomm&eacute;s  <code>element_liste</code> peuvent &ecirc;tre transform&eacute;s en &eacute;l&eacute;ments HTML correspondants du type <code>li</code>.<br>
L'&eacute;l&eacute;ment <code>xsl:template</code> est ainsi le plus important et le plus significatif des &eacute;l&eacute;ments de XSLT.<br>
La plupart du temps, l'arborescence de sortie (&agrave; savoir les donn&eacute;es qui se trouvent dans une structure de donn&eacute;es XML) et l'arbre de transformation (&agrave; savoir la structure de donn&eacute;es dans laquelle il faut transcrire - par exemple HTML) sont si complexes qu'il n'est pas possible de tout r&eacute;gler dans une seule d&eacute;finition de mod&egrave;le. &Agrave; la place, des d&eacute;finitions de mod&egrave;les peuvent appeler d'autres d&eacute;finitions de mod&egrave;les avec <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#apply_templates"><b>xsl:apply-templates</b></a>; elles traiteront par exemple les n&#339;uds subordonn&eacute;s.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>match=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne pour quel jeu de n&#339;uds ou quel chemin d'apr&egrave;s la  <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm"><b>syntaxe XPath</b></a> dans l'arborescence de sortie la d&eacute;finition de mod&egrave;le doit s'appliquer. Si cet attribut n'est pas mentionn&eacute;, il faut &agrave; la place mentionner <code>name=</code>.</td>
</tr>
<tr>
<td valign="top"><code>mode=</code></td>
<td valign="top"><i>(facultatif)</i> attribue un nom pour le mode de la d&eacute;finition de mod&egrave;le. Les mod&egrave;les avec une mention de mode peuvent &ecirc;tre choisis avec  <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#apply_templates"><b>xsl:apply-templates</b></a>.</td>
</tr>
<tr>
<td valign="top"><code>name=</code></td>
<td valign="top"><i>(facultatif)</i> attribue un nom pour la d&eacute;finition de mod&egrave;le. Sous ce nom, la d&eacute;finition de mod&egrave;le peut &ecirc;tre appel&eacute;e avec <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#call_template"><b>xsl:call-template</b></a>.</td>
</tr>
<tr>
<td valign="top"><code>priority=</code></td>
<td valign="top"><i>(facultatif)</i> une valeur num&eacute;rique qui r&egrave;gle les contradictions dans l'ordre de traitement des d&eacute;finitions de mod&egrave;le. Dans quelques processeurs XSL, le r&egrave;glement se fait jusqu'alors de telle fa&ccedil;on que les mod&egrave;les subordonn&eacute;s ou les noms d'attributs ont normalement la valeur de priorit&eacute; <code>0</code>. les mod&egrave;les subordonn&eacute;s ou les noms d'attributs avec mention de l'espace de nommage et et du caract&egrave;re de remplacement <code>*</code> ont  la valeur de priorit&eacute; <code>-0.25</code>. Un caract&egrave;re de remplacement sans autre limitation <code>*</code> a la valeur de priorit&eacute; <code>-0.5</code>. Tous les autres mod&egrave;les ont une valeur de priorit&eacute; de <code>0.5</code>.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a>.</p>


<h3 class="xmp">Fichier d'exemple <var>template.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/template.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>template.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/template.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>template.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;template.xsl&quot; ?&gt;
&lt;test&gt;
 &lt;titre&gt;Extension de fichier&lt;/titre&gt;
 &lt;glossaire&gt;
  &lt;element&gt;
   &lt;terme&gt;bak&lt;/terme&gt;
   &lt;signification&gt;fichier de sauvegarde&lt;/signification&gt;
  &lt;/element&gt;
  &lt;element&gt;
   &lt;terme&gt;bmp&lt;/terme&gt;
   &lt;signification&gt;graphique Bitmap&lt;/signification&gt;
  &lt;/element&gt;
 &lt;/glossaire&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>template.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;titre&quot;&gt;
 &lt;h1&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/h1&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;glossaire/element&quot;&gt;
 &lt;p style=&quot;font-family:Arial,Helvetica,sans-serif; font-size:12pt&quot;&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/p&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;terme&quot;&gt;
 &lt;b style=&quot;color:blue&quot;&gt;&lt;xsl:apply-templates /&gt;: &lt;/b&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;signification&quot;&gt;
  &lt;xsl:value-of select=&quot;.&quot; /&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Le fichier contient dans les donn&eacute;es XML une structure d'&eacute;l&eacute;ments imbriqu&eacute;s typique pour d&eacute;signer dans ce cas une liste du genre glossaire d'extensions de fichiers avec leur signification. Dans la feuille de style de l'exemple cette structure d'&eacute;l&eacute;ments XML est transcrite en une structure HTML conforme &agrave; XML. Cela se produit &agrave; l'int&eacute;rieur des d&eacute;finitions <code>xsl:template</code>. Ces d&eacute;finitions de mod&egrave;le adressent habituellement un certain &eacute;l&eacute;ment des donn&eacute;es de sortie avec l'attribut <code>match=</code>. Comme contenu, la d&eacute;finition de mod&egrave;le contient ensuite du code HTML et d'autres instructions XSL &agrave; l'aide desquels la transcription en HTML est contr&ocirc;l&eacute;e. Avec la premi&egrave;re d&eacute;finition de mod&egrave;le qui a pour mention <code>match=&quot;/&quot;</code>, l'&eacute;l&eacute;ment racine des donn&eacute;es XML est adress&eacute; (dans l'exemple c'est l'&eacute;l&eacute;ment nomm&eacute; <code>test</code>).<br>
Pour cr&eacute;er un fichier HTML correct, l'ossature d'un fichier HTML est not&eacute;e comme contenu de cette d&eacute;finition de mod&egrave;le. Entre le rep&egrave;re d'ouverture et de fermeture <code>body</code> l'instruction XSL <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#apply_templates"><b>xsl:apply-templates</b></a> est not&eacute;e avec laquelle les d&eacute;finitions de mod&egrave;le subordonn&eacute;es qui traitent les &eacute;l&eacute;ments XML subordonn&eacute;s, sont appel&eacute;es. Ici, l'arborescence des donn&eacute;es XML est d&eacute;cisive. Dans l'exemple ci-dessus l'&eacute;l&eacute;ment racine des donn&eacute;es XML a deux &eacute;l&eacute;ments qui lui sont imm&eacute;diatement subordonn&eacute;s, &agrave; savoir <code>titre</code> et <code>glossaire</code>. Pour l'&eacute;l&eacute;ment <code>titre</code> une d&eacute;finition de mod&egrave;le distincte est not&eacute;e (<code>&lt;xsl:template match=&quot;titre&quot;&gt;</code>). &Agrave; l'aide de l'instruction XSL  <img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas">&nbsp;<a href="#value_of"><b>xsl:value-of</b></a> le contenu de l'&eacute;l&eacute;ment <code>titre</code> y est transcrit en un titre HTML N� 1.<br>
Pour l'&eacute;l&eacute;ment <code>glossaire</code> il n'existe dans l'exemple aucune d&eacute;finition de mod&egrave;le distincte, seulement &agrave; nouveau pour son &eacute;l&eacute;ment subordonn&eacute; <code>element</code>. Pour que ce mod&egrave;le soit adress&eacute; par l'instruction <code>&lt;xsl:apply-templates&nbsp;/&gt;</code>, qui est not&eacute;e dans la d&eacute;finition de mod&egrave;le de l'&eacute;l&eacute;ment-racine, il est adress&eacute; d'apr&egrave;s la <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm"><b>syntaxe XPath</b></a> avec <code>glossaire/element</code>. Chaque &eacute;l&eacute;ment de glossaire de l'exemple est transcrit en un paragraphe HTML format&eacute; en CSS. Y sont &agrave; leur tour appel&eacute;es avec <code> &lt;xsl:apply-templates&nbsp;/&gt;</code> les d&eacute;finitions de mod&egrave;le pour les &eacute;l&eacute;ments XML subordonn&eacute;s. Dans l'exemple, ce sont les d&eacute;finitions pour les &eacute;l&eacute;ments subordonn&eacute;s <code>terme</code> et <code>signification</code>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="text">xsl:text (sortir un contenu en caract&egrave;res)</a></h2>

<p>cr&eacute;&eacute;e un texte statique dans l'arbre de transformation.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>disable-output-escaping=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise comment les signes propres &agrave; XML comme <code>&lt;</code> ou bien <code>&gt;</code> doivent &ecirc;tre trait&eacute;s. Les valeurs possibles sont <code>yes</code> et <code>no</code> (r&eacute;glage par d&eacute;faut). Avec <code>yes</code> les signes <b>ne</b> sont <b>pas</b> chang&eacute;s dans leurs noms nomm&eacute;s, avec <code>no</code> ils le sont.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>

<h3 class="xmp">Fichier d'exemple <var>textexsl.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/textexsl.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>textexsl.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/textexsl.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>textexsl.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;textexsl.xsl&quot; ?&gt;
&lt;test&gt;
 &lt;affirmation&gt;Le monde est un village&lt;/affirmation&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>textexsl.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;affirmation&quot;&gt;
 &lt;p&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
 &lt;xsl:text&gt;
  &amp;lt;!--
   document.write(&amp;quot;&amp;lt;p&amp;gt;&amp;quot; + document.lastModified + &amp;quot;&amp;lt;/p&amp;gt;&amp;quot;);
  //--&amp;gt;
 &lt;/xsl:text&gt;
&lt;/script&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Les donn&eacute;es XML de l'exemple contiennent une affirmation. Dans la feuille de style de l'exemple l'affirmation est transcrite en paragraphe. Au dessous est not&eacute;e une instruction <code>xsl:text</code> pour cr&eacute;er du texte suppl&eacute;mentaire. &Agrave; son tour celle-ci contient la notation conforme &agrave; HTML d'un petit JavaScript qui sort dans un paragraphe la date et l'heure de la derni&egrave;re modification du fichier. Ainsi que l'instruction est not&eacute;e dans l'exemple, les signes propres &agrave; XML doivent &ecirc;tre masqu&eacute;s.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="transform">xsl:transform (&eacute;l&eacute;ment racine de la feuille de style)</a></h2>

<p>C'est un synonyme pour <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a>.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="value_of">xsl:value-of (sortir la valeur)</a></h2>

<p>cr&eacute;e une cha&icirc;ne de caract&egrave;res sauvegard&eacute;e &agrave; la position actuelle de l'arbre de sortie. Pour la cha&icirc;ne de caract&egrave;res sauvegard&eacute;e, il peut s'agir par exemple du contenu d'un n&#339;ud de donn&eacute;es XML ou bien du contenu d'une variable d&eacute;finie auparavant.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>disable-output-escaping=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise comment les signes propres &agrave; XML comme  <code>&lt;</code> ou bien <code>&gt;</code>  doivent &ecirc;tre trait&eacute;s. Les valeurs possibles sont <code>yes</code> et <code>no</code> (r&eacute;glage par d&eacute;faut). Avec <code>yes</code> les signes <b>ne</b> sont <b>pas</b> chang&eacute;s dans leurs noms nomm&eacute;s, avec  <code>no</code> ils le sont.</td>
</tr>
<tr>
<td valign="top"><code>extension-element-prefixes=</code></td>
<td valign="top"><i>(facultatif)</i> mentionne des espaces de nommage qui sont n&eacute;cessaires pour reconna&icirc;tre des &eacute;l&eacute;ments de ces autres espaces de nommage. Une ou plusieurs mentions sont permises. Plusieurs mentions sont &agrave; s&eacute;parer par des espaces.</td>
</tr>
<tr>
<td valign="top"><code>select=</code></td>
<td valign="top"><i>(obligatoire)</i> Choisit un n&#339;ud ou une variable ou un param&egrave;tre dont le contenu doit &ecirc;tre utilis&eacute;. </td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#template"><b>xsl:template</b></a>.</p>

<h3 class="xmp">Fichier d'exemple <var>value_of.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/value_of.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>value_of.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/value_of.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>value_of.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;value_of.xsl&quot; ?&gt;
&lt;test&gt;
 &lt;liste&gt;
   &lt;element&gt;Ma maison&lt;/element&gt;
   &lt;element&gt;mon auto&lt;/element&gt;
   &lt;element&gt;mon bateau&lt;/element&gt;
 &lt;/liste&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>value_of.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;ul&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/ul&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;liste&quot;&gt;
  &lt;xsl:for-each select=&quot;element&quot;&gt;
   &lt;li&gt;&lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/li&gt;
  &lt;/xsl:for-each&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Dans les donn&eacute;es XML est d&eacute;finie une liste avec des &eacute;l&eacute;ments. Dans la feuille de style de l'exemple cette liste est transcrite en une liste &eacute;num&eacute;rative HTML. Dans la d&eacute;finition de mod&egrave;le pour l'&eacute;l&eacute;ment <code>liste</code> est pr&eacute;cis&eacute; avec <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#for_each"><b>xsl:for-each</b></a> pour chacun des &eacute;l&eacute;ments subordonn&eacute;s <code>element</code>, que leur contenu respectif qui est recherch&eacute; avec <code>&lt;xsl:value-of select=&quot;.&quot;&nbsp;/&gt;</code>, soit chacun transcrit en un &eacute;l&eacute;ment de liste HTML <code>li</code>.<br>
Avec <code>select=&quot;.&quot;</code> le contenu de l'&eacute;l&eacute;ment actuel est choisi. En r&egrave;gle g&eacute;n&eacute;rale s'applique pour l'affectation de valeur &agrave; l'attribut <code>select</code> la <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="syntaxexpath.htm"><b>syntaxe XPath</b></a>.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="variable">xsl:variable (d&eacute;finir une variable)</a></h2>

<p>D&eacute;finit une variable dont la valeur peut &ecirc;tre utilis&eacute;e dans le reste du processus.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>name=</code></td>
<td valign="top"><i>(obligatoire)</i> mentionne le nom de la variable. Sous ce nom, il peut &ecirc;tre acc&eacute;d&eacute; &agrave; sa valeur.</td>
</tr>
<tr>
<td valign="top"><code>select=</code></td>
<td valign="top"><i>(facultatif)</i> pr&eacute;cise une valeur pour la variable. Si cet attribut est not&eacute;, l'&eacute;l&eacute;ment <code>xsl:variable</code> doit &ecirc;tre vide. S'il n'est pas not&eacute;, l'affectation de valeur se fait comme contenu de l'&eacute;l&eacute;ment entre son rep&egrave;re d'ouverture et son rep&egrave;re de fermeture. Avec <code>select=</code> un &eacute;l&eacute;ment des donn&eacute;es de sortie XML peut par exemple &ecirc;tre choisi. M&ecirc;me l'occupation pr&eacute;alable avec du texte statique est possible par exemple avec <code>select=&quot;'nom:'&quot;</code> (Faire attention ici aux apostrophes int&eacute;rieures!).</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#stylesheet"><b>xsl:stylesheet</b></a> et peut &ecirc;tre not&eacute; aussi bien &agrave; l'int&eacute;rieur qu'&agrave; l'ext&eacute;rieur de <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#template"><b>xsl:template</b></a>. Not&eacute; &agrave; l'ext&eacute;rieur, c'est une variable globale, &agrave; la disposition de toutes les d&eacute;finitions de mod&egrave;les. Quand il est not&eacute; dans une d&eacute;finition de mod&egrave;le, c'est une variable locale &agrave; l'int&eacute;rieur du mod&egrave;le.</p>

<h3 class="xmp">Fichier d'exemple <var>variable.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/variable.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>variable.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/variable.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>variable.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;variable.xsl&quot; ?&gt;
&lt;test&gt;
 &lt;dicton&gt;
   C'est un large champ
 &lt;/dicton&gt;
 &lt;dicton&gt;
   La vie appartient � ceux qui se l�vent t�t
 &lt;/dicton&gt;
 &lt;dicton&gt;
   Qui se l�ve tard fait du lard
 &lt;/dicton&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>variable.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;xsl:apply-templates /&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match=&quot;dicton&quot;&gt;
 &lt;xsl:variable name=&quot;texteprecedent&quot;&gt;
  &lt;xsl:choose&gt;
   &lt;xsl:when test=&quot;position()=1&quot;&gt;Premier �l�ment: &lt;/xsl:when&gt;
   &lt;xsl:when test=&quot;position()=last()&quot;&gt;Dernier �l�ment: &lt;/xsl:when&gt;
   &lt;xsl:otherwise&gt;�l�ment: &lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
 &lt;/xsl:variable&gt;
 &lt;p&gt;&lt;b&gt;&lt;xsl:value-of select=&quot;$texteprecedent&quot;/&gt;&lt;/b&gt;&lt;br /&gt;
 &lt;xsl:value-of select=&quot;.&quot; /&gt;&lt;/p&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Les donn&eacute;es XML de l'exemple contiennent une s&eacute;rie de dictons.  Dans la feuille de style de l'exemple une variable nomm&eacute;e <code>texteprecedent</code> est d&eacute;finie &agrave; l'int&eacute;rieur de la d&eacute;finition de mod&egrave;le pour l'&eacute;l&eacute;ment <code>dicton</code>. Il s'agit d'une variable locale dont la valeur est recherch&eacute;e de fa&ccedil;on dynamique comme contenu entre le rep&egrave;re d'ouverture <code>&lt;xsl:variable...&gt;</code> et son pendant <code>&lt;/xsl:variable&gt;</code>. C'est &agrave; cela que sert une instruction <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#choose"><b>xsl:choose</b></a> pour laquelle il est recherch&eacute; par la fonction <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="fonctionsxpath.htm#position"><b>position()</b></a> s'il s'agit du premier dicton, du dernier ou d'un dicton interm&eacute;diaire. En fonction de ceci un  texte diff&eacute;rent est cr&eacute;&eacute;: <code>Premier &eacute;l&eacute;ment</code>, <code>Dernier &eacute;l&eacute;ment</code> ou simplement seulement <code>&Eacute;l&eacute;ment</code>. C'est la valeur qui est affect&eacute;e  &agrave; la variable <code>texteprecedent</code>. &Eacute;tant donn&eacute; que la d&eacute;finition de mod&egrave;le est appel&eacute;e &agrave; nouveau &agrave; chaque occurrence de l'&eacute;l&eacute;ment <code>dicton</code> la valeur de la variable sera recherch&eacute;e aussi &agrave; chaque fois.</p>




<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="when">xsl:when (condition &agrave; l'int&eacute;rieur d'un choix)</a></h2>

<p>D&eacute;finit une condition &agrave; l'int&eacute;rieur de l'instruction <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#choose"><b>xsl:choose</b></a> lors d'un choix multiple.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>test=</code></td>
<td valign="top"><i>(obligatoire)</i> formule la condition.</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <code>xsl:choose</code>.</p>

<p>Exemple avec explications voir <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#choose"><b>xsl:choose</b></a>, pour les conditions voir &eacute;galement <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#if"><b>xsl:if</b></a>.</p>





<table bgcolor="#EEEEEE" class="doc" width="100%"><tr><td>
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a><a href="#bottom"><img src="../../src/bas.gif" width="14" height="10" border="0" alt="vers le bas"></a>&#160;
</td></tr></table>

<h2 class="Sh2"><img src="../../src/xslt10.gif" width="30" height="30" border="0" alt="XSLT1.0">&nbsp;<a class="an" name="with_param">xsl:with-param (affecter une valeur &agrave; un param&egrave;tre)</a></h2>

<p>affecte une valeur &agrave; un param&egrave;tre et cela &agrave; l'appel d'une d&eacute;finition de mod&egrave;le. Dans la d&eacute;finition de mod&egrave;le appel&eacute;e et dans la mesure o&ugrave; le param&egrave;tre y est disponible, il est alors travaill&eacute; avec la valeur affect&eacute;e.</p>

<p>a les attributs suivants</p>

<table>
<tr>
<td valign="top"><code>name=</code></td>
<td valign="top"><i>(obligatoire)</i> mentionne le nom du param&egrave;tre. Le param&egrave;tre doit &ecirc;tre disponible sous ce nom dans une d&eacute;finition de mod&egrave;le. Pour que le param&egrave;tre y soit disponible, il doit &ecirc;tre d&eacute;fini avec <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#param"><b>xsl:param</b></a>.</td>
</tr>
<tr>
<td valign="top"><code>select=</code></td>
<td valign="top"><i>(facultatif)</i> affecte une valeur au param&egrave;tre. Avec <code>select=</code> un n&#339;ud des donn&eacute;es de sortie XML peut &ecirc;tre choisi. Ensuite la valeur affect&eacute;e est le contenu de ce n&#339;ud. Cela peut &ecirc;tre &eacute;galement une autre expression par exemple une formule de calcul. M&ecirc;me l'affectation de texte statique est possible, par exemple avec <code>select=&quot;'Nom'&quot;</code> (Faire attention ici aux apostrophes int&eacute;rieures!).</td>
</tr>
</table>

<p>Peut &ecirc;tre plac&eacute; dans <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#apply_templates"><b>xsl:apply-templates</b></a> ou bien <img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut">&nbsp;<a href="#call_template"><b>xsl:call-template</b></a>. La valeur affect&eacute;e est alors disponible dans les d&eacute;finitions de mod&egrave;les appel&eacute;es.</p>

<h3 class="xmp">Fichier d'exemple <var>with_param.xml</var>:</h3>

<p><img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/with_param.htm" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier de r&eacute;sultat <var>with_param.htm</var>)<br>
<img src="../../src/docf.gif" width="15" height="10" border="0" alt="D&eacute;monstration - nouvelle fen&ecirc;tre">&nbsp;<a href="affichage/with_param.xml" target="_blank"><b>Exemple d'affichage: aper&ccedil;u</b></a> (fichier <var>with_param.xml</var> - navigateur XML/XSLT indispensable)</p>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;with_param.xsl&quot; ?&gt;
&lt;test&gt;
 &lt;debut&gt;10&lt;/debut&gt;
 &lt;fin&gt;20&lt;/fin&gt;
&lt;/test&gt;
</pre></td></tr></table>

<h3 class="xmp">Fichier d'exemple <var>with_param.xsl</var>:</h3>

<table width="100%" cellpadding="10"><tr><td class="xmpcode" bgcolor="#FFFFE0"><pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;

&lt;xsl:template match=&quot;/&quot;&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;table border=&quot;1&quot;&gt;
  &lt;xsl:call-template name=&quot;boucle&quot;&gt;
    &lt;xsl:with-param name=&quot;compteur&quot; select=&quot;number(/test/debut)&quot; /&gt;
  &lt;/xsl:call-template&gt;
 &lt;/table&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template name=&quot;boucle&quot;&gt;
 &lt;xsl:param name=&quot;compteur&quot; /&gt;
 &lt;xsl:choose&gt;
  &lt;xsl:when test=&quot;$compteur &amp;lt;= number(/test/fin)&quot;&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;xsl:value-of select=&quot;$compteur&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;xsl:value-of select=&quot;$compteur * $compteur&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;xsl:call-template name=&quot;boucle&quot;&gt;
     &lt;xsl:with-param name=&quot;compteur&quot; select=&quot;$compteur + 1&quot; /&gt;
    &lt;/xsl:call-template&gt;
  &lt;/xsl:when&gt;
  &lt;xsl:otherwise&gt;
   &lt;xsl:call-template name=&quot;interruption&quot; /&gt;
  &lt;/xsl:otherwise&gt;
 &lt;/xsl:choose&gt;
&lt;/xsl:template&gt;

&lt;xsl:template name=&quot;interruption&quot;&gt;
 &lt;xsl:comment&gt;boucle termin�e!&lt;/xsl:comment&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</pre></td></tr></table>

<h3 class="xpl">Explication:</h3>

<p>Les donn&eacute;es XML de l'exemple d&eacute;finissent simplement un petit nombre et un nombre plus grand dont le premier repr&eacute;sente une valeur de d&eacute;part et le deuxi&egrave;me une valeur finale. Dans la feuille de style de l'exemple est cr&eacute;&eacute; &agrave; partir de ces nombres un tableau HTML; tous les nombres entre la valeur de d&eacute;part et la valeur finale seront chacun plac&eacute;s sur une rang&eacute;e du tableau avec son carr&eacute;. Pour cela est appel&eacute;e, dans la d&eacute;finition de mod&egrave;le pour l'&eacute;l&eacute;ment racine, une autre d&eacute;finition de mod&egrave;le nomm&eacute;e <code>boucle</code> avec <code>xsl:call-template</code>. &Agrave; l'int&eacute;rieur de cette instruction <code>xsl:call-template</code> est not&eacute;e une instruction <code>xsl:with-param</code> qui affecte &agrave; un param&egrave;tre nomm&eacute; <code>compteur</code> une valeur avec <code>select=</code>. Dans ce cas c'est le contenu de l'&eacute;l&eacute;ment <code>debut</code> (Chemin: <code>/test/debut</code>). L&agrave; on s'assure gr&acirc;ce &agrave; la fonction <img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information">&nbsp;<a href="fonctionsxpath.htm#number"><b>number()</b></a> que le contenu de l'&eacute;l&eacute;ment est interpr&eacute;t&eacute; comme nombre.<br>
Dans la d&eacute;finition de mod&egrave;le appel&eacute;e <code>boucle</code>, le param&egrave;tre nomm&eacute; <code>compteur</code> est d&eacute;fini  avec <code>&lt;xsl:param name=&quot;compteur&quot;&nbsp;/&gt;</code>. Il n'y a qu'ainsi qu'il est possible de travailler avec la valeur de ce param&egrave;tre qui lui a &eacute;t&eacute; transmise lorsqu'elle a &eacute;t&eacute; appel&eacute;e. Il y aurait une alternative qui serait de d&eacute;finir <code>compteur</code> comme variable globale.<br>
Avec <code>&lt;xsl:when test=&quot;$compteur &lt;= number(/test/fin)&quot;&gt;</code> Il est demand&eacute; si la valeur de  <code>compteur</code> est plus petite ou &eacute;gale  &agrave; la valeur sauvegard&eacute;e dans l'&eacute;l&eacute;ment <code>fin</code>. Si c'est le cas une rang&eacute;e de tableau est cr&eacute;&eacute;e qui sort la valeur et son carr&eacute;. Par ailleurs, le mod&egrave;le <code>boucle</code> s'appelle lui-m&ecirc;me en se renvoyant &agrave; nouveau le param&egrave;tre <code>compteur</code>. Celui-ci est incr&eacute;ment&eacute; de 1, de telle fa&ccedil;on que la d&eacute;finition de mod&egrave;le &agrave; son prochain appel, demande le chiffre imm&eacute;diatement sup&eacute;rieur.<br>
Si la valeur de l'&eacute;l&eacute;ment <code>fin</code> est d&eacute;pass&eacute;e, une d&eacute;finition de mod&egrave;le nomm&eacute;e <code>interruption</code> est appel&eacute;e qui pose somme toute un commentaire final dans le code HTML de sortie.</p>












<table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">
&#160;<a href="#top"><img src="../../src/haut.gif" width="14" height="10" border="0" alt="vers le haut"></a>
</td></tr>
<tr><td bgcolor="#EEEEEE" class="doc" align="right"><a href="syntaxexpath.htm"><img src="../../src/suivant.gif" width="10" height="10" border="0" hspace="10" alt="page suivante"></a></td>
<td bgcolor="#FFFFFF"><img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="syntaxexpath.htm"><b>Syntaxe XPath</b></a>
</td></tr>
<tr>
<td bgcolor="#EEEEEE" class="doc" align="right"><a href="exemplesxslt.htm"><img src="../../src/precedent.gif" width="10" height="10" border="0" hspace="10" alt="page pr&eacute;c&eacute;dente"></a></td>
<td bgcolor="#FFFFFF" width="100%"><img src="../../src/doc.gif" width="15" height="10" border="0" alt="Autre page d'information"> <a href="exemplesxslt.htm"><b>Exemples pour XSLT</b></a>
</td>
</tr>
<tr><td colspan="2" bgcolor="#EEEEEE" class="doc">&#160;</td></tr>
</table><table cellpadding="4" cellspacing="0" border="0" width="100%">
<tr>
<td bgcolor="#FFEEDD" class="nav"><a class="an" name="bottom"><img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"></a> <a href="../../index.htm"><b>SELFHTML</b></a>/<a href="../../navigation/index.htm" target="_parent">Aides &agrave; la navigation</a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="../index.htm"><b>XML/DTD</b></a> <img src="../../src/refchap.gif" width="16" height="13" border="0" alt="Renvoie au chapitre d'origine"> <a href="index.htm"><b>Repr&eacute;sentation de donn&eacute;es XML</b></a></td>
</tr>
</table>

<p>&copy; 2001 Stefan M&uuml;nz / &copy; 2003 Traduction <img src="../../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:13405@free.fr">Serge Fran&ccedil;ois, 13405@free.fr</a><br><img src="../../src/courriel.gif" width="15" height="10" border="0" alt="Adresse &eacute;lectronique">&nbsp;<a href="mailto:selfhtml@selfhtml.com.fr">selfhtml@selfhtml.com.fr</a></p>



</body>
</html>
